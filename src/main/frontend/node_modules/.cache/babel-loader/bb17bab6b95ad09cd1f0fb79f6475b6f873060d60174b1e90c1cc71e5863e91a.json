{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC190\\uD55C\\uC2B9\\\\Desktop\\\\project-subway\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\Nav.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let ctime = 0;\nconst Nav = () => {\n  _s();\n  const startStation = useSelector(state => state.startStation);\n  const endStation = useSelector(state => state.endStation);\n  const [currentTime, setCurrentTime] = useState(getCurrentTime()); // 현재 시간 상태 변수\n  const [dayType, setDayType] = useState(getDayType());\n  const [loading, setLoading] = useState(false); // 로딩 상태 변수\n  const navigate = useNavigate(); // useHistory 훅 사용\n  let ingtime = [0];\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchDataFromSpring = async () => {\n      try {\n        const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}`;\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        setResults(data);\n      } catch (error) {\n        console.error('데이터 가져오기 실패:', error);\n      }\n    };\n    if (startStation && endStation) {\n      fetchDataFromSpring();\n    }\n  }, [startStation, endStation]);\n\n  // 시간 문자열을 초로 변환하는 함수\n  const getCurrentTimeInSeconds = () => {\n    const now = new Date();\n    const hoursInSeconds = now.getHours() * 3600;\n    const minutesInSeconds = now.getMinutes() * 60;\n    const seconds = now.getSeconds();\n    return hoursInSeconds + minutesInSeconds + seconds;\n  };\n  if (ctime === 0) {\n    ctime = getCurrentTimeInSeconds();\n  }\n  const handleButtonClick = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      navigate('/Pre');\n    }, 1000);\n  };\n  const renderResults = () => {\n    return results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultsMap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"resultsHeader\",\n        children: [\"\\uAE38\\uCC3E\\uAE30 \\uACB0\\uACFC \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uCD9C\\uBC1C \\uC2DC\\uAC04: \", Math.floor(ctime / (60 * 60)), \"\\uC2DC \", Math.floor(ctime % (60 * 60) / 60), \"\\uBD84 \", Math.floor(ctime % 60), \"\\uCD08, (\", dayType, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualRepresentation\",\n        style: {\n          width: '1250px',\n          height: '30px',\n          backgroundColor: 'lightgray',\n          margin: '20px 0'\n        },\n        children: renderTransferBars(result)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"scheduleTime\",\n        children: [\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(\\uC2DC\\uAC04\\uD45C): \", Math.floor((ctime + result.totalTime) / (60 * 60)), \"\\uC2DC \", Math.floor((ctime + result.totalTime) % (60 * 60) / 60), \"\\uBD84 \", Math.floor((ctime + result.totalTime) % 60), \"\\uCD08\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), result.path && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"resultItem\",\n          children: [\"\\uAC78\\uB9AC\\uB294\\uC2DC\\uAC04: \", Math.floor(result.totalTime / 60), \"\\uBD84 \", Math.floor(result.totalTime % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), result.eachTypeOfLine.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"resultItem\",\n          children: [index + 1, \"\\uBC88 \\uD658\\uC2B9: \", line, \"(\", result.eachTransferStation[index], \") - \", Math.floor((ctime + ingtime[index]) / (60 * 60)), \"\\uC2DC \", Math.floor((ctime + ingtime[index]) % (60 * 60) / 60), \"\\uBD84 \", Math.floor((ctime + ingtime[index]) % 60), \"\\uCD08 \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this));\n  };\n  const renderTransferBars = result => {\n    const transferBars = [];\n    const iconSize = 20; // 이미지 크기\n    let i = 0;\n\n    // 환승역이 없는 경우 처리\n    if (result.eachTransferStation.length === 0) {\n      // 출발지에서 도착지까지 바로 이동하는 경우\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: '100%',\n          height: '30px',\n          backgroundColor: getLineColor(result.startLine),\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: train,\n          alt: \"subway\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(result.startLine)\n          },\n          children: [startStation, \"(\", result.startLine, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(result.startLine)\n          },\n          children: [Math.floor(result.totalTime / 60), \"\\uBD84 \", Math.floor(result.totalTime % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, `go${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this));\n      return transferBars;\n    }\n\n    // 각 막대의 비율 계산\n    const totalBarWidth = result.totalTime;\n    let accumulatedWidth = 0;\n    let tt = 0; // tt 변수 초기화\n\n    result.eachTypeOfLine.forEach((line, index) => {\n      const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n      const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n      const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n      ingtime[index] = 0;\n\n      // 각 막대의 총합이 1250이 되도록 비율 조정\n      const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n      const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n      const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n      const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${goBarWidth}px`,\n          height: '30px',\n          backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]),\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: train,\n          alt: \"subway\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedGoBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])\n          },\n          children: [Math.floor(result.eachTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachTime[index] % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])\n          },\n          children: [index === 0 ? startStation : result.eachTransferStation[index - 1], \"(\", index === 0 ? result.startLine : result.eachTypeOfLine[index - 1], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, `go${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this));\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${transferBarWidth}px`,\n          height: '30px',\n          backgroundColor: 'lightgray',\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: walk,\n          alt: \"walk\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedTransferBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: '#000'\n          },\n          children: [Math.floor(result.eachWalkingTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachWalkingTime[index] % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, `transfer${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this));\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${waitingBarWidth}px`,\n          height: '30px',\n          backgroundColor: 'red',\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: wait,\n          alt: \"wait\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedWaitingBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: '#000'\n          },\n          children: [Math.floor(result.eachWaitingTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachWaitingTime[index] % 60), \"\\uCD08 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, `wait${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this));\n      result.eachTime.forEach((_, index) => {\n        if (index === 0) {\n          ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n        } else {\n          ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n        }\n      });\n      accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n      tt = tt + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n    });\n\n    // 마지막 열차 막대 추가\n    const lastIndex = result.eachTypeOfLine.length - 1;\n    const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt : result.totalTime) / totalBarWidth * 1250;\n    const lastTotalWidth = lastGoBarWidth;\n    const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n    transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        width: `${lastGoBarWidth}px`,\n        height: '30px',\n        backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]),\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        overflow: 'visible'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: train,\n        alt: \"subway\",\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          maxWidth: `50px`,\n          maxHeight: '100%',\n          width: 'auto',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          left: '50%',\n          bottom: '-20px',\n          transform: 'translate(-50%, 0)',\n          color: getLineColor(result.eachTypeOfLine[lastIndex])\n        },\n        children: [Math.floor((result.totalTime - tt) / 60), \"\\uBD84 \", Math.floor(result.eachTime[lastIndex] % 60), \"\\uCD08\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '-20px',\n          transform: 'translate(-50%, 0)',\n          color: getLineColor(result.eachTypeOfLine[lastIndex])\n        },\n        children: [result.eachTransferStation[result.eachTransferStation.length - 1], \"(\", result.eachTypeOfLine[result.eachTypeOfLine.length - 1], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, `go${lastIndex}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this));\n    return transferBars;\n  };\n  const getLineColor = line => {\n    const lineColors = {\n      '1호선': '#0d3692',\n      '2호선': '#33a23d',\n      '3호선': '#fe5d10',\n      '4호선': '#00a2d1',\n      '5호선': '#8b50a4',\n      '6호선': '#c55c1d',\n      '7호선': '#54640d',\n      '8호선': '#f14c82'\n    };\n    return lineColors[line] || '#000'; // 기본 색상은 검정색\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    title: \"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",\n    description: \"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"resultsHeader\",\n        children: [\"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0 \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pre-but\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uB85C\\uB529 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleButtonClick,\n            style: {\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: 'pointer'\n            },\n            children: \"AI Predict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), startStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: [\"\\uCD9C\\uBC1C\\uC9C0: \", startStation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 38\n      }, this), endStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: [\"\\uB3C4\\uCC29\\uC9C0: \", endStation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 36\n      }, this), !startStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: \"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 39\n      }, this), !endStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: \"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), renderResults()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 13\n  }, this);\n};\n_s(Nav, \"nJq4q6f5iSvBkHiCPOZ/B4tO/YM=\", false, function () {\n  return [useSelector, useSelector, useNavigate];\n});\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ctime","Nav","_s","startStation","state","endStation","currentTime","setCurrentTime","dayType","setDayType","loading","setLoading","navigate","ingtime","results","setResults","fetchDataFromSpring","url","encodeURIComponent","response","fetch","method","headers","data","json","error","console","getCurrentTimeInSeconds","now","Date","hoursInSeconds","getHours","minutesInSeconds","getMinutes","seconds","getSeconds","handleButtonClick","setTimeout","renderResults","map","result","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","style","width","height","backgroundColor","margin","renderTransferBars","totalTime","path","eachTypeOfLine","line","eachTransferStation","transferBars","iconSize","i","length","push","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","color","bottom","totalBarWidth","accumulatedWidth","tt","forEach","goBarWidth","eachTime","transferBarWidth","eachWalkingTime","waitingBarWidth","eachWaitingTime","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","_","lastIndex","lastGoBarWidth","lastTotalWidth","lastAdjustedGoBarWidth","lineColors","title","description","onClick","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Nav.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nexport let ctime = 0;\n\nconst Nav = () => {\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n    const [currentTime, setCurrentTime] = useState(getCurrentTime()); // 현재 시간 상태 변수\n    const [dayType, setDayType] = useState(getDayType());\n    const [loading, setLoading] = useState(false); // 로딩 상태 변수\n    const navigate  = useNavigate(); // useHistory 훅 사용\n    let ingtime=[0];\n    const [results, setResults] = useState([]);\n\n\n    useEffect(() => {\n        const fetchDataFromSpring = async () => {\n            try {\n                const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}`;\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                });\n                const data = await response.json();\n                setResults(data);\n            } catch (error) {\n                console.error('데이터 가져오기 실패:', error);\n            }\n        };\n        if (startStation && endStation) {\n            fetchDataFromSpring();\n        }\n    }, [startStation, endStation]);\n    \n\n    \n\n    // 시간 문자열을 초로 변환하는 함수\n    const getCurrentTimeInSeconds = () => {\n        const now = new Date();\n        const hoursInSeconds = now.getHours() * 3600;\n        const minutesInSeconds = now.getMinutes() * 60;\n        const seconds = now.getSeconds();\n        return hoursInSeconds + minutesInSeconds + seconds;\n    };\n    \n    if (ctime === 0) {\n        ctime = getCurrentTimeInSeconds();\n    }\n\n    const handleButtonClick = () => {\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            navigate('/Pre');\n        }, 1000);\n    };\n    \n    \n\n    const renderResults = () => {\n        return results.map((result, index) => (\n            \n            <div key={index} className=\"resultsMap\">\n                <h1 className=\"resultsHeader\">길찾기 결과 {index + 1}</h1>\n                <h3>출발 시간: {Math.floor((ctime) / (60*60))}시 {Math.floor((ctime) % (60*60)/60)}분 {Math.floor((ctime)% 60)}초, ({dayType})</h3>\n                <div className=\"visualRepresentation\" style={{ width: '1250px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\n                    {renderTransferBars(result)}\n                </div>\n                <p className=\"scheduleTime\">도착 시간(시간표): {Math.floor((ctime+result.totalTime) / (60*60))}시 {Math.floor((ctime+result.totalTime) % (60*60)/60)}분 {Math.floor((ctime+result.totalTime)% 60)}초</p>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">걸리는시간: {Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</p>\n                        {result.eachTypeOfLine.map((line, index) => (\n                            <p key={index} className=\"resultItem\">{index + 1}번 환승: {line}({result.eachTransferStation[index]}) - {Math.floor((ctime+ingtime[index]) / (60*60))}시 {Math.floor((ctime+ingtime[index]) % (60*60)/60)}분 {Math.floor((ctime+ingtime[index])% 60)}초 열차 탑승</p>\n                        ))}\n                    </>\n                )}\n            </div>\n        ));\n    };\n\n    const renderTransferBars = (result) => {\n        const transferBars = [];\n        const iconSize = 20; // 이미지 크기\n        let i = 0;\n    \n        // 환승역이 없는 경우 처리\n        if (result.eachTransferStation.length === 0) {\n            // 출발지에서 도착지까지 바로 이동하는 경우\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{startStation}({result.startLine})</span>\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</span>\n                </div>\n            );\n            return transferBars;\n        }\n    \n        // 각 막대의 비율 계산\n    const totalBarWidth = result.totalTime;\n    let accumulatedWidth = 0;\n    let tt = 0; // tt 변수 초기화\n    \n\n    result.eachTypeOfLine.forEach((line, index) => {\n        const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n        const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n        const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n        ingtime[index]=0;\n\n        // 각 막대의 총합이 1250이 되도록 비율 조정\n        const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n        const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n        const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n        const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n            \n    \n            transferBars.push(\n                <div key={`go${index}`} style={{ display: 'inline-block', width: `${goBarWidth}px`, height: '30px', backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{Math.floor(result.eachTime[index] / 60)}분 {Math.floor(result.eachTime[index] % 60)}초</span>\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{(index === 0 ? startStation : result.eachTransferStation[index - 1])}({(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])})</span>\n                </div>\n            );\n    \n            transferBars.push(\n                <div key={`transfer${index}`} style={{ display: 'inline-block', width: `${transferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedTransferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[index] / 60)}분 {Math.floor(result.eachWalkingTime[index] % 60)}초</span>\n                </div>\n            );\n    \n            transferBars.push(\n                <div key={`wait${index}`} style={{ display: 'inline-block', width: `${waitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedWaitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[index] / 60)}분 {Math.floor(result.eachWaitingTime[index] % 60)}초 </span>\n                </div>\n            );\n            result.eachTime.forEach((_, index) => {\n                if (index === 0) {\n                    ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                } else {\n                    ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                }\n            });\n\n            accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n            tt = tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];\n        });\n    \n        // 마지막 열차 막대 추가\n        const lastIndex = result.eachTypeOfLine.length - 1; \n        const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt: result.totalTime) / totalBarWidth * 1250;\n        const lastTotalWidth = lastGoBarWidth;\n\n        const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n        transferBars.push(\n            <div key={`go${lastIndex}`} style={{ display: 'inline-block', width: `${lastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `50px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{Math.floor((result.totalTime - tt)/ 60)}분 {Math.floor(result.eachTime[lastIndex] % 60)}초</span>\n                <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{result.eachTransferStation[result.eachTransferStation.length - 1]}({result.eachTypeOfLine[result.eachTypeOfLine.length - 1]})</span>\n                </div>\n        );\n        return transferBars;\n    };\n        const getLineColor = (line) => {\n            const lineColors = {\n                '1호선': '#0d3692',\n                '2호선': '#33a23d',\n                '3호선': '#fe5d10',\n                '4호선': '#00a2d1',\n                '5호선': '#8b50a4',\n                '6호선': '#c55c1d',\n                '7호선': '#54640d',\n                '8호선': '#f14c82',\n            };\n            return lineColors[line] || '#000'; // 기본 색상은 검정색\n        };\n\n        \n\n\n        return (\n            <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\n                \n                <div className=\"resultsContainer\">\n                    <h1 className=\"resultsHeader\">출발지/도착지 <p className=\"pre-but\">\n                {loading ? (\n                    <div>로딩 중...</div>\n                ) : (\n                    <button onClick={handleButtonClick} style={{ backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '8px', cursor: 'pointer' }}>AI Predict</button>\n                )}\n            </p></h1> \n                    {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\n                    {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\n                    {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\n                    {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\n                </div>\n                \n                {renderResults()}\n            </Main>\n        );\n        };\n\nexport default Nav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}