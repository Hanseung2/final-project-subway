{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Main from'../components/section/Main';import{useSelector}from'react-redux';import{getCurrentTime,getDayType}from'../data/time';import train from'../assets/img/nav/train.png';import wait from'../assets/img/nav/waiting.png';import walk from'../assets/img/nav/walk.png';import{Link,useNavigate,useLocation}from'react-router-dom';// React Router를 사용한다고 가정합니다.\nimport{ctime}from'./Nav';import{useTime}from'../data/TimeContext';import{navPath}from'./Nav';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Pre=function Pre(){var startStation=useSelector(function(state){return state.startStation;});var endStation=useSelector(function(state){return state.endStation;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];// 로딩 상태 변수\nvar navigate=useNavigate();// useHistory 훅 사용\nvar ingtime=[0];var _useTime=useTime(),hour=_useTime.hour,minute=_useTime.minute,weekday=_useTime.weekday;var currentTime=ctime;var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),result=_useState4[0],setResult=_useState4[1];var location=useLocation();console.log(navPath);useEffect(function(){var _location$state;// 첫 번째 서비스에서 전달된 데이터\nvar firstServiceData=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.results;// 데이터가 존재하는 경우에만 두 번째 서비스 호출\nif(firstServiceData){var fetchSecondServiceData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,response,secondServiceData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;url=\"http://localhost:8080/Predict?day=\".concat(encodeURIComponent(weekday));_context.next=4;return fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(firstServiceData)});case 4:response=_context.sent;_context.next=7;return response.json();case 7:secondServiceData=_context.sent;setResult(secondServiceData);console.log('두 번째 서비스 응답 데이터:',secondServiceData);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error('두 번째 서비스 요청 실패:',_context.t0);case 15:case\"end\":return _context.stop();}},_callee,null,[[0,12]]);}));return function fetchSecondServiceData(){return _ref.apply(this,arguments);};}();fetchSecondServiceData();}},[location]);var renderResults=function renderResults(){return result.map(function(result,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"resultsMap\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"resultsHeader\",children:[\"AI \\uC608\\uCE21 \\uAE38\\uCC3E\\uAE30 \\uACB0\\uACFC \",index+1]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uCD9C\\uBC1C \\uC2DC\\uAC04: \",Math.floor(currentTime/(60*60)),\"\\uC2DC \",Math.floor(currentTime%(60*60)/60),\"\\uBD84 \",Math.floor(currentTime%60),\"\\uCD08, (\",weekday,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"scheduleTime\",children:[\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(AI): \",Math.floor((currentTime+result.totalTime)/(60*60)),\"\\uC2DC \",Math.floor((currentTime+result.totalTime)%(60*60)/60),\"\\uBD84 \",Math.floor((currentTime+result.totalTime)%60),\"\\uCD08\"]}),result.path&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uACBD\\uB85C: \",result.path.map(function(place,index){// eachTransferStation 배열에 포함된 역인지 확인\nif(result.eachTransferStation&&result.eachTransferStation.includes(place)){return/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:place},index);}else{return/*#__PURE__*/_jsx(\"span\",{children:place},index);}}).reduce(function(prev,curr){return[prev,' -> ',curr];})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"visualRepresentation\",style:{width:'1250px',height:'30px',backgroundColor:'lightgray',margin:'20px 0'},children:renderTransferBars(result)}),result.path&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uAC78\\uB9AC\\uB294\\uC2DC\\uAC04: \",Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08\"]}),result.eachTypeOfLine.map(function(line,index){return/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[index+1,\"\\uBC88 \\uD658\\uC2B9: \",line,\"(\",result.eachTransferStation[index],\") - \",Math.floor((currentTime+ingtime[index])/(60*60)),\"\\uC2DC \",Math.floor((currentTime+ingtime[index])%(60*60)/60),\"\\uBD84 \",Math.floor((currentTime+ingtime[index])%60),\"\\uCD08 \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]},index);})]})]},index);});};var renderTransferBars=function renderTransferBars(result){var transferBars=[];var iconSize=20;// 이미지 크기\nvar i=0;// 환승역이 없는 경우 처리\nif(result.eachTransferStation.length===0){// 출발지에서 도착지까지 바로 이동하는 경우\ntransferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:'100%',height:'30px',backgroundColor:getLineColor(result.startLine),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:'100%',maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[startStation,\"(\",result.startLine,\")\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08\"]})]},\"go\".concat(i)));return transferBars;}// 각 막대의 비율 계산\nvar totalBarWidth=result.totalTime;var accumulatedWidth=0;var tt=0;// tt 변수 초기화\nresult.eachTypeOfLine.forEach(function(line,index){var goBarWidth=result.eachTime[index]/totalBarWidth*1250;var transferBarWidth=result.eachWalkingTime[index]/totalBarWidth*1250;var waitingBarWidth=result.eachWaitingTime[index]/totalBarWidth*1250;ingtime[index]=0;// 각 막대의 총합이 1250이 되도록 비율 조정\nvar totalRatio=goBarWidth+transferBarWidth+waitingBarWidth;var adjustedGoBarWidth=goBarWidth/totalRatio*1250;var adjustedTransferBarWidth=transferBarWidth/totalRatio*1250;var adjustedWaitingBarWidth=waitingBarWidth/totalRatio*1250;transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(goBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedGoBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[Math.floor(result.eachTime[index]/60),\"\\uBD84 \",Math.floor(result.eachTime[index]%60),\"\\uCD08\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[index===0?startStation:result.eachTransferStation[index-1],\"(\",index===0?result.startLine:result.eachTypeOfLine[index-1],\")\"]})]},\"go\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(transferBarWidth,\"px\"),height:'30px',backgroundColor:'lightgray',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:walk,alt:\"walk\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedTransferBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWalkingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWalkingTime[index]%60),\"\\uCD08\"]})]},\"transfer\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(waitingBarWidth,\"px\"),height:'30px',backgroundColor:'red',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:wait,alt:\"wait\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedWaitingBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWaitingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWaitingTime[index]%60),\"\\uCD08 \"]})]},\"wait\".concat(index)));result.eachTime.forEach(function(_,index){if(index===0){ingtime[index]=result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];}else{ingtime[index]=ingtime[index-1]+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];}});accumulatedWidth+=adjustedGoBarWidth+adjustedTransferBarWidth+adjustedWaitingBarWidth;tt=tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];});// 마지막 열차 막대 추가\nvar lastIndex=result.eachTypeOfLine.length-1;var lastGoBarWidth=(result.eachTime[lastIndex]!==0?result.totalTime-tt:result.totalTime)/totalBarWidth*1250;var lastTotalWidth=lastGoBarWidth;var lastAdjustedGoBarWidth=lastGoBarWidth/lastTotalWidth*(1250-accumulatedWidth);transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(lastGoBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(result.eachTypeOfLine[lastIndex]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"50px\",maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[Math.floor((result.totalTime-tt)/60),\"\\uBD84 \",Math.floor(result.eachTime[lastIndex]%60),\"\\uCD08\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[result.eachTransferStation[result.eachTransferStation.length-1],\"(\",result.eachTypeOfLine[result.eachTypeOfLine.length-1],\")\"]})]},\"go\".concat(lastIndex)));return transferBars;};var getLineColor=function getLineColor(line){var lineColors={'1호선':'#0d3692','2호선':'#33a23d','3호선':'#fe5d10','4호선':'#00a2d1','5호선':'#8b50a4','6호선':'#c55c1d','7호선':'#54640d','8호선':'#f14c82'};return lineColors[line]||'#000';// 기본 색상은 검정색\n};return/*#__PURE__*/_jsxs(Main,{title:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",description:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"resultsContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"resultsHeader\",children:\"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0\"}),\" \",/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC124\\uC815\\uB41C \\uC2DC\\uAC04: \",hour,\"\\uC2DC \",minute,\"\\uBD84 (\",weekday,\")\"]}),startStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uCD9C\\uBC1C\\uC9C0: \",startStation]}),endStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uB3C4\\uCC29\\uC9C0: \",endStation]}),!startStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),!endStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),renderResults()]});};export default Pre;","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","Link","useNavigate","useLocation","ctime","useTime","navPath","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Pre","startStation","state","endStation","_useState","_useState2","_slicedToArray","loading","setLoading","navigate","ingtime","_useTime","hour","minute","weekday","currentTime","_useState3","_useState4","result","setResult","location","console","log","_location$state","firstServiceData","results","fetchSecondServiceData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","secondServiceData","wrap","_callee$","_context","prev","next","concat","encodeURIComponent","fetch","method","headers","body","JSON","stringify","sent","json","t0","error","stop","apply","arguments","renderResults","map","index","className","children","Math","floor","totalTime","path","place","eachTransferStation","includes","style","color","reduce","curr","width","height","backgroundColor","margin","renderTransferBars","eachTypeOfLine","line","transferBars","iconSize","i","length","push","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","bottom","totalBarWidth","accumulatedWidth","tt","forEach","goBarWidth","eachTime","transferBarWidth","eachWalkingTime","waitingBarWidth","eachWaitingTime","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","_","lastIndex","lastGoBarWidth","lastTotalWidth","lastAdjustedGoBarWidth","lineColors","title","description"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Pre.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate,useLocation } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nimport { ctime } from './Nav';\nimport { useTime } from '../data/TimeContext';\nimport { navPath } from './Nav';\n\nconst Pre = () => {\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n    const [loading, setLoading] = useState(false); // 로딩 상태 변수\n    const navigate  = useNavigate(); // useHistory 훅 사용\n    let ingtime=[0];\n    const { hour, minute, weekday } = useTime();\n    const currentTime = ctime;\n    const [result, setResult] = useState([]);\n\n\n\n    const location = useLocation();\n\n    console.log(navPath);\n\n\n    useEffect(() => {\n        // 첫 번째 서비스에서 전달된 데이터\n        const firstServiceData = location.state?.results;\n\n        // 데이터가 존재하는 경우에만 두 번째 서비스 호출\n        if (firstServiceData) {\n            const fetchSecondServiceData = async () => {\n                try {\n                    const url = `http://localhost:8080/Predict?day=${encodeURIComponent(weekday)}`;\n                    const response = await fetch(url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify(firstServiceData),\n                    });\n                    const secondServiceData = await response.json();\n                    setResult(secondServiceData);\n                    console.log('두 번째 서비스 응답 데이터:', secondServiceData);\n                } catch (error) {\n                    console.error('두 번째 서비스 요청 실패:', error);\n                }\n            };\n\n            fetchSecondServiceData();\n        }\n    }, [location]);\n\n    const renderResults = () => {\n        return result.map((result, index) => (\n\n\n            <div key={index} className=\"resultsMap\">\n                <h1 className=\"resultsHeader\">AI 예측 길찾기 결과 {index + 1}</h1>\n                <h3>출발 시간: {Math.floor((currentTime) / (60*60))}시 {Math.floor((currentTime) % (60*60)/60)}분 {Math.floor((currentTime)% 60)}초, ({weekday})</h3>\n                <p className=\"scheduleTime\">도착 시간(AI): {Math.floor((currentTime+result.totalTime) / (60*60))}시 {Math.floor((currentTime+result.totalTime) % (60*60)/60)}분 {Math.floor((currentTime+result.totalTime)% 60)}초</p>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">경로: {result.path.map((place, index) => {\n                            // eachTransferStation 배열에 포함된 역인지 확인\n                            if (result.eachTransferStation && result.eachTransferStation.includes(place)) {\n                                return <span key={index} style={{ color: 'red' }}>{place}</span>;\n                            } else {\n                                return <span key={index}>{place}</span>;\n                            }\n                        }).reduce((prev, curr) => [prev, ' -> ', curr])}</p>\n                    </>\n                )}\n                <div className=\"visualRepresentation\" style={{ width: '1250px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\n                    {renderTransferBars(result)}\n                </div>\n\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">걸리는시간: {Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</p>\n                        {result.eachTypeOfLine.map((line, index) => (\n                            <p key={index} className=\"resultItem\">{index + 1}번 환승: {line}({result.eachTransferStation[index]}) - {Math.floor((currentTime+ingtime[index]) / (60*60))}시 {Math.floor((currentTime+ingtime[index]) % (60*60)/60)}분 {Math.floor((currentTime+ingtime[index])% 60)}초 열차 탑승</p>\n                        ))}\n                    </>\n                )}\n            </div>\n        ));\n    };\n\n    const renderTransferBars = (result) => {\n        const transferBars = [];\n        const iconSize = 20; // 이미지 크기\n        let i = 0;\n\n        // 환승역이 없는 경우 처리\n        if (result.eachTransferStation.length === 0) {\n            // 출발지에서 도착지까지 바로 이동하는 경우\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{startStation}({result.startLine})</span>\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</span>\n                </div>\n            );\n            return transferBars;\n        }\n\n        // 각 막대의 비율 계산\n        const totalBarWidth = result.totalTime;\n        let accumulatedWidth = 0;\n        let tt = 0; // tt 변수 초기화\n\n\n        result.eachTypeOfLine.forEach((line, index) => {\n            const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n            const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n            const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n            ingtime[index]=0;\n\n            // 각 막대의 총합이 1250이 되도록 비율 조정\n            const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n            const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n            const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n            const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n\n\n            transferBars.push(\n                <div key={`go${index}`} style={{ display: 'inline-block', width: `${goBarWidth}px`, height: '30px', backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{Math.floor(result.eachTime[index] / 60)}분 {Math.floor(result.eachTime[index] % 60)}초</span>\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{(index === 0 ? startStation : result.eachTransferStation[index - 1])}({(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])})</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`transfer${index}`} style={{ display: 'inline-block', width: `${transferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedTransferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[index] / 60)}분 {Math.floor(result.eachWalkingTime[index] % 60)}초</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`wait${index}`} style={{ display: 'inline-block', width: `${waitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedWaitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[index] / 60)}분 {Math.floor(result.eachWaitingTime[index] % 60)}초 </span>\n                </div>\n            );\n            result.eachTime.forEach((_, index) => {\n                if (index === 0) {\n                    ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                } else {\n                    ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                }\n            });\n\n            accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n            tt = tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];\n        });\n\n        // 마지막 열차 막대 추가\n        const lastIndex = result.eachTypeOfLine.length - 1;\n        const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt: result.totalTime) / totalBarWidth * 1250;\n        const lastTotalWidth = lastGoBarWidth;\n\n        const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n        transferBars.push(\n            <div key={`go${lastIndex}`} style={{ display: 'inline-block', width: `${lastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `50px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{Math.floor((result.totalTime - tt)/ 60)}분 {Math.floor(result.eachTime[lastIndex] % 60)}초</span>\n                <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{result.eachTransferStation[result.eachTransferStation.length - 1]}({result.eachTypeOfLine[result.eachTypeOfLine.length - 1]})</span>\n            </div>\n        );\n        return transferBars;\n    };\n    const getLineColor = (line) => {\n        const lineColors = {\n            '1호선': '#0d3692',\n            '2호선': '#33a23d',\n            '3호선': '#fe5d10',\n            '4호선': '#00a2d1',\n            '5호선': '#8b50a4',\n            '6호선': '#c55c1d',\n            '7호선': '#54640d',\n            '8호선': '#f14c82',\n        };\n        return lineColors[line] || '#000'; // 기본 색상은 검정색\n    };\n\n\n\n    return (\n        <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\n\n            <div className=\"resultsContainer\">\n                <h1 className=\"resultsHeader\">출발지/도착지</h1> <p>설정된 시간: {hour}시 {minute}분 ({weekday})</p>\n                {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\n                {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\n                {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\n                {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\n            </div>\n\n            {renderResults()}\n        </Main>\n    );\n};\n\nexport default Pre;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}