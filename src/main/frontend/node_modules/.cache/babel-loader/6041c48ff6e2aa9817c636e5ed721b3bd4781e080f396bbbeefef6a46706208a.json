{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC190\\uD55C\\uC2B9\\\\Desktop\\\\project-subway\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\Routemap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as d3 from 'd3';\nimport subwayData from '../data/route.json';\nimport Main from '../components/section/Main';\nimport mark from '../assets/img/icon/환승역_마크.png';\nimport { IoSearch } from \"react-icons/io5\";\nimport { setStartStation, setEndStation } from '../data/actions';\nimport Right from '../components/section/Right'; // 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Routemap = () => {\n  _s();\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [departureStation, setDepartureStation] = useState(null);\n  const [arrivalStation, setArrivalStation] = useState(null);\n  const [isRightVisible, setIsRightVisible] = useState(false); // 추가\n  const [stationName, setStationName] = useState(null);\n  const [suggestions, setSuggestions] = useState([]); // Define suggestions state\n  const [searchedStationX, setSearchedStationX] = useState(null);\n  const [searchedStationY, setSearchedStationY] = useState(null);\n  // 제안 항목 클릭 처리 함수\n  const handleSuggestionItemClick = suggestion => {\n    // '-' 포함 여부 확인하고 이후 문자열 제거\n    const sanitizedSuggestion = suggestion.includes('-') ? suggestion.split('-')[0].trim() : suggestion;\n    setSearchTerm(sanitizedSuggestion); // 정제된 제안을 검색어로 설정\n    setSuggestions([]); // 제안 목록 초기화\n  };\n\n  // Function to handle search term change\n  const handleSearchTermChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value); // Update search term state\n\n    // Filter subway stations based on the search term\n    const filteredStations = subwayData.filter(station => station.name.includes(value)).slice(0, 3); // Slice the array to get only the first 3 elements\n    setSuggestions(filteredStations.map(station => `${station.name} - ${station.line}`));\n  };\n  const toggleRightVisibility = (name = null) => {\n    setIsRightVisible(!isRightVisible);\n    setStationName(name);\n  };\n  useEffect(() => {\n    const svg = d3.select(ref.current).on(\"click\", () => {\n      d3.select(\".tooltip\").remove();\n    }, true).attr('width', 1500).attr('height', 1800);\n    svg.selectAll(\"*\").remove();\n    const svgContainer = svg.append(\"g\").attr(\"id\", \"svg-container\");\n\n    // 줌 기능 추가\n    const zoom = d3.zoom().scaleExtent([0.5, 5]) // 줌 범위 설정\n    .on('zoom', event => {\n      svgContainer.attr('transform', event.transform);\n    });\n    svg.call(zoom);\n\n    // 스케일 설정\n    const xScale = d3.scaleLinear().domain(d3.extent(subwayData, d => parseFloat(d.x))).range([0, 500]);\n    const yScale = d3.scaleLinear().domain(d3.extent(subwayData, d => parseFloat(d.y))).range([500, 0]);\n\n    // 노선별 색상 설정\n    const lineColor = line => {\n      if (line === \"1호선\") return \"#0D3692\";\n      if (line === \"1호선1\") return \"#0D3692\";\n      if (line === \"2호선\") return \"#33A23D\";\n      if (line === \"2호선1\") return \"#33A23D\";\n      if (line === \"2호선2\") return \"#33A23D\";\n      if (line === \"3호선\") return \"#FE5B10\";\n      if (line === \"4호선\") return \"#00A2D1\";\n      if (line === \"5호선\") return \"#8B50A4\";\n      if (line === \"5호선1\") return \"#8B50A4\";\n      if (line === \"6호선\") return \"#C55C1D\";\n      if (line === \"6호선1\") return \"#C55C1D\";\n      if (line === \"7호선\") return \"#54640D\";\n      if (line === \"8호선\") return \"#F14C82\";\n      if (line === \"9호선\") return \"#AA9872\";\n      if (line === \"수인분당선\") return \"#FFEB2A\";\n      if (line === \"경의중앙선\") return \"#72C7A6\";\n      if (line === \"경의중앙선1\") return \"#72C7A6\";\n      if (line === \"경춘선\") return \"#2ABFD0\";\n      if (line === \"공항철도1호선\") return \"#0065B3\";\n      if (line === \"신림선\") return \"#6789CA\";\n      if (line === \"우이신설선\") return \"#B7C452\";\n      if (line === \"김포골드라인\") return \"#AD8605\";\n      return \"black\"; // 기본 색상\n    };\n\n    // 데이터를 라인별로 그룹화\n    const groupedData = d3.group(subwayData, d => d.line);\n\n    // 각 그룹(라인)을 순회하고 선과 원을 그립니다\n    for (const [line, lineData] of groupedData) {\n      const lineGenerator = d3.line().x(d => xScale(parseFloat(d.x)) * 4).y(d => yScale(parseFloat(d.y)) * 3.7 - 200).curve(d3.curveLinear);\n      svgContainer.append(\"path\").datum(lineData).attr(\"fill\", \"none\").attr(\"stroke\", lineColor(line)).attr(\"stroke-width\", 7).attr(\"d\", lineGenerator);\n\n      // 각 라인에 대한 원(역) 추가\n      svgContainer.selectAll(`.station-${line}`) // 라인별로 클래스를 구분하여 선택\n      .data(lineData).enter().append(\"circle\").attr(\"class\", `station station-${line}`) // 라인별 클래스 추가\n      .attr(\"cx\", d => xScale(parseFloat(d.x)) * 4) // x 좌표에 3을 곱하여 3배로 확장\n      .attr(\"cy\", d => yScale(parseFloat(d.y)) * 3.7 - 200) // y 좌표에 3을 곱하여 3배로 확장\n      .attr(\"r\", 10).attr(\"fill\", d => lineColor(line)) // 동그라미의 색상을 라인의 색상에 따라 설정\n      .attr(\"stroke\", lineColor(line)).attr(\"stroke-width\", 1).on(\"click\", function (event, d) {\n        event.stopPropagation(); // 이벤트 버블링 방지\n        const [clickX, clickY] = d3.pointer(event, svg.node());\n        showTooltip(d, clickX, clickY);\n      });\n    }\n\n    // 중복된 역을 찾아 환승 역 이미지를 추가합니다.\n    const transferStationsData = subwayData.filter((d, i) => {\n      return subwayData.findIndex(e => e.name === d.name && e.line[0] !== d.line[0]) !== -1;\n    });\n\n    // 환승역 이미지를 추가합니다.\n    const transferStations = svgContainer.selectAll(\".transfer-station\").data(transferStationsData).enter().append(\"image\").attr(\"class\", \"transfer-station\").attr(\"xlink:href\", mark) // 환승역 이미지 파일 경로로 수정해주세요\n    .attr(\"width\", 20).attr(\"height\", 20).attr(\"x\", d => xScale(parseFloat(d.x)) * 4 - 10) // 이미지 중심을 원점으로 설정하기 위해 가로폭의 절반만큼 왼쪽으로 이동\n    .attr(\"y\", d => yScale(parseFloat(d.y)) * 3.7 - 200 - 10); // 이미지 중심을 원점으로 설정하기 위해 세로폭의 절반만큼 위쪽으로 이동\n\n    // 이미지 위에 툴팁을 표시할 수 있도록 설정합니다.\n    transferStations.on(\"click\", function (event, d) {\n      const [clickX, clickY] = d3.pointer(event, svg.node());\n      showTooltip(d, clickX, clickY);\n\n      // 다른 곳을 클릭했을 때 툴팁을 제거합니다.\n      d3.select(\"body\").on(\"click.tooltip\", function () {\n        d3.select(\".tooltip\").remove();\n        d3.select(\"body\").on(\"click.tooltip\", null); // 이벤트 핸들러를 제거하여 메모리 누수를 방지합니다.\n      });\n    });\n\n    // 각 역 이름 추가\n    svgContainer.selectAll(\".station-name\").data(subwayData).enter().append(\"text\").attr(\"class\", \"station-name\").attr(\"x\", d => xScale(parseFloat(d.x)) * 4) // 역 이름에도 2를 곱하여 2배로 확장\n    .attr(\"y\", d => yScale(parseFloat(d.y)) * 3.7 - 200 + 30) // 역 이름에도 2를 곱하여 2배로 확장\n    .attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"18px\").attr(\"fill\", \"black\").attr(\"font-weight\", \"bold\") // 굵은 텍스트 설정\n    .text(d => d.name);\n\n    // 말풍선 표시 함수\n    const showTooltip = (data, x, y) => {\n      d3.select(\".tooltip\").remove(); // 기존 툴팁 제거\n\n      const tooltip = svg.append(\"g\").attr(\"class\", \"tooltip\").attr(\"transform\", `translate(${x}, ${y})`);\n      tooltip.append(\"rect\").attr(\"width\", 600).attr(\"height\", 200) // Increased height to accommodate the new button\n      .attr(\"x\", -140).attr(\"y\", 0).attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      tooltip.append(\"text\").attr(\"x\", 150).attr(\"y\", 60).attr(\"font-size\", \"30px\") // 텍스트 크기 증가\n      .attr(\"text-anchor\", \"middle\").text(data.name);\n\n      // 버튼 데이터 배열\n      const buttons = [{\n        text: '출발',\n        x: -70,\n        y: 120,\n        color: '#90ee90'\n      },\n      // Green color for 출발 button\n      {\n        text: '도착',\n        x: 60,\n        y: 120,\n        color: '#f0f0f0'\n      },\n      // Gray color for 도착 button\n      {\n        text: '실시간 도착정보',\n        x: 190,\n        y: 120,\n        color: '#ff6347',\n        width: 280,\n        newx: 285\n      } // Red color for 실시간 도착정보 button\n      ];\n\n      // 버튼 생성\n      buttons.forEach(button => {\n        // 버튼 배경\n        tooltip.append(\"rect\").attr(\"x\", button.x - 45).attr(\"y\", button.y - 30).attr(\"width\", button.width || 100).attr(\"height\", 60).attr(\"fill\", button.color).attr(\"rx\", 5) // 둥근 모서리\n        .style(\"cursor\", \"pointer\").on(\"click\", () => {\n          if (button.text === \"닫기\") {\n            tooltip.remove();\n          } else {\n            if (button.text === \"출발\") {\n              setDepartureStation(data.name);\n              dispatch(setStartStation(data.name)); // Redux store 업데이트\n            } else if (button.text === \"도착\") {\n              setArrivalStation(data.name);\n              dispatch(setEndStation(data.name)); // Redux store 업데이트\n            } else if (button.text === \"실시간 도착정보\") {\n              toggleRightVisibility(data.name);\n            }\n          }\n        });\n\n        // 버튼 텍스트\n        tooltip.append(\"text\").attr(\"x\", button.newx || button.x).attr(\"y\", button.y).attr(\"text-anchor\", \"middle\").attr(\"alignment-baseline\", \"middle\").attr(\"font-size\", \"18px\") // 텍스트 크기 증가\n        .text(button.text).style(\"cursor\", \"pointer\").on(\"click\", () => {\n          if (button.text === \"닫기\") {\n            tooltip.remove();\n          } else {}\n        });\n      });\n    };\n\n    // 빨간색 원을 저장할 변수\n    let highlightedCircle;\n    function removeHighlightedCircle() {\n      if (highlightedCircle) {\n        highlightedCircle.remove();\n        highlightedCircle = null;\n      }\n    }\n\n    // 검색어 처리 로직\n    if (isSearching && searchTerm.trim() !== '') {\n      const searchedStation = subwayData.find(station => station.name.includes(searchTerm.trim()));\n      if (searchedStation) {\n        // 검색된 역의 위치에 말풍선 표시\n        const [searchedX, searchedY] = [xScale(parseFloat(searchedStation.x)) * 4 + 100, yScale(parseFloat(searchedStation.y)) * 3.7 - 200];\n        setSearchedStationX(searchedX);\n        setSearchedStationY(searchedY);\n        showTooltip(searchedStation, searchedX, searchedY);\n        svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(750 / 2 - searchedX, 500 / 2 - searchedY).scale(2));\n\n        // 이전에 강조된 원이 있으면 제거\n        removeHighlightedCircle();\n\n        // 검색된 역의 위치에 빨간색 원 추가\n        svg.append(\"circle\").attr(\"cx\", searchedX + 175).attr(\"cy\", searchedY + 250).attr(\"r\", 28) // 반지름 크기 조절\n        .attr(\"fill\", \"red\") // 빨간색으로 채우기\n        .attr(\"stroke\", \"black\").attr(\"stroke-width\", 1).on(\"click\", (event, d) => {\n          event.stopPropagation(); // 이벤트 버블링 방지\n          showTooltip(searchedStation, searchedX, searchedY);\n        });\n      }\n    }\n  }, [isSearching, searchTerm, dispatch]);\n  const handleSearch = e => {\n    e.preventDefault();\n    setIsSearching(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Main, {\n    title: \"\\uC9C0\\uD558\\uCCA0 \\uB178\\uC120\\uB3C4\",\n    description: \"\\uC9C0\\uD558\\uCCA0 \\uB178\\uC120\\uB3C4 \\uD398\\uC774\\uC9C0\",\n    departureStation: departureStation,\n    arrivalStation: arrivalStation,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uC9C0\\uD558\\uCCA0\\uC5ED \\uAC80\\uC0C9\",\n            value: searchTerm,\n            onChange: handleSearchTermChange /*{(e) => setSearchTerm(e.target.value)}*/\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(IoSearch, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 48\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notice\",\n          children: [\"[2024-06-13] \\uC9C0\\uD558\\uCCA0 \\uD30C\\uC5C5\\uC73C\\uB85C 4\\uD638\\uC120 \\uD558\\uD589\\uC120, \\uC0C1\\uD589\\uC120 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: '#fff5b1'\n            },\n            children: \"10\\uBD84\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 60\n          }, this), \" \\uC9C0\\uC5F0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions\",\n          children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSuggestionItemClick(suggestion),\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"picture\",\n      style: {\n        width: '100%',\n        height: 'calc(100vh - 60px)',\n        overflow: 'auto',\n        // 스크롤 추가\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"rectangle\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: ref,\n          viewBox: \"0 -300 1500 1800\",\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            top: 0,\n            left: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this), isRightVisible && /*#__PURE__*/_jsxDEV(Right, {\n      isVisible: isRightVisible,\n      toggleRightVisibility: toggleRightVisibility,\n      stationName: stationName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 32\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 9\n  }, this);\n};\n_s(Routemap, \"XvztKE9lVuZ7GZK9FgZYl+TvDic=\", false, function () {\n  return [useDispatch];\n});\n_c = Routemap;\nexport default Routemap;\nvar _c;\n$RefreshReg$(_c, \"Routemap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useDispatch","useSelector","d3","subwayData","Main","mark","IoSearch","setStartStation","setEndStation","Right","jsxDEV","_jsxDEV","Routemap","_s","ref","dispatch","searchTerm","setSearchTerm","isSearching","setIsSearching","departureStation","setDepartureStation","arrivalStation","setArrivalStation","isRightVisible","setIsRightVisible","stationName","setStationName","suggestions","setSuggestions","searchedStationX","setSearchedStationX","searchedStationY","setSearchedStationY","handleSuggestionItemClick","suggestion","sanitizedSuggestion","includes","split","trim","handleSearchTermChange","e","value","target","filteredStations","filter","station","name","slice","map","line","toggleRightVisibility","svg","select","current","on","remove","attr","selectAll","svgContainer","append","zoom","scaleExtent","event","transform","call","xScale","scaleLinear","domain","extent","d","parseFloat","x","range","yScale","y","lineColor","groupedData","group","lineData","lineGenerator","curve","curveLinear","datum","data","enter","stopPropagation","clickX","clickY","pointer","node","showTooltip","transferStationsData","i","findIndex","transferStations","text","tooltip","buttons","color","width","newx","forEach","button","style","highlightedCircle","removeHighlightedCircle","searchedStation","find","searchedX","searchedY","transition","duration","zoomIdentity","translate","scale","handleSearch","preventDefault","title","description","children","className","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","size","backgroundColor","length","index","onClick","id","height","overflow","position","class","viewBox","top","left","isVisible","_c","$RefreshReg$"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Routemap.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as d3 from 'd3';\nimport subwayData from '../data/route.json';\nimport Main from '../components/section/Main';\nimport mark from '../assets/img/icon/환승역_마크.png';\nimport { IoSearch } from \"react-icons/io5\";\nimport { setStartStation, setEndStation } from '../data/actions';\nimport Right from '../components/section/Right'; // 추가\n\n\nconst Routemap = () => {\n    const ref = useRef();\n    const dispatch = useDispatch();\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isSearching, setIsSearching] = useState(false);\n    const [departureStation, setDepartureStation] = useState(null);\n    const [arrivalStation, setArrivalStation] = useState(null);\n    const [isRightVisible, setIsRightVisible] = useState(false); // 추가\n    const [stationName, setStationName] = useState(null);\n    const [suggestions, setSuggestions] = useState([]); // Define suggestions state\n    const [searchedStationX, setSearchedStationX] = useState(null);\n    const [searchedStationY, setSearchedStationY] = useState(null);\n    // 제안 항목 클릭 처리 함수\n    const handleSuggestionItemClick = (suggestion) => {\n        // '-' 포함 여부 확인하고 이후 문자열 제거\n        const sanitizedSuggestion = suggestion.includes('-') ? suggestion.split('-')[0].trim() : suggestion;\n        setSearchTerm(sanitizedSuggestion); // 정제된 제안을 검색어로 설정\n        setSuggestions([]); // 제안 목록 초기화\n    };\n\n    // Function to handle search term change\n    const handleSearchTermChange = (e) => {\n        const value = e.target.value;\n        setSearchTerm(value); // Update search term state\n\n        // Filter subway stations based on the search term\n        const filteredStations = subwayData.filter(station => station.name.includes(value)).slice(0, 3); // Slice the array to get only the first 3 elements\n        setSuggestions(filteredStations.map(station => `${station.name} - ${station.line}`));\n    };\n\n    const toggleRightVisibility = (name = null) => {\n        setIsRightVisible(!isRightVisible);\n        setStationName(name);\n    };\n\n    useEffect(() => {\n        const svg = d3.select(ref.current)\n            .on(\"click\", () => {\n                d3.select(\".tooltip\").remove();\n            }, true)\n            .attr('width', 1500)\n            .attr('height', 1800);\n        svg.selectAll(\"*\").remove();\n\n        const svgContainer = svg.append(\"g\")\n            .attr(\"id\", \"svg-container\");\n\n        // 줌 기능 추가\n        const zoom = d3.zoom()\n            .scaleExtent([0.5, 5]) // 줌 범위 설정\n            .on('zoom', (event) => {\n                svgContainer.attr('transform', event.transform);\n            });\n\n        svg.call(zoom);\n\n        // 스케일 설정\n        const xScale = d3.scaleLinear()\n            .domain(d3.extent(subwayData, d => parseFloat(d.x)))\n            .range([0, 500]);\n\n        const yScale = d3.scaleLinear()\n            .domain(d3.extent(subwayData, d => parseFloat(d.y)))\n            .range([500, 0]);\n\n        // 노선별 색상 설정\n        const lineColor = (line) => {\n            if (line === \"1호선\") return \"#0D3692\";\n            if (line === \"1호선1\") return \"#0D3692\";\n            if (line === \"2호선\") return \"#33A23D\";\n            if (line === \"2호선1\") return \"#33A23D\";\n            if (line === \"2호선2\") return \"#33A23D\";\n            if (line === \"3호선\") return \"#FE5B10\";\n            if (line === \"4호선\") return \"#00A2D1\";\n            if (line === \"5호선\") return \"#8B50A4\";\n            if (line === \"5호선1\") return \"#8B50A4\";\n            if (line === \"6호선\") return \"#C55C1D\";\n            if (line === \"6호선1\") return \"#C55C1D\";\n            if (line === \"7호선\") return \"#54640D\";\n            if (line === \"8호선\") return \"#F14C82\";\n            if (line === \"9호선\") return \"#AA9872\";\n            if (line === \"수인분당선\") return \"#FFEB2A\";\n            if (line === \"경의중앙선\") return \"#72C7A6\";\n            if (line === \"경의중앙선1\") return \"#72C7A6\";\n            if (line === \"경춘선\") return \"#2ABFD0\";\n            if (line === \"공항철도1호선\") return \"#0065B3\";\n            if (line === \"신림선\") return \"#6789CA\";\n            if (line === \"우이신설선\") return \"#B7C452\";\n            if (line === \"김포골드라인\") return \"#AD8605\";\n            return \"black\"; // 기본 색상\n        };\n\n        // 데이터를 라인별로 그룹화\n        const groupedData = d3.group(subwayData, d => d.line);\n\n        // 각 그룹(라인)을 순회하고 선과 원을 그립니다\n        for (const [line, lineData] of groupedData) {\n            const lineGenerator = d3.line()\n                .x(d => xScale(parseFloat(d.x)) * 4)\n                .y(d => yScale(parseFloat(d.y)) * 3.7 - 200)\n                .curve(d3.curveLinear);\n\n            svgContainer.append(\"path\")\n                .datum(lineData)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", lineColor(line))\n                .attr(\"stroke-width\", 7)\n                .attr(\"d\", lineGenerator);\n\n            // 각 라인에 대한 원(역) 추가\n            svgContainer.selectAll(`.station-${line}`) // 라인별로 클래스를 구분하여 선택\n                .data(lineData)\n                .enter()\n                .append(\"circle\")\n                .attr(\"class\", `station station-${line}`) // 라인별 클래스 추가\n                .attr(\"cx\", d => xScale(parseFloat(d.x)) * 4) // x 좌표에 3을 곱하여 3배로 확장\n                .attr(\"cy\", d => yScale(parseFloat(d.y)) * 3.7 - 200) // y 좌표에 3을 곱하여 3배로 확장\n                .attr(\"r\", 10)\n                .attr(\"fill\", d => lineColor(line)) // 동그라미의 색상을 라인의 색상에 따라 설정\n                .attr(\"stroke\", lineColor(line))\n                .attr(\"stroke-width\", 1)\n                .on(\"click\", function (event, d) {\n                    event.stopPropagation(); // 이벤트 버블링 방지\n                    const [clickX, clickY] = d3.pointer(event, svg.node());\n                    showTooltip(d, clickX, clickY);\n                });\n        }\n\n        // 중복된 역을 찾아 환승 역 이미지를 추가합니다.\n        const transferStationsData = subwayData.filter((d, i) => {\n            return subwayData.findIndex(e => e.name === d.name && e.line[0] !== d.line[0]) !== -1;\n        });\n\n        // 환승역 이미지를 추가합니다.\n        const transferStations = svgContainer.selectAll(\".transfer-station\")\n            .data(transferStationsData)\n            .enter()\n            .append(\"image\")\n            .attr(\"class\", \"transfer-station\")\n            .attr(\"xlink:href\", mark) // 환승역 이미지 파일 경로로 수정해주세요\n            .attr(\"width\", 20)\n            .attr(\"height\", 20)\n            .attr(\"x\", d => xScale(parseFloat(d.x)) * 4-10) // 이미지 중심을 원점으로 설정하기 위해 가로폭의 절반만큼 왼쪽으로 이동\n            .attr(\"y\", d => yScale(parseFloat(d.y)) * 3.7 -200-10); // 이미지 중심을 원점으로 설정하기 위해 세로폭의 절반만큼 위쪽으로 이동\n\n        // 이미지 위에 툴팁을 표시할 수 있도록 설정합니다.\n        transferStations.on(\"click\", function (event, d) {\n            const [clickX, clickY] = d3.pointer(event, svg.node());\n            showTooltip(d, clickX, clickY);\n\n\n\n            // 다른 곳을 클릭했을 때 툴팁을 제거합니다.\n            d3.select(\"body\").on(\"click.tooltip\", function () {\n                d3.select(\".tooltip\").remove();\n                d3.select(\"body\").on(\"click.tooltip\", null); // 이벤트 핸들러를 제거하여 메모리 누수를 방지합니다.\n            });\n        });\n\n        // 각 역 이름 추가\n        svgContainer.selectAll(\".station-name\")\n            .data(subwayData)\n            .enter()\n            .append(\"text\")\n            .attr(\"class\", \"station-name\")\n            .attr(\"x\", d => xScale(parseFloat(d.x)) * 4) // 역 이름에도 2를 곱하여 2배로 확장\n            .attr(\"y\", d => yScale(parseFloat(d.y)) * 3.7 - 200 + 30) // 역 이름에도 2를 곱하여 2배로 확장\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"18px\")\n            .attr(\"fill\", \"black\")\n            .attr(\"font-weight\", \"bold\") // 굵은 텍스트 설정\n            .text(d => d.name);\n\n// 말풍선 표시 함수\n        const showTooltip = (data, x, y) => {\n            d3.select(\".tooltip\").remove(); // 기존 툴팁 제거\n\n            const tooltip = svg.append(\"g\")\n                .attr(\"class\", \"tooltip\")\n                .attr(\"transform\", `translate(${x}, ${y })`);\n\n            tooltip.append(\"rect\")\n                .attr(\"width\", 600)\n                .attr(\"height\", 200) // Increased height to accommodate the new button\n                .attr(\"x\", -140)\n                .attr(\"y\", 0)\n                .attr(\"fill\", \"white\")\n                .attr(\"stroke\", \"black\");\n\n            tooltip.append(\"text\")\n                .attr(\"x\", 150)\n                .attr(\"y\", 60)\n                .attr(\"font-size\", \"30px\") // 텍스트 크기 증가\n                .attr(\"text-anchor\", \"middle\")\n                .text(data.name);\n\n            // 버튼 데이터 배열\n            const buttons = [\n                { text: '출발', x: -70, y: 120, color: '#90ee90' }, // Green color for 출발 button\n                { text: '도착', x: 60, y: 120, color: '#f0f0f0' },   // Gray color for 도착 button\n                { text: '실시간 도착정보', x: 190, y: 120, color: '#ff6347', width: 280, newx: 285 } // Red color for 실시간 도착정보 button\n            ];\n\n\n\n            // 버튼 생성\n            buttons.forEach(button => {\n                // 버튼 배경\n                tooltip.append(\"rect\")\n                    .attr(\"x\", button.x - 45)\n                    .attr(\"y\", button.y - 30)\n                    .attr(\"width\", button.width || 100)\n                    .attr(\"height\", 60)\n                    .attr(\"fill\", button.color)\n                    .attr(\"rx\", 5) // 둥근 모서리\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", () => {\n                        if (button.text === \"닫기\") {\n                            tooltip.remove();\n                        } else {\n                            if (button.text === \"출발\") {\n                                setDepartureStation(data.name);\n                                dispatch(setStartStation(data.name)); // Redux store 업데이트\n                            } else if (button.text === \"도착\") {\n                                setArrivalStation(data.name);\n                                dispatch(setEndStation(data.name)); // Redux store 업데이트\n                            } else if (button.text === \"실시간 도착정보\") {\n                                toggleRightVisibility(data.name);\n                            }\n                        }\n                    });\n\n                // 버튼 텍스트\n                tooltip.append(\"text\")\n                    .attr(\"x\", button.newx || button.x)\n                    .attr(\"y\", button.y)\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"alignment-baseline\", \"middle\")\n                    .attr(\"font-size\", \"18px\") // 텍스트 크기 증가\n                    .text(button.text)\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", () => {\n                        if (button.text === \"닫기\") {\n                            tooltip.remove();\n                        } else {\n                        }\n                    });\n\n            });\n\n        };\n\n        // 빨간색 원을 저장할 변수\n        let highlightedCircle;\n\n        function removeHighlightedCircle() {\n            if (highlightedCircle) {\n                highlightedCircle.remove();\n                highlightedCircle = null;\n            }\n        }\n\n        // 검색어 처리 로직\n        if (isSearching && searchTerm.trim() !== '') {\n            const searchedStation = subwayData.find(station => station.name.includes(searchTerm.trim()));\n            if (searchedStation) {\n                // 검색된 역의 위치에 말풍선 표시\n                const [searchedX, searchedY] = [xScale(parseFloat(searchedStation.x)) * 4+100, yScale(parseFloat(searchedStation.y)) * 3.7 - 200];\n                setSearchedStationX(searchedX);\n                setSearchedStationY(searchedY);\n                showTooltip(searchedStation, searchedX, searchedY);\n                svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(750 / 2 - searchedX, 500 / 2 - searchedY).scale(2));\n\n                // 이전에 강조된 원이 있으면 제거\n                removeHighlightedCircle();\n\n                // 검색된 역의 위치에 빨간색 원 추가\n                svg.append(\"circle\")\n                    .attr(\"cx\", searchedX+175)\n                    .attr(\"cy\", searchedY+250)\n                    .attr(\"r\", 28) // 반지름 크기 조절\n                    .attr(\"fill\", \"red\") // 빨간색으로 채우기\n                    .attr(\"stroke\", \"black\")\n                    .attr(\"stroke-width\", 1)\n                    .on(\"click\", (event, d) => {\n                        event.stopPropagation(); // 이벤트 버블링 방지\n                        showTooltip(searchedStation, searchedX, searchedY);\n                    });\n            }\n        }\n\n    }, [isSearching, searchTerm, dispatch]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setIsSearching(true);\n    };\n\n    return (\n        <Main\n            title=\"지하철 노선도\"\n            description=\"지하철 노선도 페이지\"\n            departureStation={departureStation}\n            arrivalStation={arrivalStation}\n        >\n            <div className=\"search-container\">\n                <div className=\"search-form\">\n                    <form onSubmit={handleSearch}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"지하철역 검색\"\n                            value={searchTerm}\n                            onChange={handleSearchTermChange} /*{(e) => setSearchTerm(e.target.value)}*/\n                        />\n                        <button type=\"submit\"> <IoSearch size={20} /> </button>\n                    </form>\n                    <div className=\"notice\">\n                        [2024-06-13] 지하철 파업으로 4호선 하행선, 상행선 <span style={{backgroundColor: '#fff5b1'}}>10분</span> 지연\n                    </div>\n                    {suggestions.length > 0 && (\n                        <ul className=\"suggestions\">\n                            {suggestions.map((suggestion, index) => (\n                                <li key={index} onClick={() => handleSuggestionItemClick(suggestion)}>{suggestion}</li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n            <div\n                id=\"picture\"\n                style={{\n                    width: '100%',\n                    height: 'calc(100vh - 60px)',\n                    overflow: 'auto', // 스크롤 추가\n                    position: 'relative'\n                }}\n            >\n                <div class=\"rectangle\">\n                    <svg\n                        ref={ref}\n                        viewBox=\"0 -300 1500 1800\"\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'absolute',\n                            top: 0,\n                            left: 0\n                        }}\n                    ></svg>\n                </div>\n            </div>\n            {isRightVisible && <Right isVisible={isRightVisible} toggleRightVisibility={toggleRightVisibility} stationName={stationName} />} {/* Right 컴포넌트 렌더링 */}\n        </Main>\n    );\n};\n\nexport default Routemap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}