{"ast":null,"code":"import _classCallCheck from \"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _pick from \"lodash/pick\";\nimport _defaults from \"lodash/defaults\";\nimport React from \"react\";\nimport { Selection, Helpers, Collection, LineSegment, Scale, Domain, Box } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar SMALL_NUMBER = 1 / Number.MAX_SAFE_INTEGER;\nvar getScale = function getScale(props) {\n  var _props$scale = props.scale,\n    scale = _props$scale === void 0 ? {} : _props$scale,\n    _props$dimension = props.dimension,\n    dimension = _props$dimension === void 0 ? \"x\" : _props$dimension;\n  if (scale[dimension]) {\n    return scale[dimension];\n  }\n  var fallbackScale = Scale.getBaseScale(props, dimension);\n  var range = Helpers.getRange(props, dimension);\n  var domain = Domain.getDomainFromProps(props, dimension) || [0, 1];\n  fallbackScale.range(range).domain(domain);\n  return fallbackScale;\n};\nvar getDimension = function getDimension(props) {\n  var horizontal = props.horizontal,\n    _props$dimension2 = props.dimension,\n    dimension = _props$dimension2 === void 0 ? \"x\" : _props$dimension2;\n  if (!horizontal) {\n    return dimension;\n  }\n  return dimension === \"x\" ? \"y\" : \"x\";\n};\nvar toRange = function toRange(props, domain) {\n  var scale = getScale(props);\n  return [scale(Math.min.apply(Math, _toConsumableArray(domain))), scale(Math.max.apply(Math, _toConsumableArray(domain)))];\n};\nvar toDomain = function toDomain(props, range) {\n  var scale = getScale(props);\n  return [scale.invert(Math.min.apply(Math, _toConsumableArray(range))), scale.invert(Math.max.apply(Math, _toConsumableArray(range)))];\n};\nvar getFullRange = function getFullRange(props) {\n  var scale = getScale(props);\n  return scale.range();\n};\nvar getFullDomain = function getFullDomain(props) {\n  var scale = getScale(props);\n  return scale.domain();\n};\nvar withinBound = function withinBound(value, bound) {\n  return value >= Collection.getMinValue(bound) && value <= Collection.getMaxValue(bound);\n};\nvar getBrushDomain = function getBrushDomain(brushDomain, fullDomain) {\n  if (brushDomain) {\n    var brushMin = Collection.getMinValue(brushDomain);\n    var brushMax = Collection.getMaxValue(brushDomain);\n    var domainMin = Collection.getMinValue(fullDomain);\n    var domainMax = Collection.getMaxValue(fullDomain);\n    var defaultMin = brushMin < domainMin ? domainMin : Number(domainMax) - SMALL_NUMBER;\n    var defaultMax = brushMax > domainMax ? domainMax : Number(domainMin) + SMALL_NUMBER;\n    var min = withinBound(brushMin, fullDomain) ? brushMin : defaultMin;\n    var max = withinBound(brushMax, fullDomain) ? brushMax : defaultMax;\n    return [min, max];\n  }\n  return fullDomain;\n};\nvar getActiveHandle = function getActiveHandle(props, position, range) {\n  var width = props.handleWidth / 2;\n  var dimension = getDimension(props);\n  var getHandle = function getHandle(type) {\n    var base = {\n      min: dimension === \"x\" ? Math.min.apply(Math, _toConsumableArray(range)) : Math.max.apply(Math, _toConsumableArray(range)),\n      max: dimension === \"x\" ? Math.max.apply(Math, _toConsumableArray(range)) : Math.min.apply(Math, _toConsumableArray(range))\n    };\n    return [base[type] - width, base[type] + width];\n  };\n  var active = [\"min\", \"max\"].reduce(function (memo, type) {\n    memo[type] = withinBound(position, getHandle(type)) ? type : undefined;\n    return memo;\n  }, {});\n  return active.min && active.max ? \"both\" : active.min || active.max;\n};\nvar getMinimumDomain = function getMinimumDomain() {\n  return [0, SMALL_NUMBER];\n};\nvar panBox = function panBox(props, position) {\n  var brushDomain = props.brushDomain,\n    startPosition = props.startPosition;\n  var range = toRange(props, brushDomain);\n  var fullRange = getFullRange(props);\n  var size = Math.abs(range[1] - range[0]);\n  var globalMin = Math.min.apply(Math, _toConsumableArray(fullRange));\n  var globalMax = Math.max.apply(Math, _toConsumableArray(fullRange));\n  var delta = startPosition ? startPosition - position : 0;\n  var min = Math.min.apply(Math, _toConsumableArray(range)) - delta;\n  var max = Math.max.apply(Math, _toConsumableArray(range)) - delta;\n  var constrainedMin = min > globalMax - size ? globalMax - size : Math.max(min, globalMin);\n  var constrainedMax = max < globalMin + size ? globalMin + size : Math.min(max, globalMax);\n  return [constrainedMin, constrainedMax];\n};\nvar fallbackProps = {\n  brushAreaStyle: {\n    stroke: \"none\",\n    fill: \"black\",\n    opacity: function opacity(_ref) {\n      var active = _ref.active;\n      return active ? 0.2 : 0.1;\n    } // eslint-disable-line no-magic-numbers\n  },\n\n  brushStyle: {\n    pointerEvents: \"none\",\n    stroke: \"none\",\n    fill: \"black\",\n    opacity: function opacity(_ref2) {\n      var active = _ref2.active;\n      return active ? 0.4 : 0.3;\n    } // eslint-disable-line no-magic-numbers\n  },\n\n  handleStyle: {\n    pointerEvents: \"none\",\n    stroke: \"none\",\n    fill: \"none\"\n  }\n};\nexport var VictoryBrushLine = /*#__PURE__*/function (_React$Component) {\n  _inherits(VictoryBrushLine, _React$Component);\n  var _super = _createSuper(VictoryBrushLine);\n  function VictoryBrushLine() {\n    _classCallCheck(this, VictoryBrushLine);\n    return _super.apply(this, arguments);\n  }\n  _createClass(VictoryBrushLine, [{\n    key: \"getRectDimensions\",\n    value: function getRectDimensions(props, brushWidth, domain) {\n      var brushDomain = props.brushDomain;\n      var dimension = getDimension(props);\n      var range = toRange(props, domain || getBrushDomain(brushDomain, getFullDomain(props)));\n      var coordinates = dimension === \"x\" ? {\n        y1: props.y1,\n        y2: props.y2,\n        x1: Math.min.apply(Math, _toConsumableArray(range)),\n        x2: Math.max.apply(Math, _toConsumableArray(range))\n      } : {\n        x1: props.x1,\n        x2: props.x2,\n        y1: Math.min.apply(Math, _toConsumableArray(range)),\n        y2: Math.max.apply(Math, _toConsumableArray(range))\n      };\n      var x1 = coordinates.x1,\n        x2 = coordinates.x2,\n        y1 = coordinates.y1,\n        y2 = coordinates.y2;\n      var offset = {\n        x: dimension === \"x\" ? 0 : brushWidth / 2,\n        y: dimension === \"y\" ? 0 : brushWidth / 2\n      };\n      var x = Math.min(x1, x2) - offset.x;\n      var y = Math.min(y1, y2) - offset.y;\n      var width = Math.max(x1, x2) + offset.x - x;\n      var height = Math.max(y1, y2) + offset.y - y;\n      return {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n  }, {\n    key: \"getHandleDimensions\",\n    value: function getHandleDimensions(props) {\n      var handleWidth = props.handleWidth,\n        x1 = props.x1,\n        x2 = props.x2,\n        y1 = props.y1,\n        y2 = props.y2,\n        brushDomain = props.brushDomain;\n      var dimension = getDimension(props);\n      var brushWidth = props.brushWidth || props.width;\n      var domain = getBrushDomain(brushDomain, getFullDomain(props));\n      var range = toRange(props, domain);\n      var defaultX = Math.min(x1, x2) - brushWidth / 2;\n      var defaultY = Math.min(y1, y2) - brushWidth / 2;\n      var x = {\n        min: dimension === \"x\" ? Math.min.apply(Math, _toConsumableArray(range)) - handleWidth / 2 : defaultX,\n        max: dimension === \"x\" ? Math.max.apply(Math, _toConsumableArray(range)) - handleWidth / 2 : defaultX\n      };\n      var y = {\n        min: dimension === \"y\" ? Math.max.apply(Math, _toConsumableArray(range)) - handleWidth / 2 : defaultY,\n        max: dimension === \"y\" ? Math.min.apply(Math, _toConsumableArray(range)) - handleWidth / 2 : defaultY\n      };\n      var width = dimension === \"x\" ? handleWidth : brushWidth;\n      var height = dimension === \"x\" ? brushWidth : handleWidth;\n      return {\n        min: {\n          x: x.min,\n          y: y.min,\n          width: width,\n          height: height\n        },\n        max: {\n          x: x.max,\n          y: y.max,\n          width: width,\n          height: height\n        }\n      };\n    }\n  }, {\n    key: \"getCursor\",\n    value: function getCursor(props) {\n      var _props$activeBrushes = props.activeBrushes,\n        activeBrushes = _props$activeBrushes === void 0 ? {} : _props$activeBrushes;\n      var dimension = getDimension(props);\n      if (activeBrushes.minHandle || activeBrushes.maxHandle) {\n        return dimension === \"x\" ? \"ew-resize\" : \"ns-resize\";\n      } else if (activeBrushes.brush) {\n        return \"move\";\n      }\n      return \"crosshair\";\n    }\n  }, {\n    key: \"renderHandles\",\n    value: function renderHandles(props) {\n      var handleComponent = props.handleComponent,\n        handleStyle = props.handleStyle,\n        id = props.id,\n        brushDomain = props.brushDomain,\n        _props$datum = props.datum,\n        datum = _props$datum === void 0 ? {} : _props$datum,\n        _props$activeBrushes2 = props.activeBrushes,\n        activeBrushes = _props$activeBrushes2 === void 0 ? {} : _props$activeBrushes2;\n      if (!brushDomain) {\n        return null;\n      }\n      var handleDimensions = this.getHandleDimensions(props);\n      var style = Object.assign({}, fallbackProps.handleStyle, handleStyle);\n      var minDatum = Object.assign({\n        handleValue: Collection.getMinValue(brushDomain)\n      }, datum);\n      var maxDatum = Object.assign({\n        handleValue: Collection.getMaxValue(brushDomain)\n      }, datum);\n      var minHandleProps = Object.assign({\n        key: \"\".concat(id, \"-min\"),\n        style: Helpers.evaluateStyle(style, {\n          datum: minDatum,\n          active: activeBrushes.minHandle\n        })\n      }, handleDimensions.min);\n      var maxHandleProps = Object.assign({\n        key: \"\".concat(id, \"-max\"),\n        style: Helpers.evaluateStyle(style, {\n          datum: maxDatum,\n          active: activeBrushes.maxHandle\n        })\n      }, handleDimensions.max);\n      return [/*#__PURE__*/React.cloneElement(handleComponent, minHandleProps), /*#__PURE__*/React.cloneElement(handleComponent, maxHandleProps)];\n    }\n  }, {\n    key: \"renderBrush\",\n    value: function renderBrush(props) {\n      var brushComponent = props.brushComponent,\n        brushStyle = props.brushStyle,\n        _props$activeBrushes3 = props.activeBrushes,\n        activeBrushes = _props$activeBrushes3 === void 0 ? {} : _props$activeBrushes3,\n        _props$datum2 = props.datum,\n        datum = _props$datum2 === void 0 ? {} : _props$datum2,\n        brushDomain = props.brushDomain;\n      if (!brushDomain) {\n        return null;\n      }\n      var brushWidth = props.brushWidth || props.width;\n      var rectDimensions = this.getRectDimensions(props, brushWidth);\n      var baseStyle = Object.assign({}, fallbackProps.brushStyle, brushStyle);\n      var style = Helpers.evaluateStyle(baseStyle, {\n        datum: datum,\n        active: activeBrushes.brush\n      });\n      var brushProps = Object.assign({\n        style: style\n      }, rectDimensions);\n      return /*#__PURE__*/React.cloneElement(brushComponent, brushProps);\n    }\n  }, {\n    key: \"renderBrushArea\",\n    value: function renderBrushArea(props) {\n      var brushAreaComponent = props.brushAreaComponent,\n        brushAreaStyle = props.brushAreaStyle,\n        _props$activeBrushes4 = props.activeBrushes,\n        activeBrushes = _props$activeBrushes4 === void 0 ? {} : _props$activeBrushes4,\n        _props$datum3 = props.datum,\n        datum = _props$datum3 === void 0 ? {} : _props$datum3;\n      var brushAreaWidth = props.brushAreaWidth || props.width;\n      var cursor = this.getCursor(props);\n      var rectDimensions = this.getRectDimensions(props, brushAreaWidth, getFullDomain(props));\n      var baseStyle = Object.assign({\n        cursor: cursor\n      }, fallbackProps.brushAreaStyle, brushAreaStyle);\n      var style = Helpers.evaluateStyle(baseStyle, {\n        datum: datum,\n        active: activeBrushes.brushArea\n      });\n      var brushAreaProps = Object.assign({\n        style: style\n      }, rectDimensions);\n      return /*#__PURE__*/React.cloneElement(brushAreaComponent, brushAreaProps);\n    }\n  }, {\n    key: \"renderLine\",\n    value: function renderLine(props) {\n      var filteredProps = _pick(props, [\"x1\", \"x2\", \"y1\", \"y2\", \"datum\", \"scale\", \"active\", \"style\"]);\n      return /*#__PURE__*/React.cloneElement(props.lineComponent, filteredProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"g\", this.props.events, this.renderLine(this.props), this.renderBrushArea(this.props), this.renderBrush(this.props), this.renderHandles(this.props));\n    }\n  }]);\n  return VictoryBrushLine;\n}(React.Component);\n_defineProperty(VictoryBrushLine, \"defaultProps\", {\n  allowDrag: true,\n  allowDraw: true,\n  allowResize: true,\n  brushAreaComponent: /*#__PURE__*/React.createElement(Box, null),\n  brushComponent: /*#__PURE__*/React.createElement(Box, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  handleComponent: /*#__PURE__*/React.createElement(Box, null),\n  handleWidth: 10,\n  lineComponent: /*#__PURE__*/React.createElement(LineSegment, null),\n  width: 10\n});\n_defineProperty(VictoryBrushLine, \"defaultEvents\", function (props) {\n  return props.disable ? undefined : [{\n    target: props.type,\n    eventHandlers: {\n      onMouseEnter: function onMouseEnter(evt, targetProps) {\n        evt.preventDefault();\n        var allowResize = targetProps.allowResize,\n          brushDomain = targetProps.brushDomain;\n        var dimension = getDimension(targetProps);\n        var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n        var position = Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n        var fullDomain = getFullDomain(targetProps);\n        var currentDomain = getBrushDomain(brushDomain, fullDomain);\n        var range = toRange(targetProps, currentDomain);\n        var activeHandle = allowResize && getActiveHandle(targetProps, position, range);\n        var activeBrushes = {\n          brushArea: !targetProps.brushDomain,\n          brush: withinBound(position, range) && !isEqual(fullDomain, currentDomain),\n          minHandle: activeHandle === \"min\" || activeHandle === \"both\",\n          maxHandle: activeHandle === \"min\" || activeHandle === \"both\"\n        };\n        return [{\n          mutation: function mutation() {\n            return {\n              activeBrushes: activeBrushes,\n              brushDomain: targetProps.brushDomain,\n              parentSVG: parentSVG\n            };\n          }\n        }];\n      },\n      onMouseDown: function onMouseDown(evt, targetProps) {\n        evt.preventDefault();\n        var allowResize = targetProps.allowResize,\n          allowDrag = targetProps.allowDrag,\n          allowDraw = targetProps.allowDraw,\n          activeBrushes = targetProps.activeBrushes,\n          brushDomain = targetProps.brushDomain;\n        var dimension = getDimension(targetProps);\n\n        // Don't trigger events for static brushes\n        if (!allowResize && !allowDrag) {\n          return [];\n        }\n        var fullDomain = getFullDomain(targetProps);\n        var currentDomain = getBrushDomain(brushDomain, fullDomain);\n        var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n        var position = Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n        var range = toRange(targetProps, currentDomain);\n        var activeHandle = allowResize && getActiveHandle(targetProps, position, range);\n        // If the event occurs in any of the handle regions, start a resize\n        if (activeHandle) {\n          return [{\n            mutation: function mutation() {\n              return {\n                parentSVG: parentSVG,\n                isSelecting: true,\n                activeHandle: activeHandle,\n                brushDomain: currentDomain,\n                startPosition: position,\n                activeBrushes: activeBrushes\n              };\n            }\n          }];\n        } else if (withinBound(position, range) && !isEqual(fullDomain, currentDomain)) {\n          // if the event occurs within a selected region start a panning event, unless the whole\n          // domain is selected\n          return [{\n            mutation: function mutation() {\n              return {\n                isPanning: allowDrag,\n                startPosition: position,\n                brushDomain: currentDomain,\n                activeBrushes: activeBrushes,\n                parentSVG: parentSVG\n              };\n            }\n          }];\n        }\n        // if the event occurs outside the region, or if the whole domain is selected,\n        // start a new selection\n        return allowDraw ? [{\n          mutation: function mutation() {\n            return {\n              isSelecting: allowResize,\n              brushDomain: null,\n              startPosition: position,\n              activeBrushes: activeBrushes,\n              parentSVG: parentSVG\n            };\n          }\n        }] : [];\n      },\n      // eslint-disable-next-line max-statements, complexity\n      onMouseMove: function onMouseMove(evt, targetProps) {\n        var isPanning = targetProps.isPanning,\n          isSelecting = targetProps.isSelecting,\n          allowResize = targetProps.allowResize,\n          allowDrag = targetProps.allowDrag,\n          onBrushDomainChange = targetProps.onBrushDomainChange,\n          brushDomain = targetProps.brushDomain;\n        var dimension = getDimension(targetProps);\n        if (isPanning || isSelecting) {\n          evt.preventDefault();\n          evt.stopPropagation();\n        }\n        var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n        var position = Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n        var fullDomain = getFullDomain(targetProps);\n        var domain = getBrushDomain(brushDomain, fullDomain);\n        var initialRange = toRange(targetProps, domain);\n        var activeHandle = getActiveHandle(targetProps, position, initialRange);\n        var activeBrushes = {\n          brushArea: !targetProps.brushDomain,\n          brush: withinBound(position, initialRange) && !isEqual(fullDomain, domain),\n          minHandle: activeHandle === \"min\" || activeHandle === \"both\",\n          maxHandle: activeHandle === \"max\" || activeHandle === \"both\"\n        };\n        if (!targetProps.isPanning && !targetProps.isSelecting) {\n          return [{\n            mutation: function mutation() {\n              return {\n                activeBrushes: activeBrushes,\n                brushDomain: targetProps.brushDomain,\n                parentSVG: parentSVG\n              };\n            }\n          }];\n        }\n        if (allowDrag && isPanning) {\n          var fullRange = getFullRange(targetProps);\n          var range = panBox(targetProps, position);\n          var currentDomain = toDomain(targetProps, range);\n          var startPosition = Math.max.apply(Math, _toConsumableArray(range)) >= Math.max.apply(Math, _toConsumableArray(fullRange)) || Math.min.apply(Math, _toConsumableArray(range)) <= Math.min.apply(Math, _toConsumableArray(fullRange)) ? targetProps.startPosition : position;\n          var mutatedProps = {\n            startPosition: startPosition,\n            isPanning: true,\n            brushDomain: currentDomain,\n            activeBrushes: {\n              brush: true\n            },\n            parentSVG: parentSVG\n          };\n          if (Helpers.isFunction(onBrushDomainChange)) {\n            onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n          }\n          return [{\n            mutation: function mutation() {\n              return mutatedProps;\n            }\n          }];\n        } else if (allowResize && isSelecting) {\n          var _currentDomain = brushDomain || getMinimumDomain();\n          var _range = toRange(targetProps, _currentDomain);\n          var oppositeHandle = targetProps.activeHandle === \"min\" ? \"max\" : \"min\";\n          var handle = targetProps.activeHandle && getActiveHandle(targetProps, position, _range) === \"both\" ? oppositeHandle : targetProps.activeHandle;\n          if (!handle) {\n            _currentDomain = toDomain(targetProps, [targetProps.startPosition, position]);\n          } else {\n            var rangeMax = dimension === \"x\" ? Math.max.apply(Math, _toConsumableArray(_range)) : Math.min.apply(Math, _toConsumableArray(_range));\n            var rangeMin = dimension === \"x\" ? Math.min.apply(Math, _toConsumableArray(_range)) : Math.max.apply(Math, _toConsumableArray(_range));\n            var min = handle === \"max\" ? rangeMin : position;\n            var max = handle === \"min\" ? rangeMax : position;\n            _currentDomain = toDomain(targetProps, [min, max]);\n          }\n          var _mutatedProps = {\n            brushDomain: _currentDomain,\n            startPosition: targetProps.startPosition,\n            isSelecting: isSelecting,\n            activeHandle: handle,\n            parentSVG: parentSVG,\n            activeBrushes: {\n              brush: true,\n              minHandle: activeHandle === \"min\",\n              maxHandle: activeHandle === \"max\"\n            }\n          };\n          if (Helpers.isFunction(onBrushDomainChange)) {\n            onBrushDomainChange(_currentDomain, _defaults({}, _mutatedProps, targetProps));\n          }\n          return [{\n            mutation: function mutation() {\n              return _mutatedProps;\n            }\n          }];\n        }\n        return [];\n      },\n      onMouseUp: function onMouseUp(evt, targetProps) {\n        var onBrushDomainChange = targetProps.onBrushDomainChange,\n          brushDomain = targetProps.brushDomain,\n          allowResize = targetProps.allowResize,\n          activeBrushes = targetProps.activeBrushes;\n        // if the mouse hasn't moved since a mouseDown event, select the whole domain region\n        var mutatedProps = {\n          isPanning: false,\n          isSelecting: false,\n          activeHandle: null,\n          startPosition: null,\n          brushDomain: brushDomain,\n          activeBrushes: activeBrushes\n        };\n        if (allowResize && Helpers.isFunction(onBrushDomainChange)) {\n          onBrushDomainChange(brushDomain, _defaults({}, mutatedProps, targetProps));\n        }\n        return [{\n          mutation: function mutation() {\n            return mutatedProps;\n          }\n        }];\n      },\n      onMouseLeave: function onMouseLeave(evt, targetProps) {\n        var brushDomain = targetProps.brushDomain;\n        return [{\n          mutation: function mutation() {\n            return {\n              isPanning: false,\n              isSelecting: false,\n              activeHandle: null,\n              startPosition: null,\n              brushDomain: brushDomain,\n              activeBrushes: {}\n            };\n          }\n        }];\n      }\n    }\n  }];\n});","map":{"version":3,"names":["_pick","_defaults","React","Selection","Helpers","Collection","LineSegment","Scale","Domain","Box","isEqual","SMALL_NUMBER","Number","MAX_SAFE_INTEGER","getScale","props","_props$scale","scale","_props$dimension","dimension","fallbackScale","getBaseScale","range","getRange","domain","getDomainFromProps","getDimension","horizontal","_props$dimension2","toRange","Math","min","apply","_toConsumableArray","max","toDomain","invert","getFullRange","getFullDomain","withinBound","value","bound","getMinValue","getMaxValue","getBrushDomain","brushDomain","fullDomain","brushMin","brushMax","domainMin","domainMax","defaultMin","defaultMax","getActiveHandle","position","width","handleWidth","getHandle","type","base","active","reduce","memo","undefined","getMinimumDomain","panBox","startPosition","fullRange","size","abs","globalMin","globalMax","delta","constrainedMin","constrainedMax","fallbackProps","brushAreaStyle","stroke","fill","opacity","_ref","brushStyle","pointerEvents","_ref2","handleStyle","VictoryBrushLine","_React$Component","_inherits","_super","_createSuper","_classCallCheck","arguments","_createClass","key","getRectDimensions","brushWidth","coordinates","y1","y2","x1","x2","offset","x","y","height","getHandleDimensions","defaultX","defaultY","getCursor","_props$activeBrushes","activeBrushes","minHandle","maxHandle","brush","renderHandles","handleComponent","id","_props$datum","datum","_props$activeBrushes2","handleDimensions","style","Object","assign","minDatum","handleValue","maxDatum","minHandleProps","concat","evaluateStyle","maxHandleProps","cloneElement","renderBrush","brushComponent","_props$activeBrushes3","_props$datum2","rectDimensions","baseStyle","brushProps","renderBrushArea","brushAreaComponent","_props$activeBrushes4","_props$datum3","brushAreaWidth","cursor","brushArea","brushAreaProps","renderLine","filteredProps","lineComponent","render","createElement","events","Component","_defineProperty","allowDrag","allowDraw","allowResize","groupComponent","disable","target","eventHandlers","onMouseEnter","evt","targetProps","preventDefault","parentSVG","getParentSVG","getSVGEventCoordinates","currentDomain","activeHandle","mutation","onMouseDown","isSelecting","isPanning","onMouseMove","onBrushDomainChange","stopPropagation","initialRange","mutatedProps","isFunction","oppositeHandle","handle","rangeMax","rangeMin","onMouseUp","onMouseLeave"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/node_modules/victory-brush-line/es/victory-brush-line.js"],"sourcesContent":["import _pick from \"lodash/pick\";\nimport _defaults from \"lodash/defaults\";\nimport React from \"react\";\nimport { Selection, Helpers, Collection, LineSegment, Scale, Domain, Box } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nconst SMALL_NUMBER = 1 / Number.MAX_SAFE_INTEGER;\nconst getScale = props => {\n  const {\n    scale = {},\n    dimension = \"x\"\n  } = props;\n  if (scale[dimension]) {\n    return scale[dimension];\n  }\n  const fallbackScale = Scale.getBaseScale(props, dimension);\n  const range = Helpers.getRange(props, dimension);\n  const domain = Domain.getDomainFromProps(props, dimension) || [0, 1];\n  fallbackScale.range(range).domain(domain);\n  return fallbackScale;\n};\nconst getDimension = props => {\n  const {\n    horizontal,\n    dimension = \"x\"\n  } = props;\n  if (!horizontal) {\n    return dimension;\n  }\n  return dimension === \"x\" ? \"y\" : \"x\";\n};\nconst toRange = (props, domain) => {\n  const scale = getScale(props);\n  return [scale(Math.min(...domain)), scale(Math.max(...domain))];\n};\nconst toDomain = (props, range) => {\n  const scale = getScale(props);\n  return [scale.invert(Math.min(...range)), scale.invert(Math.max(...range))];\n};\nconst getFullRange = props => {\n  const scale = getScale(props);\n  return scale.range();\n};\nconst getFullDomain = props => {\n  const scale = getScale(props);\n  return scale.domain();\n};\nconst withinBound = (value, bound) => {\n  return value >= Collection.getMinValue(bound) && value <= Collection.getMaxValue(bound);\n};\nconst getBrushDomain = (brushDomain, fullDomain) => {\n  if (brushDomain) {\n    const brushMin = Collection.getMinValue(brushDomain);\n    const brushMax = Collection.getMaxValue(brushDomain);\n    const domainMin = Collection.getMinValue(fullDomain);\n    const domainMax = Collection.getMaxValue(fullDomain);\n    const defaultMin = brushMin < domainMin ? domainMin : Number(domainMax) - SMALL_NUMBER;\n    const defaultMax = brushMax > domainMax ? domainMax : Number(domainMin) + SMALL_NUMBER;\n    const min = withinBound(brushMin, fullDomain) ? brushMin : defaultMin;\n    const max = withinBound(brushMax, fullDomain) ? brushMax : defaultMax;\n    return [min, max];\n  }\n  return fullDomain;\n};\nconst getActiveHandle = (props, position, range) => {\n  const width = props.handleWidth / 2;\n  const dimension = getDimension(props);\n  const getHandle = type => {\n    const base = {\n      min: dimension === \"x\" ? Math.min(...range) : Math.max(...range),\n      max: dimension === \"x\" ? Math.max(...range) : Math.min(...range)\n    };\n    return [base[type] - width, base[type] + width];\n  };\n  const active = [\"min\", \"max\"].reduce((memo, type) => {\n    memo[type] = withinBound(position, getHandle(type)) ? type : undefined;\n    return memo;\n  }, {});\n  return active.min && active.max ? \"both\" : active.min || active.max;\n};\nconst getMinimumDomain = () => {\n  return [0, SMALL_NUMBER];\n};\nconst panBox = (props, position) => {\n  const {\n    brushDomain,\n    startPosition\n  } = props;\n  const range = toRange(props, brushDomain);\n  const fullRange = getFullRange(props);\n  const size = Math.abs(range[1] - range[0]);\n  const globalMin = Math.min(...fullRange);\n  const globalMax = Math.max(...fullRange);\n  const delta = startPosition ? startPosition - position : 0;\n  const min = Math.min(...range) - delta;\n  const max = Math.max(...range) - delta;\n  const constrainedMin = min > globalMax - size ? globalMax - size : Math.max(min, globalMin);\n  const constrainedMax = max < globalMin + size ? globalMin + size : Math.min(max, globalMax);\n  return [constrainedMin, constrainedMax];\n};\nconst fallbackProps = {\n  brushAreaStyle: {\n    stroke: \"none\",\n    fill: \"black\",\n    opacity: _ref => {\n      let {\n        active\n      } = _ref;\n      return active ? 0.2 : 0.1;\n    } // eslint-disable-line no-magic-numbers\n  },\n  brushStyle: {\n    pointerEvents: \"none\",\n    stroke: \"none\",\n    fill: \"black\",\n    opacity: _ref2 => {\n      let {\n        active\n      } = _ref2;\n      return active ? 0.4 : 0.3;\n    } // eslint-disable-line no-magic-numbers\n  },\n  handleStyle: {\n    pointerEvents: \"none\",\n    stroke: \"none\",\n    fill: \"none\"\n  }\n};\nexport class VictoryBrushLine extends React.Component {\n  static defaultProps = {\n    allowDrag: true,\n    allowDraw: true,\n    allowResize: true,\n    brushAreaComponent: /*#__PURE__*/React.createElement(Box, null),\n    brushComponent: /*#__PURE__*/React.createElement(Box, null),\n    groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n    handleComponent: /*#__PURE__*/React.createElement(Box, null),\n    handleWidth: 10,\n    lineComponent: /*#__PURE__*/React.createElement(LineSegment, null),\n    width: 10\n  };\n  static defaultEvents = function (props) {\n    return props.disable ? undefined : [{\n      target: props.type,\n      eventHandlers: {\n        onMouseEnter: (evt, targetProps) => {\n          evt.preventDefault();\n          const {\n            allowResize,\n            brushDomain\n          } = targetProps;\n          const dimension = getDimension(targetProps);\n          const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n          const position = Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n          const fullDomain = getFullDomain(targetProps);\n          const currentDomain = getBrushDomain(brushDomain, fullDomain);\n          const range = toRange(targetProps, currentDomain);\n          const activeHandle = allowResize && getActiveHandle(targetProps, position, range);\n          const activeBrushes = {\n            brushArea: !targetProps.brushDomain,\n            brush: withinBound(position, range) && !isEqual(fullDomain, currentDomain),\n            minHandle: activeHandle === \"min\" || activeHandle === \"both\",\n            maxHandle: activeHandle === \"min\" || activeHandle === \"both\"\n          };\n          return [{\n            mutation: () => ({\n              activeBrushes,\n              brushDomain: targetProps.brushDomain,\n              parentSVG\n            })\n          }];\n        },\n        onMouseDown: (evt, targetProps) => {\n          evt.preventDefault();\n          const {\n            allowResize,\n            allowDrag,\n            allowDraw,\n            activeBrushes,\n            brushDomain\n          } = targetProps;\n          const dimension = getDimension(targetProps);\n\n          // Don't trigger events for static brushes\n          if (!allowResize && !allowDrag) {\n            return [];\n          }\n          const fullDomain = getFullDomain(targetProps);\n          const currentDomain = getBrushDomain(brushDomain, fullDomain);\n          const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n          const position = Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n          const range = toRange(targetProps, currentDomain);\n          const activeHandle = allowResize && getActiveHandle(targetProps, position, range);\n          // If the event occurs in any of the handle regions, start a resize\n          if (activeHandle) {\n            return [{\n              mutation: () => {\n                return {\n                  parentSVG,\n                  isSelecting: true,\n                  activeHandle,\n                  brushDomain: currentDomain,\n                  startPosition: position,\n                  activeBrushes\n                };\n              }\n            }];\n          } else if (withinBound(position, range) && !isEqual(fullDomain, currentDomain)) {\n            // if the event occurs within a selected region start a panning event, unless the whole\n            // domain is selected\n            return [{\n              mutation: () => ({\n                isPanning: allowDrag,\n                startPosition: position,\n                brushDomain: currentDomain,\n                activeBrushes,\n                parentSVG\n              })\n            }];\n          }\n          // if the event occurs outside the region, or if the whole domain is selected,\n          // start a new selection\n          return allowDraw ? [{\n            mutation: () => ({\n              isSelecting: allowResize,\n              brushDomain: null,\n              startPosition: position,\n              activeBrushes,\n              parentSVG\n            })\n          }] : [];\n        },\n        // eslint-disable-next-line max-statements, complexity\n        onMouseMove: (evt, targetProps) => {\n          const {\n            isPanning,\n            isSelecting,\n            allowResize,\n            allowDrag,\n            onBrushDomainChange,\n            brushDomain\n          } = targetProps;\n          const dimension = getDimension(targetProps);\n          if (isPanning || isSelecting) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n          const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n          const position = Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n          const fullDomain = getFullDomain(targetProps);\n          const domain = getBrushDomain(brushDomain, fullDomain);\n          const initialRange = toRange(targetProps, domain);\n          const activeHandle = getActiveHandle(targetProps, position, initialRange);\n          const activeBrushes = {\n            brushArea: !targetProps.brushDomain,\n            brush: withinBound(position, initialRange) && !isEqual(fullDomain, domain),\n            minHandle: activeHandle === \"min\" || activeHandle === \"both\",\n            maxHandle: activeHandle === \"max\" || activeHandle === \"both\"\n          };\n          if (!targetProps.isPanning && !targetProps.isSelecting) {\n            return [{\n              mutation: () => ({\n                activeBrushes,\n                brushDomain: targetProps.brushDomain,\n                parentSVG\n              })\n            }];\n          }\n          if (allowDrag && isPanning) {\n            const fullRange = getFullRange(targetProps);\n            const range = panBox(targetProps, position);\n            const currentDomain = toDomain(targetProps, range);\n            const startPosition = Math.max(...range) >= Math.max(...fullRange) || Math.min(...range) <= Math.min(...fullRange) ? targetProps.startPosition : position;\n            const mutatedProps = {\n              startPosition,\n              isPanning: true,\n              brushDomain: currentDomain,\n              activeBrushes: {\n                brush: true\n              },\n              parentSVG\n            };\n            if (Helpers.isFunction(onBrushDomainChange)) {\n              onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n            }\n            return [{\n              mutation: () => mutatedProps\n            }];\n          } else if (allowResize && isSelecting) {\n            let currentDomain = brushDomain || getMinimumDomain();\n            const range = toRange(targetProps, currentDomain);\n            const oppositeHandle = targetProps.activeHandle === \"min\" ? \"max\" : \"min\";\n            const handle = targetProps.activeHandle && getActiveHandle(targetProps, position, range) === \"both\" ? oppositeHandle : targetProps.activeHandle;\n            if (!handle) {\n              currentDomain = toDomain(targetProps, [targetProps.startPosition, position]);\n            } else {\n              const rangeMax = dimension === \"x\" ? Math.max(...range) : Math.min(...range);\n              const rangeMin = dimension === \"x\" ? Math.min(...range) : Math.max(...range);\n              const min = handle === \"max\" ? rangeMin : position;\n              const max = handle === \"min\" ? rangeMax : position;\n              currentDomain = toDomain(targetProps, [min, max]);\n            }\n            const mutatedProps = {\n              brushDomain: currentDomain,\n              startPosition: targetProps.startPosition,\n              isSelecting,\n              activeHandle: handle,\n              parentSVG,\n              activeBrushes: {\n                brush: true,\n                minHandle: activeHandle === \"min\",\n                maxHandle: activeHandle === \"max\"\n              }\n            };\n            if (Helpers.isFunction(onBrushDomainChange)) {\n              onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n            }\n            return [{\n              mutation: () => mutatedProps\n            }];\n          }\n          return [];\n        },\n        onMouseUp: (evt, targetProps) => {\n          const {\n            onBrushDomainChange,\n            brushDomain,\n            allowResize,\n            activeBrushes\n          } = targetProps;\n          // if the mouse hasn't moved since a mouseDown event, select the whole domain region\n          const mutatedProps = {\n            isPanning: false,\n            isSelecting: false,\n            activeHandle: null,\n            startPosition: null,\n            brushDomain,\n            activeBrushes\n          };\n          if (allowResize && Helpers.isFunction(onBrushDomainChange)) {\n            onBrushDomainChange(brushDomain, _defaults({}, mutatedProps, targetProps));\n          }\n          return [{\n            mutation: () => mutatedProps\n          }];\n        },\n        onMouseLeave: (evt, targetProps) => {\n          const {\n            brushDomain\n          } = targetProps;\n          return [{\n            mutation: () => ({\n              isPanning: false,\n              isSelecting: false,\n              activeHandle: null,\n              startPosition: null,\n              brushDomain,\n              activeBrushes: {}\n            })\n          }];\n        }\n      }\n    }];\n  };\n  getRectDimensions(props, brushWidth, domain) {\n    const {\n      brushDomain\n    } = props;\n    const dimension = getDimension(props);\n    const range = toRange(props, domain || getBrushDomain(brushDomain, getFullDomain(props)));\n    const coordinates = dimension === \"x\" ? {\n      y1: props.y1,\n      y2: props.y2,\n      x1: Math.min(...range),\n      x2: Math.max(...range)\n    } : {\n      x1: props.x1,\n      x2: props.x2,\n      y1: Math.min(...range),\n      y2: Math.max(...range)\n    };\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = coordinates;\n    const offset = {\n      x: dimension === \"x\" ? 0 : brushWidth / 2,\n      y: dimension === \"y\" ? 0 : brushWidth / 2\n    };\n    const x = Math.min(x1, x2) - offset.x;\n    const y = Math.min(y1, y2) - offset.y;\n    const width = Math.max(x1, x2) + offset.x - x;\n    const height = Math.max(y1, y2) + offset.y - y;\n    return {\n      x,\n      y,\n      width,\n      height\n    };\n  }\n  getHandleDimensions(props) {\n    const {\n      handleWidth,\n      x1,\n      x2,\n      y1,\n      y2,\n      brushDomain\n    } = props;\n    const dimension = getDimension(props);\n    const brushWidth = props.brushWidth || props.width;\n    const domain = getBrushDomain(brushDomain, getFullDomain(props));\n    const range = toRange(props, domain);\n    const defaultX = Math.min(x1, x2) - brushWidth / 2;\n    const defaultY = Math.min(y1, y2) - brushWidth / 2;\n    const x = {\n      min: dimension === \"x\" ? Math.min(...range) - handleWidth / 2 : defaultX,\n      max: dimension === \"x\" ? Math.max(...range) - handleWidth / 2 : defaultX\n    };\n    const y = {\n      min: dimension === \"y\" ? Math.max(...range) - handleWidth / 2 : defaultY,\n      max: dimension === \"y\" ? Math.min(...range) - handleWidth / 2 : defaultY\n    };\n    const width = dimension === \"x\" ? handleWidth : brushWidth;\n    const height = dimension === \"x\" ? brushWidth : handleWidth;\n    return {\n      min: {\n        x: x.min,\n        y: y.min,\n        width,\n        height\n      },\n      max: {\n        x: x.max,\n        y: y.max,\n        width,\n        height\n      }\n    };\n  }\n  getCursor(props) {\n    const {\n      activeBrushes = {}\n    } = props;\n    const dimension = getDimension(props);\n    if (activeBrushes.minHandle || activeBrushes.maxHandle) {\n      return dimension === \"x\" ? \"ew-resize\" : \"ns-resize\";\n    } else if (activeBrushes.brush) {\n      return \"move\";\n    }\n    return \"crosshair\";\n  }\n  renderHandles(props) {\n    const {\n      handleComponent,\n      handleStyle,\n      id,\n      brushDomain,\n      datum = {},\n      activeBrushes = {}\n    } = props;\n    if (!brushDomain) {\n      return null;\n    }\n    const handleDimensions = this.getHandleDimensions(props);\n    const style = Object.assign({}, fallbackProps.handleStyle, handleStyle);\n    const minDatum = Object.assign({\n      handleValue: Collection.getMinValue(brushDomain)\n    }, datum);\n    const maxDatum = Object.assign({\n      handleValue: Collection.getMaxValue(brushDomain)\n    }, datum);\n    const minHandleProps = Object.assign({\n      key: `${id}-min`,\n      style: Helpers.evaluateStyle(style, {\n        datum: minDatum,\n        active: activeBrushes.minHandle\n      })\n    }, handleDimensions.min);\n    const maxHandleProps = Object.assign({\n      key: `${id}-max`,\n      style: Helpers.evaluateStyle(style, {\n        datum: maxDatum,\n        active: activeBrushes.maxHandle\n      })\n    }, handleDimensions.max);\n    return [/*#__PURE__*/React.cloneElement(handleComponent, minHandleProps), /*#__PURE__*/React.cloneElement(handleComponent, maxHandleProps)];\n  }\n  renderBrush(props) {\n    const {\n      brushComponent,\n      brushStyle,\n      activeBrushes = {},\n      datum = {},\n      brushDomain\n    } = props;\n    if (!brushDomain) {\n      return null;\n    }\n    const brushWidth = props.brushWidth || props.width;\n    const rectDimensions = this.getRectDimensions(props, brushWidth);\n    const baseStyle = Object.assign({}, fallbackProps.brushStyle, brushStyle);\n    const style = Helpers.evaluateStyle(baseStyle, {\n      datum,\n      active: activeBrushes.brush\n    });\n    const brushProps = Object.assign({\n      style\n    }, rectDimensions);\n    return /*#__PURE__*/React.cloneElement(brushComponent, brushProps);\n  }\n  renderBrushArea(props) {\n    const {\n      brushAreaComponent,\n      brushAreaStyle,\n      activeBrushes = {},\n      datum = {}\n    } = props;\n    const brushAreaWidth = props.brushAreaWidth || props.width;\n    const cursor = this.getCursor(props);\n    const rectDimensions = this.getRectDimensions(props, brushAreaWidth, getFullDomain(props));\n    const baseStyle = Object.assign({\n      cursor\n    }, fallbackProps.brushAreaStyle, brushAreaStyle);\n    const style = Helpers.evaluateStyle(baseStyle, {\n      datum,\n      active: activeBrushes.brushArea\n    });\n    const brushAreaProps = Object.assign({\n      style\n    }, rectDimensions);\n    return /*#__PURE__*/React.cloneElement(brushAreaComponent, brushAreaProps);\n  }\n  renderLine(props) {\n    const filteredProps = _pick(props, [\"x1\", \"x2\", \"y1\", \"y2\", \"datum\", \"scale\", \"active\", \"style\"]);\n    return /*#__PURE__*/React.cloneElement(props.lineComponent, filteredProps);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"g\", this.props.events, this.renderLine(this.props), this.renderBrushArea(this.props), this.renderBrush(this.props), this.renderHandles(this.props));\n  }\n}"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,EAAEC,KAAK,EAAEC,MAAM,EAAEC,GAAG,QAAQ,cAAc;AAC9F,OAAOC,OAAO,MAAM,oBAAoB;AACxC,IAAMC,YAAY,GAAG,CAAC,GAAGC,MAAM,CAACC,gBAAgB;AAChD,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAGC,KAAK,EAAI;EACxB,IAAAC,YAAA,GAGID,KAAK,CAFPE,KAAK;IAALA,KAAK,GAAAD,YAAA,cAAG,CAAC,CAAC,GAAAA,YAAA;IAAAE,gBAAA,GAERH,KAAK,CADPI,SAAS;IAATA,SAAS,GAAAD,gBAAA,cAAG,GAAG,GAAAA,gBAAA;EAEjB,IAAID,KAAK,CAACE,SAAS,CAAC,EAAE;IACpB,OAAOF,KAAK,CAACE,SAAS,CAAC;EACzB;EACA,IAAMC,aAAa,GAAGb,KAAK,CAACc,YAAY,CAACN,KAAK,EAAEI,SAAS,CAAC;EAC1D,IAAMG,KAAK,GAAGlB,OAAO,CAACmB,QAAQ,CAACR,KAAK,EAAEI,SAAS,CAAC;EAChD,IAAMK,MAAM,GAAGhB,MAAM,CAACiB,kBAAkB,CAACV,KAAK,EAAEI,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACpEC,aAAa,CAACE,KAAK,CAACA,KAAK,CAAC,CAACE,MAAM,CAACA,MAAM,CAAC;EACzC,OAAOJ,aAAa;AACtB,CAAC;AACD,IAAMM,YAAY,GAAG,SAAfA,YAAYA,CAAGX,KAAK,EAAI;EAC5B,IACEY,UAAU,GAERZ,KAAK,CAFPY,UAAU;IAAAC,iBAAA,GAERb,KAAK,CADPI,SAAS;IAATA,SAAS,GAAAS,iBAAA,cAAG,GAAG,GAAAA,iBAAA;EAEjB,IAAI,CAACD,UAAU,EAAE;IACf,OAAOR,SAAS;EAClB;EACA,OAAOA,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;AACtC,CAAC;AACD,IAAMU,OAAO,GAAG,SAAVA,OAAOA,CAAId,KAAK,EAAES,MAAM,EAAK;EACjC,IAAMP,KAAK,GAAGH,QAAQ,CAACC,KAAK,CAAC;EAC7B,OAAO,CAACE,KAAK,CAACa,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQT,MAAM,EAAC,CAAC,EAAEP,KAAK,CAACa,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQT,MAAM,EAAC,CAAC,CAAC;AACjE,CAAC;AACD,IAAMW,QAAQ,GAAG,SAAXA,QAAQA,CAAIpB,KAAK,EAAEO,KAAK,EAAK;EACjC,IAAML,KAAK,GAAGH,QAAQ,CAACC,KAAK,CAAC;EAC7B,OAAO,CAACE,KAAK,CAACmB,MAAM,CAACN,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,CAAC,EAAEL,KAAK,CAACmB,MAAM,CAACN,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,CAAC,CAAC;AAC7E,CAAC;AACD,IAAMe,YAAY,GAAG,SAAfA,YAAYA,CAAGtB,KAAK,EAAI;EAC5B,IAAME,KAAK,GAAGH,QAAQ,CAACC,KAAK,CAAC;EAC7B,OAAOE,KAAK,CAACK,KAAK,CAAC,CAAC;AACtB,CAAC;AACD,IAAMgB,aAAa,GAAG,SAAhBA,aAAaA,CAAGvB,KAAK,EAAI;EAC7B,IAAME,KAAK,GAAGH,QAAQ,CAACC,KAAK,CAAC;EAC7B,OAAOE,KAAK,CAACO,MAAM,CAAC,CAAC;AACvB,CAAC;AACD,IAAMe,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAEC,KAAK,EAAK;EACpC,OAAOD,KAAK,IAAInC,UAAU,CAACqC,WAAW,CAACD,KAAK,CAAC,IAAID,KAAK,IAAInC,UAAU,CAACsC,WAAW,CAACF,KAAK,CAAC;AACzF,CAAC;AACD,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,WAAW,EAAEC,UAAU,EAAK;EAClD,IAAID,WAAW,EAAE;IACf,IAAME,QAAQ,GAAG1C,UAAU,CAACqC,WAAW,CAACG,WAAW,CAAC;IACpD,IAAMG,QAAQ,GAAG3C,UAAU,CAACsC,WAAW,CAACE,WAAW,CAAC;IACpD,IAAMI,SAAS,GAAG5C,UAAU,CAACqC,WAAW,CAACI,UAAU,CAAC;IACpD,IAAMI,SAAS,GAAG7C,UAAU,CAACsC,WAAW,CAACG,UAAU,CAAC;IACpD,IAAMK,UAAU,GAAGJ,QAAQ,GAAGE,SAAS,GAAGA,SAAS,GAAGrC,MAAM,CAACsC,SAAS,CAAC,GAAGvC,YAAY;IACtF,IAAMyC,UAAU,GAAGJ,QAAQ,GAAGE,SAAS,GAAGA,SAAS,GAAGtC,MAAM,CAACqC,SAAS,CAAC,GAAGtC,YAAY;IACtF,IAAMoB,GAAG,GAAGQ,WAAW,CAACQ,QAAQ,EAAED,UAAU,CAAC,GAAGC,QAAQ,GAAGI,UAAU;IACrE,IAAMjB,GAAG,GAAGK,WAAW,CAACS,QAAQ,EAAEF,UAAU,CAAC,GAAGE,QAAQ,GAAGI,UAAU;IACrE,OAAO,CAACrB,GAAG,EAAEG,GAAG,CAAC;EACnB;EACA,OAAOY,UAAU;AACnB,CAAC;AACD,IAAMO,eAAe,GAAG,SAAlBA,eAAeA,CAAItC,KAAK,EAAEuC,QAAQ,EAAEhC,KAAK,EAAK;EAClD,IAAMiC,KAAK,GAAGxC,KAAK,CAACyC,WAAW,GAAG,CAAC;EACnC,IAAMrC,SAAS,GAAGO,YAAY,CAACX,KAAK,CAAC;EACrC,IAAM0C,SAAS,GAAG,SAAZA,SAASA,CAAGC,IAAI,EAAI;IACxB,IAAMC,IAAI,GAAG;MACX5B,GAAG,EAAEZ,SAAS,KAAK,GAAG,GAAGW,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,GAAGQ,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC;MAChEY,GAAG,EAAEf,SAAS,KAAK,GAAG,GAAGW,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,GAAGQ,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK;IACjE,CAAC;IACD,OAAO,CAACqC,IAAI,CAACD,IAAI,CAAC,GAAGH,KAAK,EAAEI,IAAI,CAACD,IAAI,CAAC,GAAGH,KAAK,CAAC;EACjD,CAAC;EACD,IAAMK,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAACC,MAAM,CAAC,UAACC,IAAI,EAAEJ,IAAI,EAAK;IACnDI,IAAI,CAACJ,IAAI,CAAC,GAAGnB,WAAW,CAACe,QAAQ,EAAEG,SAAS,CAACC,IAAI,CAAC,CAAC,GAAGA,IAAI,GAAGK,SAAS;IACtE,OAAOD,IAAI;EACb,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOF,MAAM,CAAC7B,GAAG,IAAI6B,MAAM,CAAC1B,GAAG,GAAG,MAAM,GAAG0B,MAAM,CAAC7B,GAAG,IAAI6B,MAAM,CAAC1B,GAAG;AACrE,CAAC;AACD,IAAM8B,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,OAAO,CAAC,CAAC,EAAErD,YAAY,CAAC;AAC1B,CAAC;AACD,IAAMsD,MAAM,GAAG,SAATA,MAAMA,CAAIlD,KAAK,EAAEuC,QAAQ,EAAK;EAClC,IACET,WAAW,GAET9B,KAAK,CAFP8B,WAAW;IACXqB,aAAa,GACXnD,KAAK,CADPmD,aAAa;EAEf,IAAM5C,KAAK,GAAGO,OAAO,CAACd,KAAK,EAAE8B,WAAW,CAAC;EACzC,IAAMsB,SAAS,GAAG9B,YAAY,CAACtB,KAAK,CAAC;EACrC,IAAMqD,IAAI,GAAGtC,IAAI,CAACuC,GAAG,CAAC/C,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,IAAMgD,SAAS,GAAGxC,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQkC,SAAS,EAAC;EACxC,IAAMI,SAAS,GAAGzC,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQkC,SAAS,EAAC;EACxC,IAAMK,KAAK,GAAGN,aAAa,GAAGA,aAAa,GAAGZ,QAAQ,GAAG,CAAC;EAC1D,IAAMvB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,GAAGkD,KAAK;EACtC,IAAMtC,GAAG,GAAGJ,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,GAAGkD,KAAK;EACtC,IAAMC,cAAc,GAAG1C,GAAG,GAAGwC,SAAS,GAAGH,IAAI,GAAGG,SAAS,GAAGH,IAAI,GAAGtC,IAAI,CAACI,GAAG,CAACH,GAAG,EAAEuC,SAAS,CAAC;EAC3F,IAAMI,cAAc,GAAGxC,GAAG,GAAGoC,SAAS,GAAGF,IAAI,GAAGE,SAAS,GAAGF,IAAI,GAAGtC,IAAI,CAACC,GAAG,CAACG,GAAG,EAAEqC,SAAS,CAAC;EAC3F,OAAO,CAACE,cAAc,EAAEC,cAAc,CAAC;AACzC,CAAC;AACD,IAAMC,aAAa,GAAG;EACpBC,cAAc,EAAE;IACdC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,OAAO;IACbC,OAAO,EAAE,SAAAA,QAAAC,IAAI,EAAI;MACf,IACEpB,MAAM,GACJoB,IAAI,CADNpB,MAAM;MAER,OAAOA,MAAM,GAAG,GAAG,GAAG,GAAG;IAC3B,CAAC,CAAC;EACJ,CAAC;;EACDqB,UAAU,EAAE;IACVC,aAAa,EAAE,MAAM;IACrBL,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,OAAO;IACbC,OAAO,EAAE,SAAAA,QAAAI,KAAK,EAAI;MAChB,IACEvB,MAAM,GACJuB,KAAK,CADPvB,MAAM;MAER,OAAOA,MAAM,GAAG,GAAG,GAAG,GAAG;IAC3B,CAAC,CAAC;EACJ,CAAC;;EACDwB,WAAW,EAAE;IACXF,aAAa,EAAE,MAAM;IACrBL,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;EACR;AACF,CAAC;AACD,WAAaO,gBAAgB,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAAA,SAAAA,iBAAA;IAAAK,eAAA,OAAAL,gBAAA;IAAA,OAAAG,MAAA,CAAAxD,KAAA,OAAA2D,SAAA;EAAA;EAAAC,YAAA,CAAAP,gBAAA;IAAAQ,GAAA;IAAArD,KAAA,EA4O3B,SAAAsD,kBAAkB/E,KAAK,EAAEgF,UAAU,EAAEvE,MAAM,EAAE;MAC3C,IACEqB,WAAW,GACT9B,KAAK,CADP8B,WAAW;MAEb,IAAM1B,SAAS,GAAGO,YAAY,CAACX,KAAK,CAAC;MACrC,IAAMO,KAAK,GAAGO,OAAO,CAACd,KAAK,EAAES,MAAM,IAAIoB,cAAc,CAACC,WAAW,EAAEP,aAAa,CAACvB,KAAK,CAAC,CAAC,CAAC;MACzF,IAAMiF,WAAW,GAAG7E,SAAS,KAAK,GAAG,GAAG;QACtC8E,EAAE,EAAElF,KAAK,CAACkF,EAAE;QACZC,EAAE,EAAEnF,KAAK,CAACmF,EAAE;QACZC,EAAE,EAAErE,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC;QACtB8E,EAAE,EAAEtE,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK;MACvB,CAAC,GAAG;QACF6E,EAAE,EAAEpF,KAAK,CAACoF,EAAE;QACZC,EAAE,EAAErF,KAAK,CAACqF,EAAE;QACZH,EAAE,EAAEnE,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC;QACtB4E,EAAE,EAAEpE,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK;MACvB,CAAC;MACD,IACE6E,EAAE,GAIAH,WAAW,CAJbG,EAAE;QACFC,EAAE,GAGAJ,WAAW,CAHbI,EAAE;QACFH,EAAE,GAEAD,WAAW,CAFbC,EAAE;QACFC,EAAE,GACAF,WAAW,CADbE,EAAE;MAEJ,IAAMG,MAAM,GAAG;QACbC,CAAC,EAAEnF,SAAS,KAAK,GAAG,GAAG,CAAC,GAAG4E,UAAU,GAAG,CAAC;QACzCQ,CAAC,EAAEpF,SAAS,KAAK,GAAG,GAAG,CAAC,GAAG4E,UAAU,GAAG;MAC1C,CAAC;MACD,IAAMO,CAAC,GAAGxE,IAAI,CAACC,GAAG,CAACoE,EAAE,EAAEC,EAAE,CAAC,GAAGC,MAAM,CAACC,CAAC;MACrC,IAAMC,CAAC,GAAGzE,IAAI,CAACC,GAAG,CAACkE,EAAE,EAAEC,EAAE,CAAC,GAAGG,MAAM,CAACE,CAAC;MACrC,IAAMhD,KAAK,GAAGzB,IAAI,CAACI,GAAG,CAACiE,EAAE,EAAEC,EAAE,CAAC,GAAGC,MAAM,CAACC,CAAC,GAAGA,CAAC;MAC7C,IAAME,MAAM,GAAG1E,IAAI,CAACI,GAAG,CAAC+D,EAAE,EAAEC,EAAE,CAAC,GAAGG,MAAM,CAACE,CAAC,GAAGA,CAAC;MAC9C,OAAO;QACLD,CAAC,EAADA,CAAC;QACDC,CAAC,EAADA,CAAC;QACDhD,KAAK,EAALA,KAAK;QACLiD,MAAM,EAANA;MACF,CAAC;IACH;EAAC;IAAAX,GAAA;IAAArD,KAAA,EACD,SAAAiE,oBAAoB1F,KAAK,EAAE;MACzB,IACEyC,WAAW,GAMTzC,KAAK,CANPyC,WAAW;QACX2C,EAAE,GAKApF,KAAK,CALPoF,EAAE;QACFC,EAAE,GAIArF,KAAK,CAJPqF,EAAE;QACFH,EAAE,GAGAlF,KAAK,CAHPkF,EAAE;QACFC,EAAE,GAEAnF,KAAK,CAFPmF,EAAE;QACFrD,WAAW,GACT9B,KAAK,CADP8B,WAAW;MAEb,IAAM1B,SAAS,GAAGO,YAAY,CAACX,KAAK,CAAC;MACrC,IAAMgF,UAAU,GAAGhF,KAAK,CAACgF,UAAU,IAAIhF,KAAK,CAACwC,KAAK;MAClD,IAAM/B,MAAM,GAAGoB,cAAc,CAACC,WAAW,EAAEP,aAAa,CAACvB,KAAK,CAAC,CAAC;MAChE,IAAMO,KAAK,GAAGO,OAAO,CAACd,KAAK,EAAES,MAAM,CAAC;MACpC,IAAMkF,QAAQ,GAAG5E,IAAI,CAACC,GAAG,CAACoE,EAAE,EAAEC,EAAE,CAAC,GAAGL,UAAU,GAAG,CAAC;MAClD,IAAMY,QAAQ,GAAG7E,IAAI,CAACC,GAAG,CAACkE,EAAE,EAAEC,EAAE,CAAC,GAAGH,UAAU,GAAG,CAAC;MAClD,IAAMO,CAAC,GAAG;QACRvE,GAAG,EAAEZ,SAAS,KAAK,GAAG,GAAGW,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,GAAGkC,WAAW,GAAG,CAAC,GAAGkD,QAAQ;QACxExE,GAAG,EAAEf,SAAS,KAAK,GAAG,GAAGW,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,GAAGkC,WAAW,GAAG,CAAC,GAAGkD;MAClE,CAAC;MACD,IAAMH,CAAC,GAAG;QACRxE,GAAG,EAAEZ,SAAS,KAAK,GAAG,GAAGW,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,GAAGkC,WAAW,GAAG,CAAC,GAAGmD,QAAQ;QACxEzE,GAAG,EAAEf,SAAS,KAAK,GAAG,GAAGW,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,GAAGkC,WAAW,GAAG,CAAC,GAAGmD;MAClE,CAAC;MACD,IAAMpD,KAAK,GAAGpC,SAAS,KAAK,GAAG,GAAGqC,WAAW,GAAGuC,UAAU;MAC1D,IAAMS,MAAM,GAAGrF,SAAS,KAAK,GAAG,GAAG4E,UAAU,GAAGvC,WAAW;MAC3D,OAAO;QACLzB,GAAG,EAAE;UACHuE,CAAC,EAAEA,CAAC,CAACvE,GAAG;UACRwE,CAAC,EAAEA,CAAC,CAACxE,GAAG;UACRwB,KAAK,EAALA,KAAK;UACLiD,MAAM,EAANA;QACF,CAAC;QACDtE,GAAG,EAAE;UACHoE,CAAC,EAAEA,CAAC,CAACpE,GAAG;UACRqE,CAAC,EAAEA,CAAC,CAACrE,GAAG;UACRqB,KAAK,EAALA,KAAK;UACLiD,MAAM,EAANA;QACF;MACF,CAAC;IACH;EAAC;IAAAX,GAAA;IAAArD,KAAA,EACD,SAAAoE,UAAU7F,KAAK,EAAE;MACf,IAAA8F,oBAAA,GAEI9F,KAAK,CADP+F,aAAa;QAAbA,aAAa,GAAAD,oBAAA,cAAG,CAAC,CAAC,GAAAA,oBAAA;MAEpB,IAAM1F,SAAS,GAAGO,YAAY,CAACX,KAAK,CAAC;MACrC,IAAI+F,aAAa,CAACC,SAAS,IAAID,aAAa,CAACE,SAAS,EAAE;QACtD,OAAO7F,SAAS,KAAK,GAAG,GAAG,WAAW,GAAG,WAAW;MACtD,CAAC,MAAM,IAAI2F,aAAa,CAACG,KAAK,EAAE;QAC9B,OAAO,MAAM;MACf;MACA,OAAO,WAAW;IACpB;EAAC;IAAApB,GAAA;IAAArD,KAAA,EACD,SAAA0E,cAAcnG,KAAK,EAAE;MACnB,IACEoG,eAAe,GAMbpG,KAAK,CANPoG,eAAe;QACf/B,WAAW,GAKTrE,KAAK,CALPqE,WAAW;QACXgC,EAAE,GAIArG,KAAK,CAJPqG,EAAE;QACFvE,WAAW,GAGT9B,KAAK,CAHP8B,WAAW;QAAAwE,YAAA,GAGTtG,KAAK,CAFPuG,KAAK;QAALA,KAAK,GAAAD,YAAA,cAAG,CAAC,CAAC,GAAAA,YAAA;QAAAE,qBAAA,GAERxG,KAAK,CADP+F,aAAa;QAAbA,aAAa,GAAAS,qBAAA,cAAG,CAAC,CAAC,GAAAA,qBAAA;MAEpB,IAAI,CAAC1E,WAAW,EAAE;QAChB,OAAO,IAAI;MACb;MACA,IAAM2E,gBAAgB,GAAG,IAAI,CAACf,mBAAmB,CAAC1F,KAAK,CAAC;MACxD,IAAM0G,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEhD,aAAa,CAACS,WAAW,EAAEA,WAAW,CAAC;MACvE,IAAMwC,QAAQ,GAAGF,MAAM,CAACC,MAAM,CAAC;QAC7BE,WAAW,EAAExH,UAAU,CAACqC,WAAW,CAACG,WAAW;MACjD,CAAC,EAAEyE,KAAK,CAAC;MACT,IAAMQ,QAAQ,GAAGJ,MAAM,CAACC,MAAM,CAAC;QAC7BE,WAAW,EAAExH,UAAU,CAACsC,WAAW,CAACE,WAAW;MACjD,CAAC,EAAEyE,KAAK,CAAC;MACT,IAAMS,cAAc,GAAGL,MAAM,CAACC,MAAM,CAAC;QACnC9B,GAAG,KAAAmC,MAAA,CAAKZ,EAAE,SAAM;QAChBK,KAAK,EAAErH,OAAO,CAAC6H,aAAa,CAACR,KAAK,EAAE;UAClCH,KAAK,EAAEM,QAAQ;UACfhE,MAAM,EAAEkD,aAAa,CAACC;QACxB,CAAC;MACH,CAAC,EAAES,gBAAgB,CAACzF,GAAG,CAAC;MACxB,IAAMmG,cAAc,GAAGR,MAAM,CAACC,MAAM,CAAC;QACnC9B,GAAG,KAAAmC,MAAA,CAAKZ,EAAE,SAAM;QAChBK,KAAK,EAAErH,OAAO,CAAC6H,aAAa,CAACR,KAAK,EAAE;UAClCH,KAAK,EAAEQ,QAAQ;UACflE,MAAM,EAAEkD,aAAa,CAACE;QACxB,CAAC;MACH,CAAC,EAAEQ,gBAAgB,CAACtF,GAAG,CAAC;MACxB,OAAO,CAAC,aAAahC,KAAK,CAACiI,YAAY,CAAChB,eAAe,EAAEY,cAAc,CAAC,EAAE,aAAa7H,KAAK,CAACiI,YAAY,CAAChB,eAAe,EAAEe,cAAc,CAAC,CAAC;IAC7I;EAAC;IAAArC,GAAA;IAAArD,KAAA,EACD,SAAA4F,YAAYrH,KAAK,EAAE;MACjB,IACEsH,cAAc,GAKZtH,KAAK,CALPsH,cAAc;QACdpD,UAAU,GAIRlE,KAAK,CAJPkE,UAAU;QAAAqD,qBAAA,GAIRvH,KAAK,CAHP+F,aAAa;QAAbA,aAAa,GAAAwB,qBAAA,cAAG,CAAC,CAAC,GAAAA,qBAAA;QAAAC,aAAA,GAGhBxH,KAAK,CAFPuG,KAAK;QAALA,KAAK,GAAAiB,aAAA,cAAG,CAAC,CAAC,GAAAA,aAAA;QACV1F,WAAW,GACT9B,KAAK,CADP8B,WAAW;MAEb,IAAI,CAACA,WAAW,EAAE;QAChB,OAAO,IAAI;MACb;MACA,IAAMkD,UAAU,GAAGhF,KAAK,CAACgF,UAAU,IAAIhF,KAAK,CAACwC,KAAK;MAClD,IAAMiF,cAAc,GAAG,IAAI,CAAC1C,iBAAiB,CAAC/E,KAAK,EAAEgF,UAAU,CAAC;MAChE,IAAM0C,SAAS,GAAGf,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEhD,aAAa,CAACM,UAAU,EAAEA,UAAU,CAAC;MACzE,IAAMwC,KAAK,GAAGrH,OAAO,CAAC6H,aAAa,CAACQ,SAAS,EAAE;QAC7CnB,KAAK,EAALA,KAAK;QACL1D,MAAM,EAAEkD,aAAa,CAACG;MACxB,CAAC,CAAC;MACF,IAAMyB,UAAU,GAAGhB,MAAM,CAACC,MAAM,CAAC;QAC/BF,KAAK,EAALA;MACF,CAAC,EAAEe,cAAc,CAAC;MAClB,OAAO,aAAatI,KAAK,CAACiI,YAAY,CAACE,cAAc,EAAEK,UAAU,CAAC;IACpE;EAAC;IAAA7C,GAAA;IAAArD,KAAA,EACD,SAAAmG,gBAAgB5H,KAAK,EAAE;MACrB,IACE6H,kBAAkB,GAIhB7H,KAAK,CAJP6H,kBAAkB;QAClBhE,cAAc,GAGZ7D,KAAK,CAHP6D,cAAc;QAAAiE,qBAAA,GAGZ9H,KAAK,CAFP+F,aAAa;QAAbA,aAAa,GAAA+B,qBAAA,cAAG,CAAC,CAAC,GAAAA,qBAAA;QAAAC,aAAA,GAEhB/H,KAAK,CADPuG,KAAK;QAALA,KAAK,GAAAwB,aAAA,cAAG,CAAC,CAAC,GAAAA,aAAA;MAEZ,IAAMC,cAAc,GAAGhI,KAAK,CAACgI,cAAc,IAAIhI,KAAK,CAACwC,KAAK;MAC1D,IAAMyF,MAAM,GAAG,IAAI,CAACpC,SAAS,CAAC7F,KAAK,CAAC;MACpC,IAAMyH,cAAc,GAAG,IAAI,CAAC1C,iBAAiB,CAAC/E,KAAK,EAAEgI,cAAc,EAAEzG,aAAa,CAACvB,KAAK,CAAC,CAAC;MAC1F,IAAM0H,SAAS,GAAGf,MAAM,CAACC,MAAM,CAAC;QAC9BqB,MAAM,EAANA;MACF,CAAC,EAAErE,aAAa,CAACC,cAAc,EAAEA,cAAc,CAAC;MAChD,IAAM6C,KAAK,GAAGrH,OAAO,CAAC6H,aAAa,CAACQ,SAAS,EAAE;QAC7CnB,KAAK,EAALA,KAAK;QACL1D,MAAM,EAAEkD,aAAa,CAACmC;MACxB,CAAC,CAAC;MACF,IAAMC,cAAc,GAAGxB,MAAM,CAACC,MAAM,CAAC;QACnCF,KAAK,EAALA;MACF,CAAC,EAAEe,cAAc,CAAC;MAClB,OAAO,aAAatI,KAAK,CAACiI,YAAY,CAACS,kBAAkB,EAAEM,cAAc,CAAC;IAC5E;EAAC;IAAArD,GAAA;IAAArD,KAAA,EACD,SAAA2G,WAAWpI,KAAK,EAAE;MAChB,IAAMqI,aAAa,GAAGpJ,KAAK,CAACe,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;MACjG,OAAO,aAAab,KAAK,CAACiI,YAAY,CAACpH,KAAK,CAACsI,aAAa,EAAED,aAAa,CAAC;IAC5E;EAAC;IAAAvD,GAAA;IAAArD,KAAA,EACD,SAAA8G,OAAA,EAAS;MACP,OAAO,aAAapJ,KAAK,CAACqJ,aAAa,CAAC,GAAG,EAAE,IAAI,CAACxI,KAAK,CAACyI,MAAM,EAAE,IAAI,CAACL,UAAU,CAAC,IAAI,CAACpI,KAAK,CAAC,EAAE,IAAI,CAAC4H,eAAe,CAAC,IAAI,CAAC5H,KAAK,CAAC,EAAE,IAAI,CAACqH,WAAW,CAAC,IAAI,CAACrH,KAAK,CAAC,EAAE,IAAI,CAACmG,aAAa,CAAC,IAAI,CAACnG,KAAK,CAAC,CAAC;IAC9L;EAAC;EAAA,OAAAsE,gBAAA;AAAA,EA7ZmCnF,KAAK,CAACuJ,SAAS;AA8ZpDC,eAAA,CA9ZYrE,gBAAgB,kBACL;EACpBsE,SAAS,EAAE,IAAI;EACfC,SAAS,EAAE,IAAI;EACfC,WAAW,EAAE,IAAI;EACjBjB,kBAAkB,EAAE,aAAa1I,KAAK,CAACqJ,aAAa,CAAC9I,GAAG,EAAE,IAAI,CAAC;EAC/D4H,cAAc,EAAE,aAAanI,KAAK,CAACqJ,aAAa,CAAC9I,GAAG,EAAE,IAAI,CAAC;EAC3DqJ,cAAc,EAAE,aAAa5J,KAAK,CAACqJ,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC;EAC3DpC,eAAe,EAAE,aAAajH,KAAK,CAACqJ,aAAa,CAAC9I,GAAG,EAAE,IAAI,CAAC;EAC5D+C,WAAW,EAAE,EAAE;EACf6F,aAAa,EAAE,aAAanJ,KAAK,CAACqJ,aAAa,CAACjJ,WAAW,EAAE,IAAI,CAAC;EAClEiD,KAAK,EAAE;AACT,CAAC;AAAAmG,eAAA,CAZUrE,gBAAgB,mBAaJ,UAAUtE,KAAK,EAAE;EACtC,OAAOA,KAAK,CAACgJ,OAAO,GAAGhG,SAAS,GAAG,CAAC;IAClCiG,MAAM,EAAEjJ,KAAK,CAAC2C,IAAI;IAClBuG,aAAa,EAAE;MACbC,YAAY,EAAE,SAAAA,aAACC,GAAG,EAAEC,WAAW,EAAK;QAClCD,GAAG,CAACE,cAAc,CAAC,CAAC;QACpB,IACER,WAAW,GAETO,WAAW,CAFbP,WAAW;UACXhH,WAAW,GACTuH,WAAW,CADbvH,WAAW;QAEb,IAAM1B,SAAS,GAAGO,YAAY,CAAC0I,WAAW,CAAC;QAC3C,IAAME,SAAS,GAAGF,WAAW,CAACE,SAAS,IAAInK,SAAS,CAACoK,YAAY,CAACJ,GAAG,CAAC;QACtE,IAAM7G,QAAQ,GAAGnD,SAAS,CAACqK,sBAAsB,CAACL,GAAG,EAAEG,SAAS,CAAC,CAACnJ,SAAS,CAAC;QAC5E,IAAM2B,UAAU,GAAGR,aAAa,CAAC8H,WAAW,CAAC;QAC7C,IAAMK,aAAa,GAAG7H,cAAc,CAACC,WAAW,EAAEC,UAAU,CAAC;QAC7D,IAAMxB,KAAK,GAAGO,OAAO,CAACuI,WAAW,EAAEK,aAAa,CAAC;QACjD,IAAMC,YAAY,GAAGb,WAAW,IAAIxG,eAAe,CAAC+G,WAAW,EAAE9G,QAAQ,EAAEhC,KAAK,CAAC;QACjF,IAAMwF,aAAa,GAAG;UACpBmC,SAAS,EAAE,CAACmB,WAAW,CAACvH,WAAW;UACnCoE,KAAK,EAAE1E,WAAW,CAACe,QAAQ,EAAEhC,KAAK,CAAC,IAAI,CAACZ,OAAO,CAACoC,UAAU,EAAE2H,aAAa,CAAC;UAC1E1D,SAAS,EAAE2D,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAK,MAAM;UAC5D1D,SAAS,EAAE0D,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAK;QACxD,CAAC;QACD,OAAO,CAAC;UACNC,QAAQ,EAAE,SAAAA,SAAA;YAAA,OAAO;cACf7D,aAAa,EAAbA,aAAa;cACbjE,WAAW,EAAEuH,WAAW,CAACvH,WAAW;cACpCyH,SAAS,EAATA;YACF,CAAC;UAAA;QACH,CAAC,CAAC;MACJ,CAAC;MACDM,WAAW,EAAE,SAAAA,YAACT,GAAG,EAAEC,WAAW,EAAK;QACjCD,GAAG,CAACE,cAAc,CAAC,CAAC;QACpB,IACER,WAAW,GAKTO,WAAW,CALbP,WAAW;UACXF,SAAS,GAIPS,WAAW,CAJbT,SAAS;UACTC,SAAS,GAGPQ,WAAW,CAHbR,SAAS;UACT9C,aAAa,GAEXsD,WAAW,CAFbtD,aAAa;UACbjE,WAAW,GACTuH,WAAW,CADbvH,WAAW;QAEb,IAAM1B,SAAS,GAAGO,YAAY,CAAC0I,WAAW,CAAC;;QAE3C;QACA,IAAI,CAACP,WAAW,IAAI,CAACF,SAAS,EAAE;UAC9B,OAAO,EAAE;QACX;QACA,IAAM7G,UAAU,GAAGR,aAAa,CAAC8H,WAAW,CAAC;QAC7C,IAAMK,aAAa,GAAG7H,cAAc,CAACC,WAAW,EAAEC,UAAU,CAAC;QAC7D,IAAMwH,SAAS,GAAGF,WAAW,CAACE,SAAS,IAAInK,SAAS,CAACoK,YAAY,CAACJ,GAAG,CAAC;QACtE,IAAM7G,QAAQ,GAAGnD,SAAS,CAACqK,sBAAsB,CAACL,GAAG,EAAEG,SAAS,CAAC,CAACnJ,SAAS,CAAC;QAC5E,IAAMG,KAAK,GAAGO,OAAO,CAACuI,WAAW,EAAEK,aAAa,CAAC;QACjD,IAAMC,YAAY,GAAGb,WAAW,IAAIxG,eAAe,CAAC+G,WAAW,EAAE9G,QAAQ,EAAEhC,KAAK,CAAC;QACjF;QACA,IAAIoJ,YAAY,EAAE;UAChB,OAAO,CAAC;YACNC,QAAQ,EAAE,SAAAA,SAAA,EAAM;cACd,OAAO;gBACLL,SAAS,EAATA,SAAS;gBACTO,WAAW,EAAE,IAAI;gBACjBH,YAAY,EAAZA,YAAY;gBACZ7H,WAAW,EAAE4H,aAAa;gBAC1BvG,aAAa,EAAEZ,QAAQ;gBACvBwD,aAAa,EAAbA;cACF,CAAC;YACH;UACF,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIvE,WAAW,CAACe,QAAQ,EAAEhC,KAAK,CAAC,IAAI,CAACZ,OAAO,CAACoC,UAAU,EAAE2H,aAAa,CAAC,EAAE;UAC9E;UACA;UACA,OAAO,CAAC;YACNE,QAAQ,EAAE,SAAAA,SAAA;cAAA,OAAO;gBACfG,SAAS,EAAEnB,SAAS;gBACpBzF,aAAa,EAAEZ,QAAQ;gBACvBT,WAAW,EAAE4H,aAAa;gBAC1B3D,aAAa,EAAbA,aAAa;gBACbwD,SAAS,EAATA;cACF,CAAC;YAAA;UACH,CAAC,CAAC;QACJ;QACA;QACA;QACA,OAAOV,SAAS,GAAG,CAAC;UAClBe,QAAQ,EAAE,SAAAA,SAAA;YAAA,OAAO;cACfE,WAAW,EAAEhB,WAAW;cACxBhH,WAAW,EAAE,IAAI;cACjBqB,aAAa,EAAEZ,QAAQ;cACvBwD,aAAa,EAAbA,aAAa;cACbwD,SAAS,EAATA;YACF,CAAC;UAAA;QACH,CAAC,CAAC,GAAG,EAAE;MACT,CAAC;MACD;MACAS,WAAW,EAAE,SAAAA,YAACZ,GAAG,EAAEC,WAAW,EAAK;QACjC,IACEU,SAAS,GAMPV,WAAW,CANbU,SAAS;UACTD,WAAW,GAKTT,WAAW,CALbS,WAAW;UACXhB,WAAW,GAITO,WAAW,CAJbP,WAAW;UACXF,SAAS,GAGPS,WAAW,CAHbT,SAAS;UACTqB,mBAAmB,GAEjBZ,WAAW,CAFbY,mBAAmB;UACnBnI,WAAW,GACTuH,WAAW,CADbvH,WAAW;QAEb,IAAM1B,SAAS,GAAGO,YAAY,CAAC0I,WAAW,CAAC;QAC3C,IAAIU,SAAS,IAAID,WAAW,EAAE;UAC5BV,GAAG,CAACE,cAAc,CAAC,CAAC;UACpBF,GAAG,CAACc,eAAe,CAAC,CAAC;QACvB;QACA,IAAMX,SAAS,GAAGF,WAAW,CAACE,SAAS,IAAInK,SAAS,CAACoK,YAAY,CAACJ,GAAG,CAAC;QACtE,IAAM7G,QAAQ,GAAGnD,SAAS,CAACqK,sBAAsB,CAACL,GAAG,EAAEG,SAAS,CAAC,CAACnJ,SAAS,CAAC;QAC5E,IAAM2B,UAAU,GAAGR,aAAa,CAAC8H,WAAW,CAAC;QAC7C,IAAM5I,MAAM,GAAGoB,cAAc,CAACC,WAAW,EAAEC,UAAU,CAAC;QACtD,IAAMoI,YAAY,GAAGrJ,OAAO,CAACuI,WAAW,EAAE5I,MAAM,CAAC;QACjD,IAAMkJ,YAAY,GAAGrH,eAAe,CAAC+G,WAAW,EAAE9G,QAAQ,EAAE4H,YAAY,CAAC;QACzE,IAAMpE,aAAa,GAAG;UACpBmC,SAAS,EAAE,CAACmB,WAAW,CAACvH,WAAW;UACnCoE,KAAK,EAAE1E,WAAW,CAACe,QAAQ,EAAE4H,YAAY,CAAC,IAAI,CAACxK,OAAO,CAACoC,UAAU,EAAEtB,MAAM,CAAC;UAC1EuF,SAAS,EAAE2D,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAK,MAAM;UAC5D1D,SAAS,EAAE0D,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAK;QACxD,CAAC;QACD,IAAI,CAACN,WAAW,CAACU,SAAS,IAAI,CAACV,WAAW,CAACS,WAAW,EAAE;UACtD,OAAO,CAAC;YACNF,QAAQ,EAAE,SAAAA,SAAA;cAAA,OAAO;gBACf7D,aAAa,EAAbA,aAAa;gBACbjE,WAAW,EAAEuH,WAAW,CAACvH,WAAW;gBACpCyH,SAAS,EAATA;cACF,CAAC;YAAA;UACH,CAAC,CAAC;QACJ;QACA,IAAIX,SAAS,IAAImB,SAAS,EAAE;UAC1B,IAAM3G,SAAS,GAAG9B,YAAY,CAAC+H,WAAW,CAAC;UAC3C,IAAM9I,KAAK,GAAG2C,MAAM,CAACmG,WAAW,EAAE9G,QAAQ,CAAC;UAC3C,IAAMmH,aAAa,GAAGtI,QAAQ,CAACiI,WAAW,EAAE9I,KAAK,CAAC;UAClD,IAAM4C,aAAa,GAAGpC,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,IAAIQ,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQkC,SAAS,EAAC,IAAIrC,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,KAAK,EAAC,IAAIQ,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQkC,SAAS,EAAC,GAAGiG,WAAW,CAAClG,aAAa,GAAGZ,QAAQ;UACzJ,IAAM6H,YAAY,GAAG;YACnBjH,aAAa,EAAbA,aAAa;YACb4G,SAAS,EAAE,IAAI;YACfjI,WAAW,EAAE4H,aAAa;YAC1B3D,aAAa,EAAE;cACbG,KAAK,EAAE;YACT,CAAC;YACDqD,SAAS,EAATA;UACF,CAAC;UACD,IAAIlK,OAAO,CAACgL,UAAU,CAACJ,mBAAmB,CAAC,EAAE;YAC3CA,mBAAmB,CAACP,aAAa,EAAExK,SAAS,CAAC,CAAC,CAAC,EAAEkL,YAAY,EAAEf,WAAW,CAAC,CAAC;UAC9E;UACA,OAAO,CAAC;YACNO,QAAQ,EAAE,SAAAA,SAAA;cAAA,OAAMQ,YAAY;YAAA;UAC9B,CAAC,CAAC;QACJ,CAAC,MAAM,IAAItB,WAAW,IAAIgB,WAAW,EAAE;UACrC,IAAIJ,cAAa,GAAG5H,WAAW,IAAImB,gBAAgB,CAAC,CAAC;UACrD,IAAM1C,MAAK,GAAGO,OAAO,CAACuI,WAAW,EAAEK,cAAa,CAAC;UACjD,IAAMY,cAAc,GAAGjB,WAAW,CAACM,YAAY,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;UACzE,IAAMY,MAAM,GAAGlB,WAAW,CAACM,YAAY,IAAIrH,eAAe,CAAC+G,WAAW,EAAE9G,QAAQ,EAAEhC,MAAK,CAAC,KAAK,MAAM,GAAG+J,cAAc,GAAGjB,WAAW,CAACM,YAAY;UAC/I,IAAI,CAACY,MAAM,EAAE;YACXb,cAAa,GAAGtI,QAAQ,CAACiI,WAAW,EAAE,CAACA,WAAW,CAAClG,aAAa,EAAEZ,QAAQ,CAAC,CAAC;UAC9E,CAAC,MAAM;YACL,IAAMiI,QAAQ,GAAGpK,SAAS,KAAK,GAAG,GAAGW,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,MAAK,EAAC,GAAGQ,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,MAAK,EAAC;YAC5E,IAAMkK,QAAQ,GAAGrK,SAAS,KAAK,GAAG,GAAGW,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,MAAK,EAAC,GAAGQ,IAAI,CAACI,GAAG,CAAAF,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQX,MAAK,EAAC;YAC5E,IAAMS,GAAG,GAAGuJ,MAAM,KAAK,KAAK,GAAGE,QAAQ,GAAGlI,QAAQ;YAClD,IAAMpB,GAAG,GAAGoJ,MAAM,KAAK,KAAK,GAAGC,QAAQ,GAAGjI,QAAQ;YAClDmH,cAAa,GAAGtI,QAAQ,CAACiI,WAAW,EAAE,CAACrI,GAAG,EAAEG,GAAG,CAAC,CAAC;UACnD;UACA,IAAMiJ,aAAY,GAAG;YACnBtI,WAAW,EAAE4H,cAAa;YAC1BvG,aAAa,EAAEkG,WAAW,CAAClG,aAAa;YACxC2G,WAAW,EAAXA,WAAW;YACXH,YAAY,EAAEY,MAAM;YACpBhB,SAAS,EAATA,SAAS;YACTxD,aAAa,EAAE;cACbG,KAAK,EAAE,IAAI;cACXF,SAAS,EAAE2D,YAAY,KAAK,KAAK;cACjC1D,SAAS,EAAE0D,YAAY,KAAK;YAC9B;UACF,CAAC;UACD,IAAItK,OAAO,CAACgL,UAAU,CAACJ,mBAAmB,CAAC,EAAE;YAC3CA,mBAAmB,CAACP,cAAa,EAAExK,SAAS,CAAC,CAAC,CAAC,EAAEkL,aAAY,EAAEf,WAAW,CAAC,CAAC;UAC9E;UACA,OAAO,CAAC;YACNO,QAAQ,EAAE,SAAAA,SAAA;cAAA,OAAMQ,aAAY;YAAA;UAC9B,CAAC,CAAC;QACJ;QACA,OAAO,EAAE;MACX,CAAC;MACDM,SAAS,EAAE,SAAAA,UAACtB,GAAG,EAAEC,WAAW,EAAK;QAC/B,IACEY,mBAAmB,GAIjBZ,WAAW,CAJbY,mBAAmB;UACnBnI,WAAW,GAGTuH,WAAW,CAHbvH,WAAW;UACXgH,WAAW,GAETO,WAAW,CAFbP,WAAW;UACX/C,aAAa,GACXsD,WAAW,CADbtD,aAAa;QAEf;QACA,IAAMqE,YAAY,GAAG;UACnBL,SAAS,EAAE,KAAK;UAChBD,WAAW,EAAE,KAAK;UAClBH,YAAY,EAAE,IAAI;UAClBxG,aAAa,EAAE,IAAI;UACnBrB,WAAW,EAAXA,WAAW;UACXiE,aAAa,EAAbA;QACF,CAAC;QACD,IAAI+C,WAAW,IAAIzJ,OAAO,CAACgL,UAAU,CAACJ,mBAAmB,CAAC,EAAE;UAC1DA,mBAAmB,CAACnI,WAAW,EAAE5C,SAAS,CAAC,CAAC,CAAC,EAAEkL,YAAY,EAAEf,WAAW,CAAC,CAAC;QAC5E;QACA,OAAO,CAAC;UACNO,QAAQ,EAAE,SAAAA,SAAA;YAAA,OAAMQ,YAAY;UAAA;QAC9B,CAAC,CAAC;MACJ,CAAC;MACDO,YAAY,EAAE,SAAAA,aAACvB,GAAG,EAAEC,WAAW,EAAK;QAClC,IACEvH,WAAW,GACTuH,WAAW,CADbvH,WAAW;QAEb,OAAO,CAAC;UACN8H,QAAQ,EAAE,SAAAA,SAAA;YAAA,OAAO;cACfG,SAAS,EAAE,KAAK;cAChBD,WAAW,EAAE,KAAK;cAClBH,YAAY,EAAE,IAAI;cAClBxG,aAAa,EAAE,IAAI;cACnBrB,WAAW,EAAXA,WAAW;cACXiE,aAAa,EAAE,CAAC;YAClB,CAAC;UAAA;QACH,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}