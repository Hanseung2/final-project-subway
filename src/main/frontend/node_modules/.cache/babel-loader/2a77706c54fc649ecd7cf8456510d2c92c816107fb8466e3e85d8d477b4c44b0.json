{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC190\\uD55C\\uC2B9\\\\Desktop\\\\project-subway\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\Nav.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nimport { useTime } from '../data/TimeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let ctime = 0;\nexport let navPath = [];\nconst Nav = () => {\n  _s();\n  const startStation = useSelector(state => state.startStation);\n  const endStation = useSelector(state => state.endStation);\n  const [loading, setLoading] = useState(false); // 로딩 상태 변수\n  const navigate = useNavigate(); // useHistory 훅 사용\n  const {\n    hour,\n    minute,\n    weekday\n  } = useTime();\n  let ingtime = [0];\n  const [showGuide, setShowGuide] = useState(false);\n  const handleButtonClicke = () => {\n    setShowGuide(!showGuide);\n  };\n  const [results, setResults] = useState([{\n    \"path\": [\"장한평\", \"군자(능동)\"],\n    \"finalTime\": \"12:31:55\",\n    \"eachTransferStation\": [],\n    \"startLine\": \"5호선\",\n    \"eachTime\": [],\n    \"eachWalkingTime\": [],\n    \"eachTypeOfLine\": [],\n    \"eachWaitingTime\": [],\n    \"totalTime\": 100\n  }, {\n    \"path\": [\"장한평\", \"답십리\", \"마장\", \"왕십리(성동구청)\", \"한양대\", \"뚝섬\", \"성수\", \"건대입구\", \"어린이대공원(세종대)\", \"군자(능동)\"],\n    \"finalTime\": \"13:05:40\",\n    \"eachTransferStation\": [\"왕십리(성동구청)\", \"건대입구\", \"수락산\"],\n    \"startLine\": \"5호선\",\n    \"eachTime\": [260, 330, 400],\n    \"eachWalkingTime\": [180, 240, 400],\n    \"eachTypeOfLine\": [\"2호선\", \"7호선\", \"2호선\"],\n    \"eachWaitingTime\": [265, 90, 400],\n    \"totalTime\": 3325\n  }, {\n    \"path\": [\"장한평\", \"답십리\", \"마장\", \"왕십리(성동구청)\", \"행당\", \"신금호\", \"청구\", \"신당\", \"동묘앞\", \"창신\", \"보문\", \"안암(고대병원앞)\", \"고려대(종암)\", \"월곡(동덕여대)\", \"상월곡(한국과학기술연구원)\", \"돌곶이\", \"석계\", \"태릉입구\", \"먹골\", \"중화\", \"상봉(시외버스터미널)\", \"면목\", \"사가정\", \"용마산\", \"중곡\", \"군자(능동)\"],\n    \"finalTime\": \"13:25:50\",\n    \"eachTransferStation\": [\"청구\", \"태릉입구\"],\n    \"startLine\": \"5호선\",\n    \"eachTime\": [500, 810],\n    \"eachWalkingTime\": [120, 120],\n    \"eachTypeOfLine\": [\"6호선\", \"7호선\"],\n    \"eachWaitingTime\": [465, 90],\n    \"totalTime\": 3335\n  }]);\n  useEffect(() => {\n    const fetchDataFromSpring = async () => {\n      try {\n        const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}&time=${encodeURIComponent(ctime)}&day=${weekday}`;\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        setResults(data);\n      } catch (error) {\n        console.error('데이터 가져오기 실패:', error);\n      }\n    };\n    if (startStation && endStation) {\n      fetchDataFromSpring();\n    }\n  }, [startStation, endStation]);\n  const hourNum = parseInt(hour, 10);\n  const minuteNum = parseInt(minute, 10);\n  ctime = hourNum * 3600 + minuteNum * 60;\n  console.log(ctime);\n  const handleButtonClick = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      navigate('/Pre', {\n        state: {\n          results: results\n        }\n      });\n    }, 1000);\n  };\n  const renderResults = () => {\n    return results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultsMap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"resultsHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: '#fff5b1'\n          },\n          children: [\"Result \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uCD9C\\uBC1C \\uC2DC\\uAC04 : \", Math.floor(ctime / (60 * 60)), \"\\uC2DC \", Math.floor(ctime % (60 * 60) / 60), \"\\uBD84 \", Math.floor(ctime % 60), \"\\uCD08 (\", weekday, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"scheduleTime\",\n        children: [\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(\\uC2DC\\uAC04\\uD45C) : \", Math.floor((ctime + result.totalTime) / (60 * 60)), \"\\uC2DC \", Math.floor((ctime + result.totalTime) % (60 * 60) / 60), \"\\uBD84 \", Math.floor((ctime + result.totalTime) % 60), \"\\uCD08\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 16\n      }, this), result.path && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"resultItem\",\n          children: [\"\\uACBD\\uB85C: \", result.path.map((place, index) => {\n            // eachTransferStation 배열에 포함된 역인지 확인\n            if (result.eachTransferStation && result.eachTransferStation.includes(place)) {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: place\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 40\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: place\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 40\n              }, this);\n            }\n          }).reduce((prev, curr) => [prev, ' -> ', curr])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualRepresentation\",\n        style: {\n          width: '1250px',\n          height: '30px',\n          backgroundColor: 'lightgray',\n          margin: '20px 0'\n        },\n        children: renderTransferBars(result)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), result.path && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"resultItem\",\n          children: [\"\\uAC78\\uB9AC\\uB294\\uC2DC\\uAC04 : \", Math.floor(result.totalTime / 60), \"\\uBD84 \", Math.floor(result.totalTime % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), result.eachTypeOfLine.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"resultItem\",\n          children: [index + 1, \"\\uBC88\\uC9F8 \\uD658\\uC2B9\\uC5ED : \", line, \"(\", result.eachTransferStation[index], \") - \", Math.floor((ctime + ingtime[index]) / (60 * 60)), \"\\uC2DC \", Math.floor((ctime + ingtime[index]) % (60 * 60) / 60), \"\\uBD84 \", Math.floor((ctime + ingtime[index]) % 60), \"\\uCD08 \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this));\n  };\n  const makepath = results => {\n    let allPaths = [];\n    results.forEach(result => {\n      allPaths.push(result.path);\n    });\n    return allPaths;\n  };\n  const allPaths = makepath(results);\n  navPath = allPaths;\n  console.log(allPaths); // 콘솔에 모든 경로 출력\n\n  const renderTransferBars = result => {\n    const transferBars = [];\n    const iconSize = 20; // 이미지 크기\n    let i = 0;\n\n    // 환승역이 없는 경우 처리\n    if (result.eachTransferStation.length === 0) {\n      // 출발지에서 도착지까지 바로 이동하는 경우\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: '100%',\n          height: '30px',\n          backgroundColor: getLineColor(result.startLine),\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: train,\n          alt: \"subway\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(result.startLine)\n          },\n          children: [startStation, \"(\", result.startLine, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(result.startLine)\n          },\n          children: [Math.floor(result.totalTime / 60), \"\\uBD84 \", Math.floor(result.totalTime % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, `go${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this));\n      return transferBars;\n    }\n\n    // 각 막대의 비율 계산\n    const totalBarWidth = result.totalTime;\n    let accumulatedWidth = 0;\n    let tt = 0; // tt 변수 초기화\n\n    result.eachTypeOfLine.forEach((line, index) => {\n      const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n      const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n      const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n      ingtime[index] = 0;\n\n      // 각 막대의 총합이 1250이 되도록 비율 조정\n      const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n      const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n      const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n      const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${goBarWidth}px`,\n          height: '30px',\n          backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]),\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: train,\n          alt: \"subway\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedGoBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])\n          },\n          children: [Math.floor(result.eachTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachTime[index] % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])\n          },\n          children: [index === 0 ? startStation : result.eachTransferStation[index - 1], \"(\", index === 0 ? result.startLine : result.eachTypeOfLine[index - 1], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, `go${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this));\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${transferBarWidth}px`,\n          height: '30px',\n          backgroundColor: 'lightgray',\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: walk,\n          alt: \"walk\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedTransferBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: '#000'\n          },\n          children: [Math.floor(result.eachWalkingTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachWalkingTime[index] % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, `transfer${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this));\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${waitingBarWidth}px`,\n          height: '30px',\n          backgroundColor: 'red',\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: wait,\n          alt: \"wait\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedWaitingBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: '#000'\n          },\n          children: [Math.floor(result.eachWaitingTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachWaitingTime[index] % 60), \"\\uCD08 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, `wait${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this));\n      result.eachTime.forEach((_, index) => {\n        if (index === 0) {\n          ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n        } else {\n          ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n        }\n      });\n      accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n      tt = tt + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n    });\n\n    // 마지막 열차 막대 추가\n    const lastIndex = result.eachTypeOfLine.length - 1;\n    const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt : result.totalTime) / totalBarWidth * 1250;\n    const lastTotalWidth = lastGoBarWidth;\n    const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n    transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        width: `${lastGoBarWidth}px`,\n        height: '30px',\n        backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]),\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        overflow: 'visible'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: train,\n        alt: \"subway\",\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          maxWidth: `50px`,\n          maxHeight: '100%',\n          width: 'auto',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          left: '50%',\n          bottom: '-20px',\n          transform: 'translate(-50%, 0)',\n          color: getLineColor(result.eachTypeOfLine[lastIndex])\n        },\n        children: [Math.floor((result.totalTime - tt) / 60), \"\\uBD84 \", Math.floor(result.eachTime[lastIndex] % 60), \"\\uCD08\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '-20px',\n          transform: 'translate(-50%, 0)',\n          color: getLineColor(result.eachTypeOfLine[lastIndex])\n        },\n        children: [result.eachTransferStation[result.eachTransferStation.length - 1], \"(\", result.eachTypeOfLine[result.eachTypeOfLine.length - 1], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, `go${lastIndex}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this));\n    return transferBars;\n  };\n  const getLineColor = line => {\n    const lineColors = {\n      '1호선': '#0d3692',\n      '2호선': '#33a23d',\n      '3호선': '#fe5d10',\n      '4호선': '#00a2d1',\n      '5호선': '#8b50a4',\n      '6호선': '#c55c1d',\n      '7호선': '#54640d',\n      '8호선': '#f14c82'\n    };\n    return lineColors[line] || '#000'; // 기본 색상은 검정색\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    title: \"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",\n    description: \"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"resultsHeader\",\n        children: [\"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0 \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pre-but\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uB85C\\uB529 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleButtonClick,\n            style: {\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: 'pointer'\n            },\n            children: \"AI Predict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC124\\uC815\\uB41C \\uC2DC\\uAC04: \", hour, \"\\uC2DC \", minute, \"\\uBD84 (\", weekday, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }, this), startStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: [\"\\uCD9C\\uBC1C\\uC9C0: \", startStation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 34\n      }, this), endStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: [\"\\uB3C4\\uCC29\\uC9C0: \", endStation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 32\n      }, this), !startStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: \"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 35\n      }, this), !endStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: \"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClicke,\n        style: {\n          backgroundColor: '#dcdbdb',\n          color: 'white',\n          border: 'none',\n          borderRadius: '20px',\n          cursor: 'pointer',\n          width: '80px',\n          // 너비 설정\n          height: '40px',\n          // 높이 설정\n          fontSize: '16px',\n          // 폰트 크기 설정\n          margin: '10px' // 외부 여백 설정 (선택 사항)\n        },\n        children: \"Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), showGuide && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50px',\n          // 버튼 위로 이동\n          left: '0',\n          backgroundColor: 'white',\n          border: '1px solid #ccc',\n          borderRadius: '5px',\n          padding: '10px',\n          width: '200px',\n          boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC774\\uAC83\\uC740 \\uC124\\uBA85 \\uCC3D\\uC785\\uB2C8\\uB2E4. \\uBC84\\uD2BC \\uC704\\uC5D0 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleButtonClicke,\n          style: {\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            width: '100%',\n            padding: '5px 0',\n            fontSize: '14px',\n            marginTop: '10px'\n          },\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }, this), renderResults()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 9\n  }, this);\n};\n_s(Nav, \"Ti+N77qygO1shUB/RZ/xMld5Xd0=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useTime];\n});\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","Link","useNavigate","useTime","jsxDEV","_jsxDEV","Fragment","_Fragment","ctime","navPath","Nav","_s","startStation","state","endStation","loading","setLoading","navigate","hour","minute","weekday","ingtime","showGuide","setShowGuide","handleButtonClicke","results","setResults","fetchDataFromSpring","url","encodeURIComponent","response","fetch","method","headers","data","json","error","console","hourNum","parseInt","minuteNum","log","handleButtonClick","setTimeout","renderResults","map","result","index","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","totalTime","path","place","eachTransferStation","includes","color","reduce","prev","curr","width","height","margin","renderTransferBars","eachTypeOfLine","line","makepath","allPaths","forEach","push","transferBars","iconSize","i","length","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","bottom","totalBarWidth","accumulatedWidth","tt","goBarWidth","eachTime","transferBarWidth","eachWalkingTime","waitingBarWidth","eachWaitingTime","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","_","lastIndex","lastGoBarWidth","lastTotalWidth","lastAdjustedGoBarWidth","lineColors","title","description","onClick","border","borderRadius","cursor","fontSize","padding","boxShadow","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Nav.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nimport { useTime } from '../data/TimeContext';\n\nexport let ctime = 0;\nexport let navPath = [];\n\nconst Nav = () => {\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n    const [loading, setLoading] = useState(false); // 로딩 상태 변수\n    const navigate  = useNavigate(); // useHistory 훅 사용\n    const { hour, minute, weekday } = useTime();\n    let ingtime=[0];\n    const [showGuide, setShowGuide] = useState(false);\n\n    const handleButtonClicke = () => {\n        setShowGuide(!showGuide);\n    };\n\n    const [results, setResults] = useState([\n        {\n            \"path\": [\n                \"장한평\",\n                \"군자(능동)\"\n            ],\n            \"finalTime\": \"12:31:55\",\n            \"eachTransferStation\": [],\n            \"startLine\": \"5호선\",\n            \"eachTime\": [],\n            \"eachWalkingTime\": [],\n            \"eachTypeOfLine\": [],\n            \"eachWaitingTime\": [],\n            \"totalTime\": 100\n        },\n        {\n            \"path\": [\n                \"장한평\",\n                \"답십리\",\n                \"마장\",\n                \"왕십리(성동구청)\",\n                \"한양대\",\n                \"뚝섬\",\n                \"성수\",\n                \"건대입구\",\n                \"어린이대공원(세종대)\",\n                \"군자(능동)\"\n            ],\n            \"finalTime\": \"13:05:40\",\n            \"eachTransferStation\": [\n                \"왕십리(성동구청)\",\n                \"건대입구\",\n                \"수락산\"\n            ],\n            \"startLine\": \"5호선\",\n            \"eachTime\": [\n                260,\n                330,\n                400\n            ],\n            \"eachWalkingTime\": [\n                180,\n                240,\n                400\n            ],\n            \"eachTypeOfLine\": [\n                \"2호선\",\n                \"7호선\",\n                \"2호선\"\n\n            ],\n            \"eachWaitingTime\": [\n                265,\n                90,\n                400\n            ],\n            \"totalTime\": 3325\n        },\n        {\n            \"path\": [\n                \"장한평\",\n                \"답십리\",\n                \"마장\",\n                \"왕십리(성동구청)\",\n                \"행당\",\n                \"신금호\",\n                \"청구\",\n                \"신당\",\n                \"동묘앞\",\n                \"창신\",\n                \"보문\",\n                \"안암(고대병원앞)\",\n                \"고려대(종암)\",\n                \"월곡(동덕여대)\",\n                \"상월곡(한국과학기술연구원)\",\n                \"돌곶이\",\n                \"석계\",\n                \"태릉입구\",\n                \"먹골\",\n                \"중화\",\n                \"상봉(시외버스터미널)\",\n                \"면목\",\n                \"사가정\",\n                \"용마산\",\n                \"중곡\",\n                \"군자(능동)\"\n            ],\n            \"finalTime\": \"13:25:50\",\n            \"eachTransferStation\": [\n                \"청구\",\n                \"태릉입구\"\n            ],\n            \"startLine\": \"5호선\",\n            \"eachTime\": [\n                500,\n                810\n            ],\n            \"eachWalkingTime\": [\n                120,\n                120\n            ],\n            \"eachTypeOfLine\": [\n                \"6호선\",\n                \"7호선\"\n            ],\n            \"eachWaitingTime\": [\n                465,\n                90\n            ],\n            \"totalTime\": 3335\n        }\n    ]);\n\n\n\n    useEffect(() => {\n        const fetchDataFromSpring = async () => {\n            try {\n                const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}&time=${encodeURIComponent(ctime)}&day=${weekday}`;\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                });\n                const data = await response.json();\n                setResults(data);\n            } catch (error) {\n                console.error('데이터 가져오기 실패:', error);\n            }\n        };\n        if (startStation && endStation) {\n            fetchDataFromSpring();\n        }\n    }, [startStation, endStation]);\n\n\n    const hourNum = parseInt(hour, 10);\n    const minuteNum = parseInt(minute, 10);\n    ctime = hourNum * 3600 + minuteNum * 60;\n    console.log(ctime);\n\n\n    const handleButtonClick = () => {\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            navigate('/Pre',{state:{results:results}});\n        }, 1000);\n    };\n\n\n\n\n\n    const renderResults = () => {\n        return results.map((result, index) => (\n            <div key={index} className=\"resultsMap\">\n                <h1 className=\"resultsHeader\"><span style={{ backgroundColor: '#fff5b1' }}>Result {index + 1}</span>\n                </h1>\n                <h3>출발 시간 : {Math.floor((ctime) / (60*60))}시 {Math.floor((ctime) % (60*60)/60)}분 {Math.floor((ctime)% 60)}초 ({weekday})</h3>\n                <p className=\"scheduleTime\">도착 시간(시간표) : {Math.floor((ctime+result.totalTime) / (60*60))}시 {Math.floor((ctime+result.totalTime) % (60*60)/60)}분 {Math.floor((ctime+result.totalTime)% 60)}초</p>\n\n               <br/>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">경로: {result.path.map((place, index) => {\n                            // eachTransferStation 배열에 포함된 역인지 확인\n                            if (result.eachTransferStation && result.eachTransferStation.includes(place)) {\n                                return <span key={index} style={{ color: 'red' }}>{place}</span>;\n                            } else {\n                                return <span key={index}>{place}</span>;\n                            }\n                        }).reduce((prev, curr) => [prev, ' -> ', curr])}</p>\n                    </>\n                )}\n\n                <div className=\"visualRepresentation\" style={{ width: '1250px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\n                    {renderTransferBars(result)}\n                </div>\n                <br/>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">걸리는시간 : {Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</p>\n                        {result.eachTypeOfLine.map((line, index) => (\n                            <p key={index} className=\"resultItem\">{index + 1}번째 환승역 : {line}({result.eachTransferStation[index]}) - {Math.floor((ctime+ingtime[index]) / (60*60))}시 {Math.floor((ctime+ingtime[index]) % (60*60)/60)}분 {Math.floor((ctime+ingtime[index])% 60)}초 열차 탑승</p>\n                        ))}\n                    </>\n                )}\n            </div>\n        ));\n    };\n\n\n    const makepath = (results) => {\n        let allPaths = [];\n        results.forEach(result => {\n            allPaths.push(result.path);\n        });\n        return allPaths;\n    };\n\n    const allPaths = makepath(results);\n    navPath = allPaths;\n    console.log(allPaths); // 콘솔에 모든 경로 출력\n\n    const renderTransferBars = (result) => {\n        const transferBars = [];\n        const iconSize = 20; // 이미지 크기\n        let i = 0;\n\n        // 환승역이 없는 경우 처리\n        if (result.eachTransferStation.length === 0) {\n            // 출발지에서 도착지까지 바로 이동하는 경우\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{startStation}({result.startLine})</span>\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</span>\n                </div>\n            );\n            return transferBars;\n        }\n\n        // 각 막대의 비율 계산\n        const totalBarWidth = result.totalTime;\n        let accumulatedWidth = 0;\n        let tt = 0; // tt 변수 초기화\n\n\n        result.eachTypeOfLine.forEach((line, index) => {\n            const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n            const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n            const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n            ingtime[index]=0;\n\n            // 각 막대의 총합이 1250이 되도록 비율 조정\n            const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n            const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n            const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n            const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n\n\n            transferBars.push(\n                <div key={`go${index}`} style={{ display: 'inline-block', width: `${goBarWidth}px`, height: '30px', backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{Math.floor(result.eachTime[index] / 60)}분 {Math.floor(result.eachTime[index] % 60)}초</span>\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{(index === 0 ? startStation : result.eachTransferStation[index - 1])}({(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])})</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`transfer${index}`} style={{ display: 'inline-block', width: `${transferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedTransferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[index] / 60)}분 {Math.floor(result.eachWalkingTime[index] % 60)}초</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`wait${index}`} style={{ display: 'inline-block', width: `${waitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedWaitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[index] / 60)}분 {Math.floor(result.eachWaitingTime[index] % 60)}초 </span>\n                </div>\n            );\n            result.eachTime.forEach((_, index) => {\n                if (index === 0) {\n                    ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                } else {\n                    ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                }\n            });\n\n            accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n            tt = tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];\n        });\n\n        // 마지막 열차 막대 추가\n        const lastIndex = result.eachTypeOfLine.length - 1;\n        const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt: result.totalTime) / totalBarWidth * 1250;\n        const lastTotalWidth = lastGoBarWidth;\n\n        const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n        transferBars.push(\n            <div key={`go${lastIndex}`} style={{ display: 'inline-block', width: `${lastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `50px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{Math.floor((result.totalTime - tt)/ 60)}분 {Math.floor(result.eachTime[lastIndex] % 60)}초</span>\n                <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{result.eachTransferStation[result.eachTransferStation.length - 1]}({result.eachTypeOfLine[result.eachTypeOfLine.length - 1]})</span>\n            </div>\n        );\n        return transferBars;\n    };\n    const getLineColor = (line) => {\n        const lineColors = {\n            '1호선': '#0d3692',\n            '2호선': '#33a23d',\n            '3호선': '#fe5d10',\n            '4호선': '#00a2d1',\n            '5호선': '#8b50a4',\n            '6호선': '#c55c1d',\n            '7호선': '#54640d',\n            '8호선': '#f14c82',\n        };\n        return lineColors[line] || '#000'; // 기본 색상은 검정색\n    };\n\n\n\n\n    return (\n        <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\n\n            <div className=\"resultsContainer\">\n                <h1 className=\"resultsHeader\">출발지/도착지 <p className=\"pre-but\">\n                    {loading ? (\n                        <div>로딩 중...</div>\n                    ) : (\n                        <button onClick={handleButtonClick} style={{\n                            backgroundColor: '#4CAF50',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '8px',\n                            cursor: 'pointer'\n                        }}>AI Predict</button>\n                    )}\n                </p></h1>\n                <p>설정된 시간: {hour}시 {minute}분 ({weekday})</p>\n                {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\n                {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\n                {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\n                {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\n            </div>\n\n            <div style={{position: 'relative', display: 'inline-block'}}>\n                <button\n                    onClick={handleButtonClicke}\n                    style={{\n                        backgroundColor: '#dcdbdb',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '20px',\n                        cursor: 'pointer',\n                        width: '80px',       // 너비 설정\n                        height: '40px',       // 높이 설정\n                        fontSize: '16px',     // 폰트 크기 설정\n                        margin: '10px'        // 외부 여백 설정 (선택 사항)\n                    }}\n                >\n                    Guide\n                </button>\n                {showGuide && (\n                    <div style={{\n                        position: 'absolute',\n                        top: '50px', // 버튼 위로 이동\n                        left: '0',\n                        backgroundColor: 'white',\n                        border: '1px solid #ccc',\n                        borderRadius: '5px',\n                        padding: '10px',\n                        width: '200px',\n                        boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n                    }}>\n                        <p>이것은 설명 창입니다. 버튼 위에 표시됩니다.</p>\n                        <button onClick={handleButtonClicke} style={{\n                            backgroundColor: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '5px',\n                            cursor: 'pointer',\n                            width: '100%',\n                            padding: '5px 0',\n                            fontSize: '14px',\n                            marginTop: '10px'\n                        }}>\n                            닫기\n                        </button>\n                    </div>\n                )}\n            </div>\n            {renderResults()}\n        </Main>\n    );\n};\n\nexport default Nav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}