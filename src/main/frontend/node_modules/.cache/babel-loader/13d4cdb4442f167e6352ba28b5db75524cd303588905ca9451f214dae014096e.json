{"ast":null,"code":"import React from \"react\";\nimport { getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\nvar evaluateProps = function evaluateProps(props) {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  var style = getStyle(props.style, props);\n  var barWidth = getBarWidth(props.barWidth, Object.assign({}, props, {\n    style: style\n  }));\n  var cornerRadius = getCornerRadius(props.cornerRadius, Object.assign({}, props, {\n    style: style,\n    barWidth: barWidth\n  }));\n  var modifiedProps = Object.assign({}, props, {\n    style: style,\n    barWidth: barWidth,\n    cornerRadius: cornerRadius\n  });\n  return modifiedProps;\n};\nvar usePreviousValue = function usePreviousValue(value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport var CanvasBar = function CanvasBar(props) {\n  var _useCanvasContext = useCanvasContext(),\n    canvasRef = _useCanvasContext.canvasRef;\n  var modifiedProps = evaluateProps(props);\n  var polar = modifiedProps.polar,\n    style = modifiedProps.style,\n    barWidth = modifiedProps.barWidth,\n    cornerRadius = modifiedProps.cornerRadius,\n    origin = modifiedProps.origin;\n  var path2d = React.useMemo(function () {\n    var p = polar ? getPolarBarPath(modifiedProps, cornerRadius) : getBarPath(modifiedProps, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, modifiedProps]);\n  var previousPath = usePreviousValue(path2d);\n  var draw = React.useCallback(function (ctx, path) {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n    if (polar) {\n      ctx.translate((origin === null || origin === void 0 ? void 0 : origin.x) || 0, (origin === null || origin === void 0 ? void 0 : origin.y) || 0);\n    }\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]);\n\n  // This will clear the previous bar without clearing the entire canvas\n  var clearPreviousPath = React.useCallback(function (ctx) {\n    if (previousPath) {\n      ctx.save();\n      // This ensures that the entire shape is erased\n      var strokeWidth = style.strokeWidth || 0;\n      ctx.lineWidth = strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(function () {\n    var _canvasRef$current;\n    var ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext(\"2d\");\n    if (!ctx) return;\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, modifiedProps, path2d, clearPreviousPath]);\n  return null;\n};","map":{"version":3,"names":["React","getBarPath","getBarWidth","getCornerRadius","getPolarBarPath","getStyle","useCanvasContext","evaluateProps","props","style","barWidth","Object","assign","cornerRadius","modifiedProps","usePreviousValue","value","ref","useRef","useEffect","current","CanvasBar","_useCanvasContext","canvasRef","polar","origin","path2d","useMemo","p","Path2D","previousPath","draw","useCallback","ctx","path","fillStyle","fill","strokeStyle","stroke","globalAlpha","fillOpacity","lineWidth","strokeWidth","translate","x","y","setTransform","clearPreviousPath","save","globalCompositeOperation","restore","_canvasRef$current","getContext"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/node_modules/victory-canvas/es/canvas-bar.js"],"sourcesContent":["import React from \"react\";\nimport { getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\nconst evaluateProps = props => {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  const style = getStyle(props.style, props);\n  const barWidth = getBarWidth(props.barWidth, Object.assign({}, props, {\n    style\n  }));\n  const cornerRadius = getCornerRadius(props.cornerRadius, Object.assign({}, props, {\n    style,\n    barWidth\n  }));\n  const modifiedProps = Object.assign({}, props, {\n    style,\n    barWidth,\n    cornerRadius\n  });\n  return modifiedProps;\n};\nconst usePreviousValue = value => {\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport const CanvasBar = props => {\n  const {\n    canvasRef\n  } = useCanvasContext();\n  const modifiedProps = evaluateProps(props);\n  const {\n    polar,\n    style,\n    barWidth,\n    cornerRadius,\n    origin\n  } = modifiedProps;\n  const path2d = React.useMemo(() => {\n    const p = polar ? getPolarBarPath(modifiedProps, cornerRadius) : getBarPath(modifiedProps, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, modifiedProps]);\n  const previousPath = usePreviousValue(path2d);\n  const draw = React.useCallback((ctx, path) => {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n    if (polar) {\n      ctx.translate(origin?.x || 0, origin?.y || 0);\n    }\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]);\n\n  // This will clear the previous bar without clearing the entire canvas\n  const clearPreviousPath = React.useCallback(ctx => {\n    if (previousPath) {\n      ctx.save();\n      // This ensures that the entire shape is erased\n      const strokeWidth = style.strokeWidth || 0;\n      ctx.lineWidth = strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(() => {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (!ctx) return;\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, modifiedProps, path2d, clearPreviousPath]);\n  return null;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}