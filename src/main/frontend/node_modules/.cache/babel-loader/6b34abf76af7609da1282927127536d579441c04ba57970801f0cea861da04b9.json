{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC190\\uD55C\\uC2B9\\\\Desktop\\\\project-subway\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Main from '../components/section/Main';\nimport subwayData from '../data/map.json';\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\nimport { IoSearch, IoLocationOutline } from \"react-icons/io5\";\nimport { setStartStation, setEndStation } from '../data/actions';\nimport Right from '../components/section/Right';\nimport { MdMyLocation } from \"react-icons/md\";\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\n\n// Import subway line images...\nimport line1 from '../assets/img/subwaymapmarker/1호선마커.png';\nimport line2 from '../assets/img/subwaymapmarker/2호선마커.png';\nimport line3 from '../assets/img/subwaymapmarker/3호선마커.png';\nimport line4 from '../assets/img/subwaymapmarker/4호선마커.png';\nimport line5 from '../assets/img/subwaymapmarker/5호선마커.png';\nimport line6 from '../assets/img/subwaymapmarker/6호선마커.png';\nimport line7 from '../assets/img/subwaymapmarker/7호선마커.png';\nimport line8 from '../assets/img/subwaymapmarker/8호선마커.png';\nimport line9 from '../assets/img/subwaymapmarker/9호선마커.png';\nimport line10 from '../assets/img/subwaymapmarker/수인분당선마커.png';\nimport line11 from '../assets/img/subwaymapmarker/경의중앙선마커.png';\nimport line12 from '../assets/img/subwaymapmarker/경춘선마커.png';\nimport line13 from '../assets/img/subwaymapmarker/공항철도1호선마커.png';\nimport line14 from '../assets/img/subwaymapmarker/신림선마커.png';\nimport line15 from '../assets/img/subwaymapmarker/우이신설선마커.png';\nimport line16 from '../assets/img/subwaymapmarker/김포골드라인마커.png';\nimport loc from '../assets/img/subwaymapmarker/현위치.png';\nimport { Background } from 'victory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineImages = {\n  \"1호선\": line1,\n  \"2호선\": line2,\n  \"3호선\": line3,\n  \"4호선\": line4,\n  \"5호선\": line5,\n  \"6호선\": line6,\n  \"7호선\": line7,\n  \"8호선\": line8,\n  \"9호선\": line9,\n  \"수인분당선\": line10,\n  \"경의중앙선\": line11,\n  \"경춘선\": line12,\n  \"공항철도1호선\": line13,\n  \"신림선\": line14,\n  \"우이신설선\": line15,\n  \"김포골드라인\": line16\n};\nconst Map = () => {\n  _s();\n  const [isRightVisible, setIsRightVisible] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [map, setMap] = useState(null);\n  const [userMarker, setUserMarker] = useState(null); // 사용자 마커 상태 추가\n  const [stationName, setStationName] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [suggestions, setSuggestions] = useState([]); // Define suggestions state\n  const startStation = useSelector(state => state.startStation);\n  const endStation = useSelector(state => state.endStation);\n\n  // 제안 항목 클릭 처리 함수\n  const handleSuggestionItemClick = suggestion => {\n    // '-' 포함 여부 확인하고 이후 문자열 제거\n    const sanitizedSuggestion = suggestion.includes('-') ? suggestion.split('-')[0].trim() : suggestion;\n    setSearchTerm(sanitizedSuggestion); // 정제된 제안을 검색어로 설정\n    setSuggestions([]); // 제안 목록 초기화\n  };\n\n  // Function to handle search term change\n  const handleSearchTermChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value); // Update search term state\n\n    // Filter subway stations based on the search term\n    const filteredStations = subwayData.filter(station => station.name.includes(value)).slice(0, 3); // Slice the array to get only the first 3 elements\n    setSuggestions(filteredStations.map(station => `${station.name} - ${station.line}`));\n  };\n  const toggleRightVisibility = (name = null) => {\n    setIsRightVisible(!isRightVisible);\n    setStationName(name);\n  };\n  useEffect(() => {\n    window.setStation = (stationName, type) => {\n      if (type === 'start') {\n        dispatch(setStartStation(stationName));\n      } else if (type === 'end') {\n        dispatch(setEndStation(stationName));\n      }\n    };\n    const script = document.createElement('script');\n    script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=a576239cea9ab4b2daf2a00e251e97e9&autoload=false\";\n    script.async = true;\n    document.head.appendChild(script);\n    script.onload = () => {\n      window.kakao.maps.load(() => {\n        const mapContainer = document.getElementById('map');\n        const mapOption = {\n          center: new window.kakao.maps.LatLng(37.5503, 127.0731),\n          level: 5\n        };\n        const map = new window.kakao.maps.Map(mapContainer, mapOption);\n        setMap(map);\n        if ('geolocation' in navigator) {\n          navigator.geolocation.getCurrentPosition(position => {\n            const userPosition = new window.kakao.maps.LatLng(position.coords.latitude, position.coords.longitude);\n            map.setCenter(userPosition);\n          });\n        } else {\n          console.log('Geolocation is not supported.');\n        }\n        subwayData.forEach((station, index) => {\n          const markerPosition = new window.kakao.maps.LatLng(station.y, station.x);\n          const markerImageSrc = lineImages[station.line];\n          const markerImageSize = new window.kakao.maps.Size(24, 30);\n          const markerImageOption = {\n            offset: new window.kakao.maps.Point(12, 35)\n          };\n          const markerImage = new window.kakao.maps.MarkerImage(markerImageSrc, markerImageSize, markerImageOption);\n          const marker = new window.kakao.maps.Marker({\n            position: markerPosition,\n            map: map,\n            image: markerImage\n          });\n          const content = `\n                        <div class=\"wrap\" id=\"overlay-${index}\">\n                            <div class=\"info\">\n                                <div class=\"title\">\n                                    ${station.name}\n                                    <div class=\"close\" onclick=\"document.getElementById('overlay-${index}').style.display='none'\" title=\"닫기\"></div>\n                                </div>\n                                <div class=\"body\">\n                                    <div class=\"desc\">\n                                        <div class=\"ellipsis\">${station.line} ${station.name}</div>\n                                        <div>\n                                            <button onclick=\"setStation('${station.name}', 'start')\">출발</button>\n                                            <button onclick=\"setStation('${station.name}', 'end')\">도착</button>\n                                            <button onclick=\"window.goToLivePage('${station.name}')\">실시간 도착정보</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    `;\n          const overlay = new window.kakao.maps.CustomOverlay({\n            content: content,\n            position: marker.getPosition(),\n            yAnchor: 1\n          });\n          window.kakao.maps.event.addListener(marker, 'click', function () {\n            overlay.setMap(map);\n            document.querySelectorAll('.wrap').forEach(el => el.style.display = 'none');\n            document.getElementById(`overlay-${index}`).style.display = 'block';\n          });\n        });\n        window.goToLivePage = stationName => {\n          toggleRightVisibility(stationName);\n        };\n      });\n    };\n    return () => {\n      document.head.removeChild(script);\n      delete window.goToArrivalPage;\n    };\n  }, [dispatch, navigate]);\n  const handleSearch = e => {\n    e.preventDefault();\n    const station = subwayData.find(station => station.name.includes(searchTerm));\n    if (station && map) {\n      const moveLatLon = new window.kakao.maps.LatLng(station.y, station.x);\n      map.setCenter(moveLatLon);\n      map.setLevel(4);\n\n      // 오버레이를 표시할 위치에 커스텀 오버레이 생성 및 표시\n      const content = `\n                <div class=\"wrap\">\n                    <div class=\"info\">\n                        <div class=\"title\">\n                            ${station.name}\n                            <button class=\"close\" title=\"닫기\" onclick=\"document.querySelector('.wrap').style.display = 'none'\"></button>\n                        </div>\n                        <div class=\"body\">\n                            <div class=\"desc\">\n                                <div class=\"ellipsis\">${station.line} ${station.name}</div>\n                                <div>\n                                    <button onclick=\"setStation('${station.name}', 'start')\">출발</button>\n                                    <button onclick=\"setStation('${station.name}', 'end')\">도착</button>\n                                    <button onclick=\"window.goToLivePage('${station.name}')\">실시간 도착정보</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `;\n      const overlay = new window.kakao.maps.CustomOverlay({\n        content: content,\n        position: moveLatLon,\n        yAnchor: 1\n      });\n      overlay.setMap(map);\n    }\n  };\n  const moveToUserLocation = () => {\n    if (map && 'geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userPosition = new window.kakao.maps.LatLng(position.coords.latitude, position.coords.longitude);\n        map.setCenter(userPosition);\n\n        // 마커가 이미 존재하면 제거\n        if (userMarker) {\n          userMarker.setMap(null);\n          setUserMarker(null);\n        } else {\n          // Create a marker for the user's current location\n          const markerImageSrc = loc; // You need to provide a valid image URL or path\n          const markerImageSize = new window.kakao.maps.Size(30, 40); // Customize size as needed\n          const markerImageOption = {\n            offset: new window.kakao.maps.Point(12, 35)\n          };\n          const markerImage = new window.kakao.maps.MarkerImage(markerImageSrc, markerImageSize, markerImageOption);\n          const userMarker = new window.kakao.maps.Marker({\n            position: userPosition,\n            map: map,\n            image: markerImage\n          });\n          setUserMarker(userMarker);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Main, {\n    title: \"\\uC9C0\\uB3C4\",\n    description: \"\\uC9C0\\uB3C4 \\uD398\\uC774\\uC9C0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uC9C0\\uD558\\uCCA0\\uC5ED \\uAC80\\uC0C9\",\n            value: searchTerm,\n            onChange: handleSearchTermChange // Use handleSearchTermChange for input change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(IoSearch, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 48\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notice\",\n          children: \"[2024-06-13] \\uD604\\uC7AC \\uC9C0\\uD558\\uCCA0 \\uD30C\\uC5C5\\uC73C\\uB85C 4\\uD638\\uC120 \\uD558\\uD589\\uC120, \\uC0C1\\uD589\\uC120 10\\uBD84 \\uC9C0\\uC5F0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions\",\n          children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSuggestionItemClick(suggestion),\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      children: \"\\uC9C0\\uB3C4 \\uB85C\\uB529\\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-button\",\n      onClick: moveToUserLocation,\n      children: /*#__PURE__*/_jsxDEV(MdMyLocation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this), isRightVisible && /*#__PURE__*/_jsxDEV(Right, {\n      isVisible: isRightVisible,\n      toggleRightVisibility: toggleRightVisibility,\n      stationName: stationName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"7bBJ+BI9yelpmbAkdoQh26Aeyfo=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useDispatch","useSelector","Main","subwayData","FaLongArrowAltRight","IoSearch","IoLocationOutline","setStartStation","setEndStation","Right","MdMyLocation","FaMapMarkerAlt","line1","line2","line3","line4","line5","line6","line7","line8","line9","line10","line11","line12","line13","line14","line15","line16","loc","Background","jsxDEV","_jsxDEV","lineImages","Map","_s","isRightVisible","setIsRightVisible","searchTerm","setSearchTerm","map","setMap","userMarker","setUserMarker","stationName","setStationName","dispatch","navigate","suggestions","setSuggestions","startStation","state","endStation","handleSuggestionItemClick","suggestion","sanitizedSuggestion","includes","split","trim","handleSearchTermChange","e","value","target","filteredStations","filter","station","name","slice","line","toggleRightVisibility","window","setStation","type","script","document","createElement","src","async","head","appendChild","onload","kakao","maps","load","mapContainer","getElementById","mapOption","center","LatLng","level","navigator","geolocation","getCurrentPosition","position","userPosition","coords","latitude","longitude","setCenter","console","log","forEach","index","markerPosition","y","x","markerImageSrc","markerImageSize","Size","markerImageOption","offset","Point","markerImage","MarkerImage","marker","Marker","image","content","overlay","CustomOverlay","getPosition","yAnchor","event","addListener","querySelectorAll","el","style","display","goToLivePage","removeChild","goToArrivalPage","handleSearch","preventDefault","find","moveLatLon","setLevel","moveToUserLocation","title","description","children","className","onSubmit","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","size","length","onClick","id","isVisible","_c","$RefreshReg$"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Main from '../components/section/Main';\nimport subwayData from '../data/map.json';\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\nimport { IoSearch, IoLocationOutline } from \"react-icons/io5\";\nimport { setStartStation, setEndStation } from '../data/actions';\nimport Right from '../components/section/Right';\nimport { MdMyLocation } from \"react-icons/md\";\n\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\n\n// Import subway line images...\nimport line1 from '../assets/img/subwaymapmarker/1호선마커.png';\nimport line2 from '../assets/img/subwaymapmarker/2호선마커.png';\nimport line3 from '../assets/img/subwaymapmarker/3호선마커.png';\nimport line4 from '../assets/img/subwaymapmarker/4호선마커.png';\nimport line5 from '../assets/img/subwaymapmarker/5호선마커.png';\nimport line6 from '../assets/img/subwaymapmarker/6호선마커.png';\nimport line7 from '../assets/img/subwaymapmarker/7호선마커.png';\nimport line8 from '../assets/img/subwaymapmarker/8호선마커.png';\nimport line9 from '../assets/img/subwaymapmarker/9호선마커.png';\nimport line10 from '../assets/img/subwaymapmarker/수인분당선마커.png';\nimport line11 from '../assets/img/subwaymapmarker/경의중앙선마커.png';\nimport line12 from '../assets/img/subwaymapmarker/경춘선마커.png';\nimport line13 from '../assets/img/subwaymapmarker/공항철도1호선마커.png';\nimport line14 from '../assets/img/subwaymapmarker/신림선마커.png';\nimport line15 from '../assets/img/subwaymapmarker/우이신설선마커.png';\nimport line16 from '../assets/img/subwaymapmarker/김포골드라인마커.png';\n\nimport loc from '../assets/img/subwaymapmarker/현위치.png';\nimport { Background } from 'victory';\n\nconst lineImages = {\n    \"1호선\": line1,\n    \"2호선\": line2,\n    \"3호선\": line3,\n    \"4호선\": line4,\n    \"5호선\": line5,\n    \"6호선\": line6,\n    \"7호선\": line7,\n    \"8호선\": line8,\n    \"9호선\": line9,\n    \"수인분당선\": line10,\n    \"경의중앙선\": line11,\n    \"경춘선\": line12,\n    \"공항철도1호선\": line13,\n    \"신림선\": line14,\n    \"우이신설선\": line15,\n    \"김포골드라인\": line16,\n};\n\n\nconst Map = () => {\n    const [isRightVisible, setIsRightVisible] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [map, setMap] = useState(null);\n    const [userMarker, setUserMarker] = useState(null); // 사용자 마커 상태 추가\n    const [stationName, setStationName] = useState(null);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [suggestions, setSuggestions] = useState([]); // Define suggestions state\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n\n    // 제안 항목 클릭 처리 함수\n    const handleSuggestionItemClick = (suggestion) => {\n        // '-' 포함 여부 확인하고 이후 문자열 제거\n        const sanitizedSuggestion = suggestion.includes('-') ? suggestion.split('-')[0].trim() : suggestion;\n        setSearchTerm(sanitizedSuggestion); // 정제된 제안을 검색어로 설정\n        setSuggestions([]); // 제안 목록 초기화\n    };\n\n\n// Function to handle search term change\n    const handleSearchTermChange = (e) => {\n        const value = e.target.value;\n        setSearchTerm(value); // Update search term state\n\n        // Filter subway stations based on the search term\n        const filteredStations = subwayData.filter(station => station.name.includes(value)).slice(0, 3); // Slice the array to get only the first 3 elements\n        setSuggestions(filteredStations.map(station => `${station.name} - ${station.line}`));\n    };\n\n\n    const toggleRightVisibility = (name = null) => {\n        setIsRightVisible(!isRightVisible);\n        setStationName(name);\n    };\n\n\n    useEffect(() => {\n        window.setStation = (stationName, type) => {\n            if (type === 'start') {\n                dispatch(setStartStation(stationName));\n            } else if (type === 'end') {\n                dispatch(setEndStation(stationName));\n            }\n        };\n\n        const script = document.createElement('script');\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=a576239cea9ab4b2daf2a00e251e97e9&autoload=false\";\n        script.async = true;\n        document.head.appendChild(script);\n\n        script.onload = () => {\n            window.kakao.maps.load(() => {\n                const mapContainer = document.getElementById('map');\n                const mapOption = {\n                    center: new window.kakao.maps.LatLng(37.5503, 127.0731),\n                    level: 5\n                };\n\n                const map = new window.kakao.maps.Map(mapContainer, mapOption);\n                setMap(map);\n\n                if ('geolocation' in navigator) {\n                    navigator.geolocation.getCurrentPosition(position => {\n                        const userPosition = new window.kakao.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                        map.setCenter(userPosition);\n                    });\n                } else {\n                    console.log('Geolocation is not supported.');\n                }\n\n                subwayData.forEach((station, index) => {\n                    const markerPosition = new window.kakao.maps.LatLng(station.y, station.x);\n                    const markerImageSrc = lineImages[station.line];\n                    const markerImageSize = new window.kakao.maps.Size(24, 30);\n                    const markerImageOption = { offset: new window.kakao.maps.Point(12, 35) };\n                    const markerImage = new window.kakao.maps.MarkerImage(markerImageSrc, markerImageSize, markerImageOption);\n\n                    const marker = new window.kakao.maps.Marker({\n                        position: markerPosition,\n                        map: map,\n                        image: markerImage\n                    });\n\n                    const content = `\n                        <div class=\"wrap\" id=\"overlay-${index}\">\n                            <div class=\"info\">\n                                <div class=\"title\">\n                                    ${station.name}\n                                    <div class=\"close\" onclick=\"document.getElementById('overlay-${index}').style.display='none'\" title=\"닫기\"></div>\n                                </div>\n                                <div class=\"body\">\n                                    <div class=\"desc\">\n                                        <div class=\"ellipsis\">${station.line} ${station.name}</div>\n                                        <div>\n                                            <button onclick=\"setStation('${station.name}', 'start')\">출발</button>\n                                            <button onclick=\"setStation('${station.name}', 'end')\">도착</button>\n                                            <button onclick=\"window.goToLivePage('${station.name}')\">실시간 도착정보</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    `;\n\n                    const overlay = new window.kakao.maps.CustomOverlay({\n                        content: content,\n                        position: marker.getPosition(),\n                        yAnchor: 1\n                    });\n\n                    window.kakao.maps.event.addListener(marker, 'click', function () {\n                        overlay.setMap(map);\n                        document.querySelectorAll('.wrap').forEach(el => el.style.display = 'none');\n                        document.getElementById(`overlay-${index}`).style.display = 'block';\n                    });\n                });\n\n                window.goToLivePage = (stationName) => {\n                    toggleRightVisibility(stationName);\n                };\n            });\n        };\n\n        return () => {\n            document.head.removeChild(script);\n            delete window.goToArrivalPage;\n        };\n    }, [dispatch, navigate]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        const station = subwayData.find(station => station.name.includes(searchTerm));\n        if (station && map) {\n            const moveLatLon = new window.kakao.maps.LatLng(station.y, station.x);\n            map.setCenter(moveLatLon);\n            map.setLevel(4);\n\n            // 오버레이를 표시할 위치에 커스텀 오버레이 생성 및 표시\n            const content = `\n                <div class=\"wrap\">\n                    <div class=\"info\">\n                        <div class=\"title\">\n                            ${station.name}\n                            <button class=\"close\" title=\"닫기\" onclick=\"document.querySelector('.wrap').style.display = 'none'\"></button>\n                        </div>\n                        <div class=\"body\">\n                            <div class=\"desc\">\n                                <div class=\"ellipsis\">${station.line} ${station.name}</div>\n                                <div>\n                                    <button onclick=\"setStation('${station.name}', 'start')\">출발</button>\n                                    <button onclick=\"setStation('${station.name}', 'end')\">도착</button>\n                                    <button onclick=\"window.goToLivePage('${station.name}')\">실시간 도착정보</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `;\n            const overlay = new window.kakao.maps.CustomOverlay({\n                content: content,\n                position: moveLatLon,\n                yAnchor: 1\n            });\n\n            overlay.setMap(map);\n        }\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const moveToUserLocation = () => {\n        if (map && 'geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition(position => {\n                const userPosition = new window.kakao.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                map.setCenter(userPosition);\n\n                // 마커가 이미 존재하면 제거\n                if (userMarker) {\n                    userMarker.setMap(null);\n                    setUserMarker(null);\n                } else {\n\n                    // Create a marker for the user's current location\n                    const markerImageSrc = loc ; // You need to provide a valid image URL or path\n                    const markerImageSize = new window.kakao.maps.Size(30, 40); // Customize size as needed\n                    const markerImageOption = { offset: new window.kakao.maps.Point(12, 35) };\n                    const markerImage = new window.kakao.maps.MarkerImage(markerImageSrc, markerImageSize, markerImageOption);\n\n                    const userMarker = new window.kakao.maps.Marker({\n                        position: userPosition,\n                        map: map,\n                        image: markerImage\n                    });\n                    setUserMarker(userMarker);\n\n                }\n\n            });\n        }\n    };\n\n    return (\n        <Main title=\"지도\" description=\"지도 페이지\">\n            <div className=\"search-container\">\n                <div className=\"search-form\">\n                    <form onSubmit={handleSearch}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"지하철역 검색\"\n                            value={searchTerm}\n                            onChange={handleSearchTermChange} // Use handleSearchTermChange for input change\n                        />\n                        <button type=\"submit\"> <IoSearch size={20} /> </button>\n                    </form>\n                    <div className=\"notice\">\n                        [2024-06-13] 현재 지하철 파업으로 4호선 하행선, 상행선 10분 지연\n                    </div>\n\n                    { suggestions.length > 0 && (\n                        <ul className=\"suggestions\">\n                            {suggestions.map((suggestion, index) => (\n                                <li key={index} onClick={() => handleSuggestionItemClick(suggestion)}>{suggestion}</li>\n                            ))}\n                        </ul>\n                    )}\n                    {/*\n                    <div className=\"route-box\">\n                        <div className=\"route-info\">출발지: {startStation}</div>\n                        <FaLongArrowAltRight />\n                        <div className=\"route-info\">도착지: {endStation}</div>\n                        <button onClick={navigateToRouteResult}>실시간 길찾기</button>\n                    </div>\n                */}\n                </div>\n            </div>\n            <div id=\"map\">지도 로딩중...</div>\n            {/* 내 위치로 이동 버튼 */}\n            <div className=\"location-button\" onClick={moveToUserLocation}>\n                <MdMyLocation/>\n            </div>\n            {isRightVisible && <Right isVisible={isRightVisible} toggleRightVisibility={toggleRightVisibility} stationName={stationName} />}\n        </Main>\n    );\n};\n\nexport default Map;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAASC,QAAQ,EAAEC,iBAAiB,QAAQ,iBAAiB;AAC7D,SAASC,eAAe,EAAEC,aAAa,QAAQ,iBAAiB;AAChE,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,cAAc,QAAQ,gBAAgB;;AAE/C;AACA,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,MAAM,MAAM,2CAA2C;AAC9D,OAAOC,MAAM,MAAM,2CAA2C;AAC9D,OAAOC,MAAM,MAAM,yCAAyC;AAC5D,OAAOC,MAAM,MAAM,6CAA6C;AAChE,OAAOC,MAAM,MAAM,yCAAyC;AAC5D,OAAOC,MAAM,MAAM,2CAA2C;AAC9D,OAAOC,MAAM,MAAM,4CAA4C;AAE/D,OAAOC,GAAG,MAAM,uCAAuC;AACvD,SAASC,UAAU,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAG;EACf,KAAK,EAAEpB,KAAK;EACZ,KAAK,EAAEC,KAAK;EACZ,KAAK,EAAEC,KAAK;EACZ,KAAK,EAAEC,KAAK;EACZ,KAAK,EAAEC,KAAK;EACZ,KAAK,EAAEC,KAAK;EACZ,KAAK,EAAEC,KAAK;EACZ,KAAK,EAAEC,KAAK;EACZ,KAAK,EAAEC,KAAK;EACZ,OAAO,EAAEC,MAAM;EACf,OAAO,EAAEC,MAAM;EACf,KAAK,EAAEC,MAAM;EACb,SAAS,EAAEC,MAAM;EACjB,KAAK,EAAEC,MAAM;EACb,OAAO,EAAEC,MAAM;EACf,QAAQ,EAAEC;AACd,CAAC;AAGD,MAAMM,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyC,GAAG,EAAEC,MAAM,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAAC2C,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAM,CAAC6C,WAAW,EAAEC,cAAc,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM+C,QAAQ,GAAG7C,WAAW,CAAC,CAAC;EAC9B,MAAM8C,QAAQ,GAAG/C,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACgD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAMmD,YAAY,GAAGhD,WAAW,CAACiD,KAAK,IAAIA,KAAK,CAACD,YAAY,CAAC;EAC7D,MAAME,UAAU,GAAGlD,WAAW,CAACiD,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC;;EAEzD;EACA,MAAMC,yBAAyB,GAAIC,UAAU,IAAK;IAC9C;IACA,MAAMC,mBAAmB,GAAGD,UAAU,CAACE,QAAQ,CAAC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,GAAGJ,UAAU;IACnGf,aAAa,CAACgB,mBAAmB,CAAC,CAAC,CAAC;IACpCN,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;EACxB,CAAC;;EAGL;EACI,MAAMU,sBAAsB,GAAIC,CAAC,IAAK;IAClC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BtB,aAAa,CAACsB,KAAK,CAAC,CAAC,CAAC;;IAEtB;IACA,MAAME,gBAAgB,GAAG3D,UAAU,CAAC4D,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACV,QAAQ,CAACK,KAAK,CAAC,CAAC,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjGlB,cAAc,CAACc,gBAAgB,CAACvB,GAAG,CAACyB,OAAO,IAAK,GAAEA,OAAO,CAACC,IAAK,MAAKD,OAAO,CAACG,IAAK,EAAC,CAAC,CAAC;EACxF,CAAC;EAGD,MAAMC,qBAAqB,GAAGA,CAACH,IAAI,GAAG,IAAI,KAAK;IAC3C7B,iBAAiB,CAAC,CAACD,cAAc,CAAC;IAClCS,cAAc,CAACqB,IAAI,CAAC;EACxB,CAAC;EAGDpE,SAAS,CAAC,MAAM;IACZwE,MAAM,CAACC,UAAU,GAAG,CAAC3B,WAAW,EAAE4B,IAAI,KAAK;MACvC,IAAIA,IAAI,KAAK,OAAO,EAAE;QAClB1B,QAAQ,CAACtC,eAAe,CAACoC,WAAW,CAAC,CAAC;MAC1C,CAAC,MAAM,IAAI4B,IAAI,KAAK,KAAK,EAAE;QACvB1B,QAAQ,CAACrC,aAAa,CAACmC,WAAW,CAAC,CAAC;MACxC;IACJ,CAAC;IAED,MAAM6B,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,wFAAwF;IACrGH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;IAEjCA,MAAM,CAACO,MAAM,GAAG,MAAM;MAClBV,MAAM,CAACW,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC,MAAM;QACzB,MAAMC,YAAY,GAAGV,QAAQ,CAACW,cAAc,CAAC,KAAK,CAAC;QACnD,MAAMC,SAAS,GAAG;UACdC,MAAM,EAAE,IAAIjB,MAAM,CAACW,KAAK,CAACC,IAAI,CAACM,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC;UACvDC,KAAK,EAAE;QACX,CAAC;QAED,MAAMjD,GAAG,GAAG,IAAI8B,MAAM,CAACW,KAAK,CAACC,IAAI,CAAChD,GAAG,CAACkD,YAAY,EAAEE,SAAS,CAAC;QAC9D7C,MAAM,CAACD,GAAG,CAAC;QAEX,IAAI,aAAa,IAAIkD,SAAS,EAAE;UAC5BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAQ,IAAI;YACjD,MAAMC,YAAY,GAAG,IAAIxB,MAAM,CAACW,KAAK,CAACC,IAAI,CAACM,MAAM,CAACK,QAAQ,CAACE,MAAM,CAACC,QAAQ,EAAEH,QAAQ,CAACE,MAAM,CAACE,SAAS,CAAC;YACtGzD,GAAG,CAAC0D,SAAS,CAACJ,YAAY,CAAC;UAC/B,CAAC,CAAC;QACN,CAAC,MAAM;UACHK,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAChD;QAEAhG,UAAU,CAACiG,OAAO,CAAC,CAACpC,OAAO,EAAEqC,KAAK,KAAK;UACnC,MAAMC,cAAc,GAAG,IAAIjC,MAAM,CAACW,KAAK,CAACC,IAAI,CAACM,MAAM,CAACvB,OAAO,CAACuC,CAAC,EAAEvC,OAAO,CAACwC,CAAC,CAAC;UACzE,MAAMC,cAAc,GAAGzE,UAAU,CAACgC,OAAO,CAACG,IAAI,CAAC;UAC/C,MAAMuC,eAAe,GAAG,IAAIrC,MAAM,CAACW,KAAK,CAACC,IAAI,CAAC0B,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;UAC1D,MAAMC,iBAAiB,GAAG;YAAEC,MAAM,EAAE,IAAIxC,MAAM,CAACW,KAAK,CAACC,IAAI,CAAC6B,KAAK,CAAC,EAAE,EAAE,EAAE;UAAE,CAAC;UACzE,MAAMC,WAAW,GAAG,IAAI1C,MAAM,CAACW,KAAK,CAACC,IAAI,CAAC+B,WAAW,CAACP,cAAc,EAAEC,eAAe,EAAEE,iBAAiB,CAAC;UAEzG,MAAMK,MAAM,GAAG,IAAI5C,MAAM,CAACW,KAAK,CAACC,IAAI,CAACiC,MAAM,CAAC;YACxCtB,QAAQ,EAAEU,cAAc;YACxB/D,GAAG,EAAEA,GAAG;YACR4E,KAAK,EAAEJ;UACX,CAAC,CAAC;UAEF,MAAMK,OAAO,GAAI;AACrC,wDAAwDf,KAAM;AAC9D;AACA;AACA,sCAAsCrC,OAAO,CAACC,IAAK;AACnD,mGAAmGoC,KAAM;AACzG;AACA;AACA;AACA,gEAAgErC,OAAO,CAACG,IAAK,IAAGH,OAAO,CAACC,IAAK;AAC7F;AACA,2EAA2ED,OAAO,CAACC,IAAK;AACxF,2EAA2ED,OAAO,CAACC,IAAK;AACxF,oFAAoFD,OAAO,CAACC,IAAK;AACjG;AACA;AACA;AACA;AACA;AACA,qBAAqB;UAED,MAAMoD,OAAO,GAAG,IAAIhD,MAAM,CAACW,KAAK,CAACC,IAAI,CAACqC,aAAa,CAAC;YAChDF,OAAO,EAAEA,OAAO;YAChBxB,QAAQ,EAAEqB,MAAM,CAACM,WAAW,CAAC,CAAC;YAC9BC,OAAO,EAAE;UACb,CAAC,CAAC;UAEFnD,MAAM,CAACW,KAAK,CAACC,IAAI,CAACwC,KAAK,CAACC,WAAW,CAACT,MAAM,EAAE,OAAO,EAAE,YAAY;YAC7DI,OAAO,CAAC7E,MAAM,CAACD,GAAG,CAAC;YACnBkC,QAAQ,CAACkD,gBAAgB,CAAC,OAAO,CAAC,CAACvB,OAAO,CAACwB,EAAE,IAAIA,EAAE,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC;YAC3ErD,QAAQ,CAACW,cAAc,CAAE,WAAUiB,KAAM,EAAC,CAAC,CAACwB,KAAK,CAACC,OAAO,GAAG,OAAO;UACvE,CAAC,CAAC;QACN,CAAC,CAAC;QAEFzD,MAAM,CAAC0D,YAAY,GAAIpF,WAAW,IAAK;UACnCyB,qBAAqB,CAACzB,WAAW,CAAC;QACtC,CAAC;MACL,CAAC,CAAC;IACN,CAAC;IAED,OAAO,MAAM;MACT8B,QAAQ,CAACI,IAAI,CAACmD,WAAW,CAACxD,MAAM,CAAC;MACjC,OAAOH,MAAM,CAAC4D,eAAe;IACjC,CAAC;EACL,CAAC,EAAE,CAACpF,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,MAAMoF,YAAY,GAAIvE,CAAC,IAAK;IACxBA,CAAC,CAACwE,cAAc,CAAC,CAAC;IAClB,MAAMnE,OAAO,GAAG7D,UAAU,CAACiI,IAAI,CAACpE,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACV,QAAQ,CAAClB,UAAU,CAAC,CAAC;IAC7E,IAAI2B,OAAO,IAAIzB,GAAG,EAAE;MAChB,MAAM8F,UAAU,GAAG,IAAIhE,MAAM,CAACW,KAAK,CAACC,IAAI,CAACM,MAAM,CAACvB,OAAO,CAACuC,CAAC,EAAEvC,OAAO,CAACwC,CAAC,CAAC;MACrEjE,GAAG,CAAC0D,SAAS,CAACoC,UAAU,CAAC;MACzB9F,GAAG,CAAC+F,QAAQ,CAAC,CAAC,CAAC;;MAEf;MACA,MAAMlB,OAAO,GAAI;AAC7B;AACA;AACA;AACA,8BAA8BpD,OAAO,CAACC,IAAK;AAC3C;AACA;AACA;AACA;AACA,wDAAwDD,OAAO,CAACG,IAAK,IAAGH,OAAO,CAACC,IAAK;AACrF;AACA,mEAAmED,OAAO,CAACC,IAAK;AAChF,mEAAmED,OAAO,CAACC,IAAK;AAChF,4EAA4ED,OAAO,CAACC,IAAK;AACzF;AACA;AACA;AACA;AACA;AACA,aAAa;MACD,MAAMoD,OAAO,GAAG,IAAIhD,MAAM,CAACW,KAAK,CAACC,IAAI,CAACqC,aAAa,CAAC;QAChDF,OAAO,EAAEA,OAAO;QAChBxB,QAAQ,EAAEyC,UAAU;QACpBb,OAAO,EAAE;MACb,CAAC,CAAC;MAEFH,OAAO,CAAC7E,MAAM,CAACD,GAAG,CAAC;IACvB;EACJ,CAAC;EAcD,MAAMgG,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIhG,GAAG,IAAI,aAAa,IAAIkD,SAAS,EAAE;MACnCA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAQ,IAAI;QACjD,MAAMC,YAAY,GAAG,IAAIxB,MAAM,CAACW,KAAK,CAACC,IAAI,CAACM,MAAM,CAACK,QAAQ,CAACE,MAAM,CAACC,QAAQ,EAAEH,QAAQ,CAACE,MAAM,CAACE,SAAS,CAAC;QACtGzD,GAAG,CAAC0D,SAAS,CAACJ,YAAY,CAAC;;QAE3B;QACA,IAAIpD,UAAU,EAAE;UACZA,UAAU,CAACD,MAAM,CAAC,IAAI,CAAC;UACvBE,aAAa,CAAC,IAAI,CAAC;QACvB,CAAC,MAAM;UAEH;UACA,MAAM+D,cAAc,GAAG7E,GAAG,CAAE,CAAC;UAC7B,MAAM8E,eAAe,GAAG,IAAIrC,MAAM,CAACW,KAAK,CAACC,IAAI,CAAC0B,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;UAC5D,MAAMC,iBAAiB,GAAG;YAAEC,MAAM,EAAE,IAAIxC,MAAM,CAACW,KAAK,CAACC,IAAI,CAAC6B,KAAK,CAAC,EAAE,EAAE,EAAE;UAAE,CAAC;UACzE,MAAMC,WAAW,GAAG,IAAI1C,MAAM,CAACW,KAAK,CAACC,IAAI,CAAC+B,WAAW,CAACP,cAAc,EAAEC,eAAe,EAAEE,iBAAiB,CAAC;UAEzG,MAAMnE,UAAU,GAAG,IAAI4B,MAAM,CAACW,KAAK,CAACC,IAAI,CAACiC,MAAM,CAAC;YAC5CtB,QAAQ,EAAEC,YAAY;YACtBtD,GAAG,EAAEA,GAAG;YACR4E,KAAK,EAAEJ;UACX,CAAC,CAAC;UACFrE,aAAa,CAACD,UAAU,CAAC;QAE7B;MAEJ,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACIV,OAAA,CAAC7B,IAAI;IAACsI,KAAK,EAAC,cAAI;IAACC,WAAW,EAAC,iCAAQ;IAAAC,QAAA,gBACjC3G,OAAA;MAAK4G,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC7B3G,OAAA;QAAK4G,SAAS,EAAC,aAAa;QAAAD,QAAA,gBACxB3G,OAAA;UAAM6G,QAAQ,EAAEV,YAAa;UAAAQ,QAAA,gBACzB3G,OAAA;YACIwC,IAAI,EAAC,MAAM;YACXsE,WAAW,EAAC,uCAAS;YACrBjF,KAAK,EAAEvB,UAAW;YAClByG,QAAQ,EAAEpF,sBAAuB,CAAC;UAAA;YAAAqF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACFnH,OAAA;YAAQwC,IAAI,EAAC,QAAQ;YAAAmE,QAAA,GAAC,GAAC,eAAA3G,OAAA,CAAC1B,QAAQ;cAAC8I,IAAI,EAAE;YAAG;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC,eACPnH,OAAA;UAAK4G,SAAS,EAAC,QAAQ;UAAAD,QAAA,EAAC;QAExB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAEJnG,WAAW,CAACqG,MAAM,GAAG,CAAC,iBACpBrH,OAAA;UAAI4G,SAAS,EAAC,aAAa;UAAAD,QAAA,EACtB3F,WAAW,CAACR,GAAG,CAAC,CAACc,UAAU,EAAEgD,KAAK,kBAC/BtE,OAAA;YAAgBsH,OAAO,EAAEA,CAAA,KAAMjG,yBAAyB,CAACC,UAAU,CAAE;YAAAqF,QAAA,EAAErF;UAAU,GAAxEgD,KAAK;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwE,CACzF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNnH,OAAA;MAAKuH,EAAE,EAAC,KAAK;MAAAZ,QAAA,EAAC;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE7BnH,OAAA;MAAK4G,SAAS,EAAC,iBAAiB;MAACU,OAAO,EAAEd,kBAAmB;MAAAG,QAAA,eACzD3G,OAAA,CAACrB,YAAY;QAAAqI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EACL/G,cAAc,iBAAIJ,OAAA,CAACtB,KAAK;MAAC8I,SAAS,EAAEpH,cAAe;MAACiC,qBAAqB,EAAEA,qBAAsB;MAACzB,WAAW,EAAEA;IAAY;MAAAoG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7H,CAAC;AAEf,CAAC;AAAChH,EAAA,CA/PID,GAAG;EAAA,QAMYjC,WAAW,EACXD,WAAW,EAEPE,WAAW,EACbA,WAAW;AAAA;AAAAuJ,EAAA,GAV5BvH,GAAG;AAiQT,eAAeA,GAAG;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}