{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC190\\uD55C\\uC2B9\\\\Desktop\\\\project-subway\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\Pre.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate, useLocation } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nimport { ctime } from './Nav';\nimport { useTime } from '../data/TimeContext';\nimport { navPath } from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Pre = () => {\n  _s();\n  const startStation = useSelector(state => state.startStation);\n  const endStation = useSelector(state => state.endStation);\n  const [loading, setLoading] = useState(false); // 로딩 상태 변수\n  const navigate = useNavigate(); // useHistory 훅 사용\n  let ingtime = [0];\n  const {\n    hour,\n    minute,\n    weekday\n  } = useTime();\n  const currentTime = ctime;\n  const [results, setResults] = useState([{\n    \"path\": [\"장한평\", \"군자(능동)\"],\n    \"finalTime\": \"12:31:55\",\n    \"eachTransferStation\": [],\n    \"startLine\": \"5호선\",\n    \"eachTime\": [],\n    \"eachWalkingTime\": [],\n    \"eachTypeOfLine\": [],\n    \"eachWaitingTime\": [],\n    \"totalTime\": 100\n  }, {\n    \"path\": [\"장한평\", \"답십리\", \"마장\", \"왕십리(성동구청)\", \"한양대\", \"뚝섬\", \"성수\", \"건대입구\", \"어린이대공원(세종대)\", \"군자(능동)\"],\n    \"finalTime\": \"13:05:40\",\n    \"eachTransferStation\": [\"왕십리(성동구청)\", \"건대입구\", \"수락산\"],\n    \"startLine\": \"5호선\",\n    \"eachTime\": [260, 330, 400],\n    \"eachWalkingTime\": [180, 240, 400],\n    \"eachTypeOfLine\": [\"2호선\", \"7호선\", \"2호선\"],\n    \"eachWaitingTime\": [265, 90, 400],\n    \"totalTime\": 3325\n  }, {\n    \"path\": [\"장한평\", \"답십리\", \"마장\", \"왕십리(성동구청)\", \"행당\", \"신금호\", \"청구\", \"신당\", \"동묘앞\", \"창신\", \"보문\", \"안암(고대병원앞)\", \"고려대(종암)\", \"월곡(동덕여대)\", \"상월곡(한국과학기술연구원)\", \"돌곶이\", \"석계\", \"태릉입구\", \"먹골\", \"중화\", \"상봉(시외버스터미널)\", \"면목\", \"사가정\", \"용마산\", \"중곡\", \"군자(능동)\"],\n    \"finalTime\": \"13:25:50\",\n    \"eachTransferStation\": [\"청구\", \"태릉입구\"],\n    \"startLine\": \"5호선\",\n    \"eachTime\": [500, 810],\n    \"eachWalkingTime\": [120, 120],\n    \"eachTypeOfLine\": [\"6호선\", \"7호선\"],\n    \"eachWaitingTime\": [465, 90],\n    \"totalTime\": 3335\n  }]);\n  const location = useLocation();\n  console.log(navPath);\n  useEffect(() => {\n    var _location$state;\n    // 첫 번째 서비스에서 전달된 데이터\n    const firstServiceData = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.results;\n\n    // 데이터가 존재하는 경우에만 두 번째 서비스 호출\n    if (firstServiceData) {\n      const fetchSecondServiceData = async () => {\n        try {\n          const url = `http://localhost:8080/Predict?day=${encodeURIComponent(weekday)}`;\n          const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(firstServiceData)\n          });\n          const secondServiceData = await response.json();\n          setResult(secondServiceData);\n          console.log('두 번째 서비스 응답 데이터:', secondServiceData);\n        } catch (error) {\n          console.error('두 번째 서비스 요청 실패:', error);\n        }\n      };\n      fetchSecondServiceData();\n    }\n  }, [location]);\n  const renderResults = () => {\n    return result.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultsMap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"resultsHeader\",\n        children: [\"AI \\uC608\\uCE21 \\uAE38\\uCC3E\\uAE30 \\uACB0\\uACFC \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uCD9C\\uBC1C \\uC2DC\\uAC04: \", Math.floor(currentTime / (60 * 60)), \"\\uC2DC \", Math.floor(currentTime % (60 * 60) / 60), \"\\uBD84 \", Math.floor(currentTime % 60), \"\\uCD08, (\", weekday, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"scheduleTime\",\n        children: [\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(AI): \", Math.floor((currentTime + result.totalTime) / (60 * 60)), \"\\uC2DC \", Math.floor((currentTime + result.totalTime) % (60 * 60) / 60), \"\\uBD84 \", Math.floor((currentTime + result.totalTime) % 60), \"\\uCD08\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), result.path && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"resultItem\",\n          children: [\"\\uACBD\\uB85C: \", result.path.map((place, index) => {\n            // eachTransferStation 배열에 포함된 역인지 확인\n            if (result.eachTransferStation && result.eachTransferStation.includes(place)) {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: place\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 40\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: place\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 40\n              }, this);\n            }\n          }).reduce((prev, curr) => [prev, ' -> ', curr])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualRepresentation\",\n        style: {\n          width: '1250px',\n          height: '30px',\n          backgroundColor: 'lightgray',\n          margin: '20px 0'\n        },\n        children: renderTransferBars(result)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), result.path && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"resultItem\",\n          children: [\"\\uAC78\\uB9AC\\uB294\\uC2DC\\uAC04: \", Math.floor(result.totalTime / 60), \"\\uBD84 \", Math.floor(result.totalTime % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), result.eachTypeOfLine.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"resultItem\",\n          children: [index + 1, \"\\uBC88 \\uD658\\uC2B9: \", line, \"(\", result.eachTransferStation[index], \") - \", Math.floor((currentTime + ingtime[index]) / (60 * 60)), \"\\uC2DC \", Math.floor((currentTime + ingtime[index]) % (60 * 60) / 60), \"\\uBD84 \", Math.floor((currentTime + ingtime[index]) % 60), \"\\uCD08 \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this));\n  };\n  const renderTransferBars = result => {\n    const transferBars = [];\n    const iconSize = 20; // 이미지 크기\n    let i = 0;\n\n    // 환승역이 없는 경우 처리\n    if (result.eachTransferStation.length === 0) {\n      // 출발지에서 도착지까지 바로 이동하는 경우\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: '100%',\n          height: '30px',\n          backgroundColor: getLineColor(result.startLine),\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: train,\n          alt: \"subway\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(result.startLine)\n          },\n          children: [startStation, \"(\", result.startLine, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(result.startLine)\n          },\n          children: [Math.floor(result.totalTime / 60), \"\\uBD84 \", Math.floor(result.totalTime % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, `go${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this));\n      return transferBars;\n    }\n\n    // 각 막대의 비율 계산\n    const totalBarWidth = result.totalTime;\n    let accumulatedWidth = 0;\n    let tt = 0; // tt 변수 초기화\n\n    result.eachTypeOfLine.forEach((line, index) => {\n      const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n      const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n      const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n      ingtime[index] = 0;\n\n      // 각 막대의 총합이 1250이 되도록 비율 조정\n      const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n      const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n      const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n      const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${goBarWidth}px`,\n          height: '30px',\n          backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]),\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: train,\n          alt: \"subway\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedGoBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])\n          },\n          children: [Math.floor(result.eachTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachTime[index] % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])\n          },\n          children: [index === 0 ? startStation : result.eachTransferStation[index - 1], \"(\", index === 0 ? result.startLine : result.eachTypeOfLine[index - 1], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, `go${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this));\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${transferBarWidth}px`,\n          height: '30px',\n          backgroundColor: 'lightgray',\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: walk,\n          alt: \"walk\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedTransferBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: '#000'\n          },\n          children: [Math.floor(result.eachWalkingTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachWalkingTime[index] % 60), \"\\uCD08\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, `transfer${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this));\n      transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${waitingBarWidth}px`,\n          height: '30px',\n          backgroundColor: 'red',\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          overflow: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: wait,\n          alt: \"wait\",\n          style: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            maxWidth: `${adjustedWaitingBarWidth}px`,\n            maxHeight: '100%',\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '50%',\n            bottom: '-20px',\n            transform: 'translate(-50%, 0)',\n            color: '#000'\n          },\n          children: [Math.floor(result.eachWaitingTime[index] / 60), \"\\uBD84 \", Math.floor(result.eachWaitingTime[index] % 60), \"\\uCD08 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, `wait${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this));\n      result.eachTime.forEach((_, index) => {\n        if (index === 0) {\n          ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n        } else {\n          ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n        }\n      });\n      accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n      tt = tt + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n    });\n\n    // 마지막 열차 막대 추가\n    const lastIndex = result.eachTypeOfLine.length - 1;\n    const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt : result.totalTime) / totalBarWidth * 1250;\n    const lastTotalWidth = lastGoBarWidth;\n    const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n    transferBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        width: `${lastGoBarWidth}px`,\n        height: '30px',\n        backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]),\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        overflow: 'visible'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: train,\n        alt: \"subway\",\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          maxWidth: `50px`,\n          maxHeight: '100%',\n          width: 'auto',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          left: '50%',\n          bottom: '-20px',\n          transform: 'translate(-50%, 0)',\n          color: getLineColor(result.eachTypeOfLine[lastIndex])\n        },\n        children: [Math.floor((result.totalTime - tt) / 60), \"\\uBD84 \", Math.floor(result.eachTime[lastIndex] % 60), \"\\uCD08\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '-20px',\n          transform: 'translate(-50%, 0)',\n          color: getLineColor(result.eachTypeOfLine[lastIndex])\n        },\n        children: [result.eachTransferStation[result.eachTransferStation.length - 1], \"(\", result.eachTypeOfLine[result.eachTypeOfLine.length - 1], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this)]\n    }, `go${lastIndex}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this));\n    return transferBars;\n  };\n  const getLineColor = line => {\n    const lineColors = {\n      '1호선': '#0d3692',\n      '2호선': '#33a23d',\n      '3호선': '#fe5d10',\n      '4호선': '#00a2d1',\n      '5호선': '#8b50a4',\n      '6호선': '#c55c1d',\n      '7호선': '#54640d',\n      '8호선': '#f14c82'\n    };\n    return lineColors[line] || '#000'; // 기본 색상은 검정색\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    title: \"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",\n    description: \"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"resultsHeader\",\n        children: \"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC124\\uC815\\uB41C \\uC2DC\\uAC04: \", hour, \"\\uC2DC \", minute, \"\\uBD84 (\", weekday, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 60\n      }, this), startStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: [\"\\uCD9C\\uBC1C\\uC9C0: \", startStation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 34\n      }, this), endStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: [\"\\uB3C4\\uCC29\\uC9C0: \", endStation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 32\n      }, this), !startStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: \"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 35\n      }, this), !endStation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"resultItem\",\n        children: \"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), renderResults()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }, this);\n};\n_s(Pre, \"2Cn95rcuKiaZVJNtI5wAyPXGD8M=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useTime, useLocation];\n});\n_c = Pre;\nexport default Pre;\nvar _c;\n$RefreshReg$(_c, \"Pre\");","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","Link","useNavigate","useLocation","ctime","useTime","navPath","jsxDEV","_jsxDEV","Fragment","_Fragment","Pre","_s","startStation","state","endStation","loading","setLoading","navigate","ingtime","hour","minute","weekday","currentTime","results","setResults","location","console","log","_location$state","firstServiceData","fetchSecondServiceData","url","encodeURIComponent","response","fetch","method","headers","body","JSON","stringify","secondServiceData","json","setResult","error","renderResults","result","map","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","totalTime","path","place","eachTransferStation","includes","style","color","reduce","prev","curr","width","height","backgroundColor","margin","renderTransferBars","eachTypeOfLine","line","transferBars","iconSize","i","length","push","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","bottom","totalBarWidth","accumulatedWidth","tt","forEach","goBarWidth","eachTime","transferBarWidth","eachWalkingTime","waitingBarWidth","eachWaitingTime","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","_","lastIndex","lastGoBarWidth","lastTotalWidth","lastAdjustedGoBarWidth","lineColors","title","description","_c","$RefreshReg$"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Pre.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate,useLocation } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nimport { ctime } from './Nav';\nimport { useTime } from '../data/TimeContext';\nimport { navPath } from './Nav';\n\nconst Pre = () => {\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n    const [loading, setLoading] = useState(false); // 로딩 상태 변수\n    const navigate  = useNavigate(); // useHistory 훅 사용\n    let ingtime=[0];\n    const { hour, minute, weekday } = useTime();\n    const currentTime = ctime;\n    const [results, setResults] = useState([\n        {\n            \"path\": [\n                \"장한평\",\n                \"군자(능동)\"\n            ],\n            \"finalTime\": \"12:31:55\",\n            \"eachTransferStation\": [],\n            \"startLine\": \"5호선\",\n            \"eachTime\": [],\n            \"eachWalkingTime\": [],\n            \"eachTypeOfLine\": [],\n            \"eachWaitingTime\": [],\n            \"totalTime\": 100\n        },\n        {\n            \"path\": [\n                \"장한평\",\n                \"답십리\",\n                \"마장\",\n                \"왕십리(성동구청)\",\n                \"한양대\",\n                \"뚝섬\",\n                \"성수\",\n                \"건대입구\",\n                \"어린이대공원(세종대)\",\n                \"군자(능동)\"\n            ],\n            \"finalTime\": \"13:05:40\",\n            \"eachTransferStation\": [\n                \"왕십리(성동구청)\",\n                \"건대입구\",\n                \"수락산\"\n            ],\n            \"startLine\": \"5호선\",\n            \"eachTime\": [\n                260,\n                330,\n                400\n            ],\n            \"eachWalkingTime\": [\n                180,\n                240,\n                400\n            ],\n            \"eachTypeOfLine\": [\n                \"2호선\",\n                \"7호선\",\n                \"2호선\"\n\n            ],\n            \"eachWaitingTime\": [\n                265,\n                90,\n                400\n            ],\n            \"totalTime\": 3325\n        },\n        {\n            \"path\": [\n                \"장한평\",\n                \"답십리\",\n                \"마장\",\n                \"왕십리(성동구청)\",\n                \"행당\",\n                \"신금호\",\n                \"청구\",\n                \"신당\",\n                \"동묘앞\",\n                \"창신\",\n                \"보문\",\n                \"안암(고대병원앞)\",\n                \"고려대(종암)\",\n                \"월곡(동덕여대)\",\n                \"상월곡(한국과학기술연구원)\",\n                \"돌곶이\",\n                \"석계\",\n                \"태릉입구\",\n                \"먹골\",\n                \"중화\",\n                \"상봉(시외버스터미널)\",\n                \"면목\",\n                \"사가정\",\n                \"용마산\",\n                \"중곡\",\n                \"군자(능동)\"\n            ],\n            \"finalTime\": \"13:25:50\",\n            \"eachTransferStation\": [\n                \"청구\",\n                \"태릉입구\"\n            ],\n            \"startLine\": \"5호선\",\n            \"eachTime\": [\n                500,\n                810\n            ],\n            \"eachWalkingTime\": [\n                120,\n                120\n            ],\n            \"eachTypeOfLine\": [\n                \"6호선\",\n                \"7호선\"\n            ],\n            \"eachWaitingTime\": [\n                465,\n                90\n            ],\n            \"totalTime\": 3335\n        }\n    ]);\n\n\n\n\n    const location = useLocation();\n\n    console.log(navPath);\n\n\n    useEffect(() => {\n        // 첫 번째 서비스에서 전달된 데이터\n        const firstServiceData = location.state?.results;\n\n        // 데이터가 존재하는 경우에만 두 번째 서비스 호출\n        if (firstServiceData) {\n            const fetchSecondServiceData = async () => {\n                try {\n                    const url = `http://localhost:8080/Predict?day=${encodeURIComponent(weekday)}`;\n                    const response = await fetch(url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify(firstServiceData),\n                    });\n                    const secondServiceData = await response.json();\n                    setResult(secondServiceData);\n                    console.log('두 번째 서비스 응답 데이터:', secondServiceData);\n                } catch (error) {\n                    console.error('두 번째 서비스 요청 실패:', error);\n                }\n            };\n\n            fetchSecondServiceData();\n        }\n    }, [location]);\n\n    const renderResults = () => {\n        return result.map((result, index) => (\n\n\n            <div key={index} className=\"resultsMap\">\n                <h1 className=\"resultsHeader\">AI 예측 길찾기 결과 {index + 1}</h1>\n                <h3>출발 시간: {Math.floor((currentTime) / (60*60))}시 {Math.floor((currentTime) % (60*60)/60)}분 {Math.floor((currentTime)% 60)}초, ({weekday})</h3>\n                <p className=\"scheduleTime\">도착 시간(AI): {Math.floor((currentTime+result.totalTime) / (60*60))}시 {Math.floor((currentTime+result.totalTime) % (60*60)/60)}분 {Math.floor((currentTime+result.totalTime)% 60)}초</p>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">경로: {result.path.map((place, index) => {\n                            // eachTransferStation 배열에 포함된 역인지 확인\n                            if (result.eachTransferStation && result.eachTransferStation.includes(place)) {\n                                return <span key={index} style={{ color: 'red' }}>{place}</span>;\n                            } else {\n                                return <span key={index}>{place}</span>;\n                            }\n                        }).reduce((prev, curr) => [prev, ' -> ', curr])}</p>\n                    </>\n                )}\n                <div className=\"visualRepresentation\" style={{ width: '1250px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\n                    {renderTransferBars(result)}\n                </div>\n\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">걸리는시간: {Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</p>\n                        {result.eachTypeOfLine.map((line, index) => (\n                            <p key={index} className=\"resultItem\">{index + 1}번 환승: {line}({result.eachTransferStation[index]}) - {Math.floor((currentTime+ingtime[index]) / (60*60))}시 {Math.floor((currentTime+ingtime[index]) % (60*60)/60)}분 {Math.floor((currentTime+ingtime[index])% 60)}초 열차 탑승</p>\n                        ))}\n                    </>\n                )}\n            </div>\n        ));\n    };\n\n    const renderTransferBars = (result) => {\n        const transferBars = [];\n        const iconSize = 20; // 이미지 크기\n        let i = 0;\n\n        // 환승역이 없는 경우 처리\n        if (result.eachTransferStation.length === 0) {\n            // 출발지에서 도착지까지 바로 이동하는 경우\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{startStation}({result.startLine})</span>\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</span>\n                </div>\n            );\n            return transferBars;\n        }\n\n        // 각 막대의 비율 계산\n        const totalBarWidth = result.totalTime;\n        let accumulatedWidth = 0;\n        let tt = 0; // tt 변수 초기화\n\n\n        result.eachTypeOfLine.forEach((line, index) => {\n            const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n            const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n            const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n            ingtime[index]=0;\n\n            // 각 막대의 총합이 1250이 되도록 비율 조정\n            const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n            const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n            const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n            const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n\n\n            transferBars.push(\n                <div key={`go${index}`} style={{ display: 'inline-block', width: `${goBarWidth}px`, height: '30px', backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{Math.floor(result.eachTime[index] / 60)}분 {Math.floor(result.eachTime[index] % 60)}초</span>\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{(index === 0 ? startStation : result.eachTransferStation[index - 1])}({(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])})</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`transfer${index}`} style={{ display: 'inline-block', width: `${transferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedTransferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[index] / 60)}분 {Math.floor(result.eachWalkingTime[index] % 60)}초</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`wait${index}`} style={{ display: 'inline-block', width: `${waitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedWaitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[index] / 60)}분 {Math.floor(result.eachWaitingTime[index] % 60)}초 </span>\n                </div>\n            );\n            result.eachTime.forEach((_, index) => {\n                if (index === 0) {\n                    ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                } else {\n                    ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                }\n            });\n\n            accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n            tt = tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];\n        });\n\n        // 마지막 열차 막대 추가\n        const lastIndex = result.eachTypeOfLine.length - 1;\n        const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt: result.totalTime) / totalBarWidth * 1250;\n        const lastTotalWidth = lastGoBarWidth;\n\n        const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n        transferBars.push(\n            <div key={`go${lastIndex}`} style={{ display: 'inline-block', width: `${lastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `50px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{Math.floor((result.totalTime - tt)/ 60)}분 {Math.floor(result.eachTime[lastIndex] % 60)}초</span>\n                <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{result.eachTransferStation[result.eachTransferStation.length - 1]}({result.eachTypeOfLine[result.eachTypeOfLine.length - 1]})</span>\n            </div>\n        );\n        return transferBars;\n    };\n    const getLineColor = (line) => {\n        const lineColors = {\n            '1호선': '#0d3692',\n            '2호선': '#33a23d',\n            '3호선': '#fe5d10',\n            '4호선': '#00a2d1',\n            '5호선': '#8b50a4',\n            '6호선': '#c55c1d',\n            '7호선': '#54640d',\n            '8호선': '#f14c82',\n        };\n        return lineColors[line] || '#000'; // 기본 색상은 검정색\n    };\n\n\n\n    return (\n        <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\n\n            <div className=\"resultsContainer\">\n                <h1 className=\"resultsHeader\">출발지/도착지</h1> <p>설정된 시간: {hour}시 {minute}분 ({weekday})</p>\n                {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\n                {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\n                {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\n                {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\n            </div>\n\n            {renderResults()}\n        </Main>\n    );\n};\n\nexport default Pre;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}