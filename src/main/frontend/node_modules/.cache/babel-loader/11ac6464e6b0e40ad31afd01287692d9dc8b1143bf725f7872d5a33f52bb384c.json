{"ast":null,"code":"import _objectSpread from \"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defaults from \"lodash/defaults\";\nimport _throttle from \"lodash/throttle\";\nimport { Helpers as CoreHelpers, Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar Helpers = {\n  getDimension: function getDimension(props) {\n    var horizontal = props.horizontal,\n      brushDimension = props.brushDimension;\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds: function withinBounds(point, bounds, padding) {\n    var _CoreHelpers$mapValue = CoreHelpers.mapValues(bounds, Number),\n      x1 = _CoreHelpers$mapValue.x1,\n      x2 = _CoreHelpers$mapValue.x2,\n      y1 = _CoreHelpers$mapValue.y1,\n      y2 = _CoreHelpers$mapValue.y2;\n    var _CoreHelpers$mapValue2 = CoreHelpers.mapValues(point, Number),\n      x = _CoreHelpers$mapValue2.x,\n      y = _CoreHelpers$mapValue2.y;\n    var paddingValue = padding ? padding / 2 : 0;\n    return x + paddingValue >= Math.min(x1, x2) && x - paddingValue <= Math.max(x1, x2) && y + paddingValue >= Math.min(y1, y2) && y - paddingValue <= Math.max(y1, y2);\n  },\n  getDomainBox: function getDomainBox(props, fullDomain, selectedDomain) {\n    var brushDimension = this.getDimension(props);\n    var fullDomainObject = _defaults({}, fullDomain, props.domain);\n    var selectedDomainObject = _defaults({}, selectedDomain, fullDomainObject);\n    var fullCoords = Selection.getDomainCoordinates(props, fullDomainObject);\n    var selectedCoords = Selection.getDomainCoordinates(props, selectedDomainObject);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.min.apply(Math, _toConsumableArray(fullCoords.x)),\n      x2: brushDimension !== \"y\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.max.apply(Math, _toConsumableArray(fullCoords.x)),\n      y1: brushDimension !== \"x\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.min.apply(Math, _toConsumableArray(fullCoords.y)),\n      y2: brushDimension !== \"x\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.max.apply(Math, _toConsumableArray(fullCoords.y))\n    };\n  },\n  getHandles: function getHandles(props, domainBox) {\n    var brushDimension = this.getDimension(props);\n    var x1 = domainBox.x1,\n      x2 = domainBox.x2,\n      y1 = domainBox.y1,\n      y2 = domainBox.y2;\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    var handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles: function getActiveHandles(point, props, domainBox) {\n    var _this = this;\n    var handles = this.getHandles(props, domainBox);\n    var activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce(function (memo, opt) {\n      return handles[opt] && _this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo;\n    }, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation: function getResizeMutation(box, handles) {\n    var x1 = box.x1,\n      y1 = box.y1,\n      x2 = box.x2,\n      y2 = box.y2;\n    var mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1: x1,\n        x2: x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1: x1,\n        x2: x2\n      }\n    };\n    return handles.reduce(function (memo, current) {\n      return Object.assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain: function getMinimumDomain() {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea: function getDefaultBrushArea(targetProps, cachedDomain, evt) {\n    var domain = targetProps.domain,\n      fullDomain = targetProps.fullDomain,\n      scale = targetProps.scale,\n      horizontal = targetProps.horizontal,\n      allowResize = targetProps.allowResize;\n    var defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      var brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      var pannedBox = this.panBox(_objectSpread(_objectSpread(_objectSpread({}, targetProps), brushBox), {}, {\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }), Selection.getSVGEventCoordinates(evt, parentSVG));\n      var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return Selection.getBounds(_objectSpread(_objectSpread({}, constrainedBox), {}, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n    }\n    return domain;\n  },\n  getSelectionMutation: function getSelectionMutation(point, box, brushDimension) {\n    var x = point.x,\n      y = point.y;\n    var x1 = box.x1,\n      x2 = box.x2,\n      y1 = box.y1,\n      y2 = box.y2;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox: function panBox(props, point) {\n    var domain = props.domain,\n      startX = props.startX,\n      startY = props.startY;\n    var brushDimension = this.getDimension(props);\n    var brushDomain = _defaults({}, props.brushDomain, domain);\n    var fullDomain = _defaults({}, props.fullDomain, domain);\n    var _ref = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain),\n      x1 = _ref.x1,\n      x2 = _ref.x2,\n      y1 = _ref.y1,\n      y2 = _ref.y2;\n    var x = point.x,\n      y = point.y;\n    var delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox: function constrainBox(box, fullDomainBox) {\n    var _CoreHelpers$mapValue3 = CoreHelpers.mapValues(fullDomainBox, Number),\n      x1 = _CoreHelpers$mapValue3.x1,\n      y1 = _CoreHelpers$mapValue3.y1,\n      x2 = _CoreHelpers$mapValue3.x2,\n      y2 = _CoreHelpers$mapValue3.y2;\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  constrainPoint: function constrainPoint(point, fullDomainBox) {\n    var _CoreHelpers$mapValue4 = CoreHelpers.mapValues(fullDomainBox, Number),\n      x1 = _CoreHelpers$mapValue4.x1,\n      y1 = _CoreHelpers$mapValue4.y1,\n      x2 = _CoreHelpers$mapValue4.x2,\n      y2 = _CoreHelpers$mapValue4.y2;\n    return {\n      x: Math.min(Math.max(point.x, x1), x2),\n      y: Math.min(Math.max(point.y, y1), y2)\n    };\n  },\n  hasMoved: function hasMoved(props) {\n    var x1 = props.x1,\n      x2 = props.x2,\n      y1 = props.y1,\n      y2 = props.y2,\n      mouseMoveThreshold = props.mouseMoveThreshold;\n    var brushDimension = this.getDimension(props);\n    var xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    var yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n      case \"y\":\n        return yMoved;\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown: function onMouseDown(evt, targetProps) {\n    var _this2 = this;\n    evt.preventDefault();\n    var handleWidth = targetProps.handleWidth,\n      cachedBrushDomain = targetProps.cachedBrushDomain,\n      domain = targetProps.domain,\n      allowResize = targetProps.allowResize,\n      allowDrag = targetProps.allowDrag,\n      allowDraw = targetProps.allowDraw;\n    var brushDimension = this.getDimension(targetProps);\n    var defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    // Don't trigger events for static brushes\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n    var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt, parentSVG),\n      x = _Selection$getSVGEven.x,\n      y = _Selection$getSVGEven.y;\n    // Ignore events that occur outside of the maximum domain region\n    if (!this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n    var brushDomain = _defaults({}, targetProps.brushDomain, domain);\n    var currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    var domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    var activeHandles = allowResize && this.getActiveHandles({\n      x: x,\n      y: y\n    }, targetProps, domainBox);\n    // If the event occurs in any of the handle regions, start a resize\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _objectSpread({\n            isSelecting: true,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain: currentDomain,\n            parentSVG: parentSVG\n          }, _this2.getResizeMutation(domainBox, activeHandles));\n        }\n      }];\n    } else if (this.withinBounds({\n      x: x,\n      y: y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _objectSpread({\n            isPanning: allowDrag,\n            startX: x,\n            startY: y,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            currentDomain: currentDomain,\n            cachedBrushDomain: brushDomain,\n            parentSVG: parentSVG\n          }, domainBox);\n        }\n      }];\n    }\n    // if the event occurs outside the region, or if the whole domain is selected,\n    // start a new selection\n    return allowDraw ? [{\n      target: \"parent\",\n      mutation: function mutation() {\n        return _objectSpread({\n          isSelecting: allowResize || defaultBrushArea === \"move\",\n          domainBox: domainBox,\n          fullDomainBox: fullDomainBox,\n          parentSVG: parentSVG,\n          cachedBrushDomain: brushDomain,\n          cachedCurrentDomain: currentDomain,\n          currentDomain: _this2.getMinimumDomain()\n        }, _this2.getSelectionMutation({\n          x: x,\n          y: y\n        }, domainBox, brushDimension));\n      }\n    }] : {};\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onGlobalMouseMove: function onGlobalMouseMove(evt, targetProps) {\n    var scale = targetProps.scale,\n      isPanning = targetProps.isPanning,\n      isSelecting = targetProps.isSelecting,\n      fullDomainBox = targetProps.fullDomainBox,\n      onBrushDomainChange = targetProps.onBrushDomainChange,\n      allowResize = targetProps.allowResize,\n      allowDrag = targetProps.allowDrag,\n      horizontal = targetProps.horizontal,\n      mouseMoveThreshold = targetProps.mouseMoveThreshold,\n      parentSVG = targetProps.parentSVG;\n    var brushDimension = this.getDimension(targetProps);\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n      x = _Selection$getSVGEven2.x,\n      y = _Selection$getSVGEven2.y;\n    if (!allowResize && !allowDrag || mouseMoveThreshold > 0 && !this.hasMoved(_objectSpread(_objectSpread({}, targetProps), {}, {\n      x2: x,\n      y2: y\n    }))) {\n      return {};\n    }\n    if (allowDrag && isPanning) {\n      var startX = targetProps.startX,\n        startY = targetProps.startY;\n      var pannedBox = this.panBox(targetProps, {\n        x: x,\n        y: y\n      });\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      var currentDomain = Selection.getBounds(_objectSpread(_objectSpread({}, constrainedBox), {}, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n      var mutatedProps = _objectSpread({\n        currentDomain: currentDomain,\n        parentSVG: parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y\n      }, constrainedBox);\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return mutatedProps;\n        }\n      }];\n    } else if (allowResize && isSelecting) {\n      var _this$constrainPoint = this.constrainPoint({\n          x: brushDimension !== \"y\" ? x : targetProps.x2,\n          y: brushDimension !== \"x\" ? y : targetProps.y2\n        }, fullDomainBox),\n        x2 = _this$constrainPoint.x,\n        y2 = _this$constrainPoint.y;\n      var _currentDomain = Selection.getBounds({\n        x2: x2,\n        y2: y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale: scale,\n        horizontal: horizontal\n      });\n      var _mutatedProps = {\n        x2: x2,\n        y2: y2,\n        currentDomain: _currentDomain,\n        parentSVG: parentSVG\n      };\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(_currentDomain, _defaults({}, _mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _mutatedProps;\n        }\n      }];\n    }\n    return {};\n  },\n  // eslint-disable-next-line complexity\n  onGlobalMouseUp: function onGlobalMouseUp(evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n    // eslint-disable-line max-statements, complexity\n    var x1 = targetProps.x1,\n      y1 = targetProps.y1,\n      x2 = targetProps.x2,\n      y2 = targetProps.y2,\n      isPanning = targetProps.isPanning,\n      isSelecting = targetProps.isSelecting,\n      onBrushDomainChange = targetProps.onBrushDomainChange,\n      onBrushDomainChangeEnd = targetProps.onBrushDomainChangeEnd,\n      onBrushCleared = targetProps.onBrushCleared,\n      currentDomain = targetProps.currentDomain,\n      allowResize = targetProps.allowResize,\n      allowDrag = targetProps.allowDrag;\n    var defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    var defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    var mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    };\n\n    // if the mouse hasn't moved since a mouseDown event, select the default brush area\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      var cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      var defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (CoreHelpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (CoreHelpers.isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (CoreHelpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n    return [{\n      target: \"parent\",\n      mutation: function mutation() {\n        return mutatedProps;\n      }\n    }];\n  }\n};\nexport var BrushHelpers = _objectSpread(_objectSpread({}, Helpers), {}, {\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onGlobalMouseUp: Helpers.onGlobalMouseUp.bind(Helpers),\n  onGlobalMouseMove: _throttle(Helpers.onGlobalMouseMove.bind(Helpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n});","map":{"version":3,"names":["_defaults","_throttle","Helpers","CoreHelpers","Selection","isEqual","getDimension","props","horizontal","brushDimension","withinBounds","point","bounds","padding","_CoreHelpers$mapValue","mapValues","Number","x1","x2","y1","y2","_CoreHelpers$mapValue2","x","y","paddingValue","Math","min","max","getDomainBox","fullDomain","selectedDomain","fullDomainObject","domain","selectedDomainObject","fullCoords","getDomainCoordinates","selectedCoords","apply","_toConsumableArray","getHandles","domainBox","minX","maxX","minY","maxY","handleWidth","left","right","top","bottom","getActiveHandles","_this","handles","activeHandles","reduce","memo","opt","concat","length","getResizeMutation","box","mutations","current","Object","assign","getMinimumDomain","MAX_SAFE_INTEGER","getDefaultBrushArea","targetProps","cachedDomain","evt","scale","allowResize","defaultBrushArea","brushBox","parentSVG","getParentSVG","pannedBox","panBox","_objectSpread","brushDomain","startX","startY","getSVGEventCoordinates","fullDomainBox","constrainedBox","constrainBox","getBounds","getSelectionMutation","_ref","delta","_CoreHelpers$mapValue3","abs","constrainPoint","_CoreHelpers$mapValue4","hasMoved","mouseMoveThreshold","xMoved","yMoved","onMouseDown","_this2","preventDefault","cachedBrushDomain","allowDrag","allowDraw","_Selection$getSVGEven","currentDomain","target","mutation","isSelecting","isPanning","cachedCurrentDomain","onGlobalMouseMove","onBrushDomainChange","_Selection$getSVGEven2","mutatedProps","isFunction","_this$constrainPoint","onGlobalMouseUp","onBrushDomainChangeEnd","onBrushCleared","defaultBrushHasArea","undefined","defaultDomain","BrushHelpers","bind","leading","trailing"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/node_modules/victory-brush-container/es/brush-helpers.js"],"sourcesContent":["import _defaults from \"lodash/defaults\";\nimport _throttle from \"lodash/throttle\";\nimport { Helpers as CoreHelpers, Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nconst Helpers = {\n  getDimension(props) {\n    const {\n      horizontal,\n      brushDimension\n    } = props;\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds(point, bounds, padding) {\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = CoreHelpers.mapValues(bounds, Number);\n    const {\n      x,\n      y\n    } = CoreHelpers.mapValues(point, Number);\n    const paddingValue = padding ? padding / 2 : 0;\n    return x + paddingValue >= Math.min(x1, x2) && x - paddingValue <= Math.max(x1, x2) && y + paddingValue >= Math.min(y1, y2) && y - paddingValue <= Math.max(y1, y2);\n  },\n  getDomainBox(props, fullDomain, selectedDomain) {\n    const brushDimension = this.getDimension(props);\n    const fullDomainObject = _defaults({}, fullDomain, props.domain);\n    const selectedDomainObject = _defaults({}, selectedDomain, fullDomainObject);\n    const fullCoords = Selection.getDomainCoordinates(props, fullDomainObject);\n    const selectedCoords = Selection.getDomainCoordinates(props, selectedDomainObject);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(...selectedCoords.x) : Math.min(...fullCoords.x),\n      x2: brushDimension !== \"y\" ? Math.max(...selectedCoords.x) : Math.max(...fullCoords.x),\n      y1: brushDimension !== \"x\" ? Math.min(...selectedCoords.y) : Math.min(...fullCoords.y),\n      y2: brushDimension !== \"x\" ? Math.max(...selectedCoords.y) : Math.max(...fullCoords.y)\n    };\n  },\n  getHandles(props, domainBox) {\n    const brushDimension = this.getDimension(props);\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = domainBox;\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    const handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1,\n        y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1,\n        y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1,\n        x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1,\n        x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles(point, props, domainBox) {\n    const handles = this.getHandles(props, domainBox);\n    const activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce((memo, opt) => handles[opt] && this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation(box, handles) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = box;\n    const mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1,\n        y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1,\n        y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1,\n        x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1,\n        x2\n      }\n    };\n    return handles.reduce((memo, current) => {\n      return Object.assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain() {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea(targetProps, cachedDomain, evt) {\n    const {\n      domain,\n      fullDomain,\n      scale,\n      horizontal,\n      allowResize\n    } = targetProps;\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      const brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      const pannedBox = this.panBox({\n        ...targetProps,\n        ...brushBox,\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }, Selection.getSVGEventCoordinates(evt, parentSVG));\n      const fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      const constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return Selection.getBounds({\n        ...constrainedBox,\n        scale,\n        horizontal\n      });\n    }\n    return domain;\n  },\n  getSelectionMutation(point, box, brushDimension) {\n    const {\n      x,\n      y\n    } = point;\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = box;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox(props, point) {\n    const {\n      domain,\n      startX,\n      startY\n    } = props;\n    const brushDimension = this.getDimension(props);\n    const brushDomain = _defaults({}, props.brushDomain, domain);\n    const fullDomain = _defaults({}, props.fullDomain, domain);\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain);\n    const {\n      x,\n      y\n    } = point;\n    const delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox(box, fullDomainBox) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = CoreHelpers.mapValues(fullDomainBox, Number);\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  constrainPoint(point, fullDomainBox) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = CoreHelpers.mapValues(fullDomainBox, Number);\n    return {\n      x: Math.min(Math.max(point.x, x1), x2),\n      y: Math.min(Math.max(point.y, y1), y2)\n    };\n  },\n  hasMoved(props) {\n    const {\n      x1,\n      x2,\n      y1,\n      y2,\n      mouseMoveThreshold\n    } = props;\n    const brushDimension = this.getDimension(props);\n    const xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    const yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n      case \"y\":\n        return yMoved;\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown(evt, targetProps) {\n    evt.preventDefault();\n    const {\n      handleWidth,\n      cachedBrushDomain,\n      domain,\n      allowResize,\n      allowDrag,\n      allowDraw\n    } = targetProps;\n    const brushDimension = this.getDimension(targetProps);\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    // Don't trigger events for static brushes\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n    const fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    const {\n      x,\n      y\n    } = Selection.getSVGEventCoordinates(evt, parentSVG);\n    // Ignore events that occur outside of the maximum domain region\n    if (!this.withinBounds({\n      x,\n      y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n    const brushDomain = _defaults({}, targetProps.brushDomain, domain);\n    const currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    const domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    const activeHandles = allowResize && this.getActiveHandles({\n      x,\n      y\n    }, targetProps, domainBox);\n    // If the event occurs in any of the handle regions, start a resize\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: () => {\n          return {\n            isSelecting: true,\n            domainBox,\n            fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain,\n            parentSVG,\n            ...this.getResizeMutation(domainBox, activeHandles)\n          };\n        }\n      }];\n    } else if (this.withinBounds({\n      x,\n      y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: () => ({\n          isPanning: allowDrag,\n          startX: x,\n          startY: y,\n          domainBox,\n          fullDomainBox,\n          currentDomain,\n          cachedBrushDomain: brushDomain,\n          parentSVG,\n          ...domainBox // set x1, x2, y1, y2\n        })\n      }];\n    }\n    // if the event occurs outside the region, or if the whole domain is selected,\n    // start a new selection\n    return allowDraw ? [{\n      target: \"parent\",\n      mutation: () => ({\n        isSelecting: allowResize || defaultBrushArea === \"move\",\n        domainBox,\n        fullDomainBox,\n        parentSVG,\n        cachedBrushDomain: brushDomain,\n        cachedCurrentDomain: currentDomain,\n        currentDomain: this.getMinimumDomain(),\n        ...this.getSelectionMutation({\n          x,\n          y\n        }, domainBox, brushDimension)\n      })\n    }] : {};\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onGlobalMouseMove(evt, targetProps) {\n    const {\n      scale,\n      isPanning,\n      isSelecting,\n      fullDomainBox,\n      onBrushDomainChange,\n      allowResize,\n      allowDrag,\n      horizontal,\n      mouseMoveThreshold,\n      parentSVG\n    } = targetProps;\n    const brushDimension = this.getDimension(targetProps);\n    const {\n      x,\n      y\n    } = Selection.getSVGEventCoordinates(evt, parentSVG);\n    if (!allowResize && !allowDrag || mouseMoveThreshold > 0 && !this.hasMoved({\n      ...targetProps,\n      x2: x,\n      y2: y\n    })) {\n      return {};\n    }\n    if (allowDrag && isPanning) {\n      const {\n        startX,\n        startY\n      } = targetProps;\n      const pannedBox = this.panBox(targetProps, {\n        x,\n        y\n      });\n      const constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      const currentDomain = Selection.getBounds({\n        ...constrainedBox,\n        scale,\n        horizontal\n      });\n      const mutatedProps = {\n        currentDomain,\n        parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y,\n        ...constrainedBox\n      };\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: () => mutatedProps\n      }];\n    } else if (allowResize && isSelecting) {\n      const {\n        x: x2,\n        y: y2\n      } = this.constrainPoint({\n        x: brushDimension !== \"y\" ? x : targetProps.x2,\n        y: brushDimension !== \"x\" ? y : targetProps.y2\n      }, fullDomainBox);\n      const currentDomain = Selection.getBounds({\n        x2,\n        y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale,\n        horizontal\n      });\n      const mutatedProps = {\n        x2,\n        y2,\n        currentDomain,\n        parentSVG\n      };\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: () => mutatedProps\n      }];\n    }\n    return {};\n  },\n  // eslint-disable-next-line complexity\n  onGlobalMouseUp(evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n    // eslint-disable-line max-statements, complexity\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      isPanning,\n      isSelecting,\n      onBrushDomainChange,\n      onBrushDomainChangeEnd,\n      onBrushCleared,\n      currentDomain,\n      allowResize,\n      allowDrag\n    } = targetProps;\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    const defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    const mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    };\n\n    // if the mouse hasn't moved since a mouseDown event, select the default brush area\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      const cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      const defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (CoreHelpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (CoreHelpers.isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (CoreHelpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n    return [{\n      target: \"parent\",\n      mutation: () => mutatedProps\n    }];\n  }\n};\nexport const BrushHelpers = {\n  ...Helpers,\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onGlobalMouseUp: Helpers.onGlobalMouseUp.bind(Helpers),\n  onGlobalMouseMove: _throttle(Helpers.onGlobalMouseMove.bind(Helpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}