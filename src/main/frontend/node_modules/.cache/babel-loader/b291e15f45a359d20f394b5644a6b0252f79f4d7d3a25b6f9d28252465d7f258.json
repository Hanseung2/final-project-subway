{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Main from'../components/section/Main';import{useSelector}from'react-redux';import{getCurrentTime,getDayType}from'../data/time';import train from'../assets/img/nav/train.png';import wait from'../assets/img/nav/waiting.png';import walk from'../assets/img/nav/walk.png';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Nav=function Nav(){var startStation=useSelector(function(state){return state.startStation;});var endStation=useSelector(function(state){return state.endStation;});var _useState=useState(getCurrentTime()),_useState2=_slicedToArray(_useState,2),currentTime=_useState2[0],setCurrentTime=_useState2[1];var _useState3=useState(getDayType()),_useState4=_slicedToArray(_useState3,2),dayType=_useState4[0],setDayType=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];useEffect(function(){var timer=setInterval(function(){setCurrentTime(getCurrentTime());},1000);return function(){return clearInterval(timer);};},[]);useEffect(function(){var fetchDataFromSpring=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;url=\"http://localhost:8080/SearchRoute?start=\".concat(encodeURIComponent(startStation),\"&end=\").concat(encodeURIComponent(endStation));_context.next=4;return fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;setResults(data);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error('데이터 가져오기 실패:',_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function fetchDataFromSpring(){return _ref.apply(this,arguments);};}();if(startStation&&endStation){fetchDataFromSpring();}},[startStation,endStation]);var renderResults=function renderResults(){return results.map(function(result,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"resultsMap\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"resultsHeader\",children:[\"\\uAE38\\uCC3E\\uAE30 \\uACB0\\uACFC \",index+1]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uCD9C\\uBC1C \\uC2DC\\uAC04: \",result.cuTime,\", (\",dayType,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualRepresentation\",style:{width:'1000px',height:'30px',backgroundColor:'lightgray',margin:'20px 0'},children:renderTransferBars(result)}),/*#__PURE__*/_jsxs(\"p\",{className:\"scheduleTime\",children:[\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(\\uC2DC\\uAC04\\uD45C): \",result.finalTime]}),result.path&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uCD9C\\uBC1C\\uC9C0: \",result.path[0]]}),result.eachTypeOfLine.map(function(line,index){return/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[index+1,\"\\uBC88 \\uD658\\uC2B9: \",line,\"(\",result.eachTransferStation[index],\") - \",(Number(result.fiTime)+Number(result.eachWaitingTime[index])+Number(result.eachWalkingTime[index])+Number(result.eachTime[index])).toString(),\" \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]},index);}),/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uB3C4\\uCC29\\uC9C0: \",result.path[result.path.length-1],\"(\",result.eachTransferStation[result.eachTransferStation.length-1],\")\"]})]})]},index);});};var renderTransferBars=function renderTransferBars(result){var transferBars=[];var iconSize=20;// 이미지 크기\nvar i=0;// 환승역이 없는 경우 처리\nif(result.eachTransferStation.length===0){// 출발지에서 도착지까지 바로 이동하는 경우\ntransferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:'100%',height:'30px',backgroundColor:getLineColor(result.startLine),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:'100%',maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[Math.floor(result.totalTime[i]/60),\"\\uBD84-\",startStation,\"(\",result.startLine,\")\"]})]},\"go\".concat(i)));return transferBars;}// 그 외의 경우에는 기존 방식으로 처리합니다.\n// 각 막대의 너비 계산\nvar goBarWidth=(result.eachTime[i]!==undefined?result.eachTime[i]:result.totalTime)/result.totalTime*100;var transferBarWidth=result.eachWalkingTime[i]/result.totalTime*100;var waitingBarWidth=result.eachWaitingTime[i]/result.totalTime*100;var lastGoBarWidth=(result.eachTime[result.eachTime.length-1]!==0?result.eachTime[result.eachTime.length-1]:result.totalTime)/result.totalTime*1000;// 각 막대의 비율 계산\nvar totalBarWidth=goBarWidth+transferBarWidth+waitingBarWidth+lastGoBarWidth;var goBarRatio=goBarWidth/totalBarWidth;var transferBarRatio=transferBarWidth/totalBarWidth;var waitingBarRatio=waitingBarWidth/totalBarWidth;var lastGoBarWidthRatio=lastGoBarWidth/totalBarWidth;// 비율을 조정하여 합이 1000이 되도록 합니다.\nvar totalRatio=goBarRatio+transferBarRatio+waitingBarRatio+lastGoBarWidthRatio;var adjustedGoBarWidth=goBarRatio/totalRatio*1000;var adjustedTransferBarWidth=transferBarRatio/totalRatio*1000;var adjustedWaitingBarWidth=waitingBarRatio/totalRatio*1000;var adjustedLastGoBarWidth=lastGoBarWidthRatio/totalRatio*1000;do{transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(adjustedGoBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(i===0?result.startLine:result.eachTypeOfLine[i-1]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(goBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(i===0?result.startLine:result.eachTypeOfLine[i-1])},children:[Math.floor(result.eachTime[i]/60),\"\\uBD84-\",i===0?startStation:result.eachTypeOfLine[i-1],\"(\",i===0?result.startLine:result.eachTransferStation[i-1],\")\"]})]},\"go\".concat(i)));if(result.eachWalkingTime[i]!==undefined&&result.eachWalkingTime[i]!==null&&result.eachWalkingTime[i]!==\"\"){transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(adjustedTransferBarWidth,\"px\"),height:'30px',backgroundColor:'lightgray',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:walk,alt:\"walk\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(transferBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWalkingTime[i]/60),\"\\uBD84\"]})]},\"transfer\".concat(i)));}if(result.eachWaitingTime[i]!==undefined&&result.eachWaitingTime[i]!==null&&result.eachWaitingTime[i]!==\"\"){transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(adjustedWaitingBarWidth,\"px\"),height:'30px',backgroundColor:'red',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:wait,alt:\"wait\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(waitingBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWaitingTime[i]/60),\"\\uBD84\"]})]},\"wait\".concat(i)));}i++;}while(i<result.eachTime.length-1);if(result.eachTime.length-1>0){transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(adjustedLastGoBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(result.eachTypeOfLine[result.eachTypeOfLine.length-1]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(lastGoBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[result.eachTypeOfLine.length-1])},children:[Math.floor(result.eachTime[result.eachTime.length-1]/60),\"\\uBD84-\",result.eachTypeOfLine[result.eachTypeOfLine.length-1],\"(\",result.eachTransferStation[result.eachTransferStation.length-1],\")\"]})]},\"go\".concat(result.eachTime.length-1)));}return transferBars;};var getLineColor=function getLineColor(line){var lineColors={'1호선':'#0d3692','2호선':'#33a23d','3호선':'#fe5d10','4호선':'#00a2d1','5호선':'#8b50a4','6호선':'#c55c1d','7호선':'#54640d','8호선':'#f14c82'};return lineColors[line]||'#000';// 기본 색상은 검정색\n};// results 배열의 모든 요소에 대한 totalTime 값을 합산합니다.\nvar ratio=1000;return/*#__PURE__*/_jsxs(Main,{title:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",description:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"resultsContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"resultsHeader\",children:\"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0\"}),startStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uCD9C\\uBC1C\\uC9C0: \",startStation]}),endStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uB3C4\\uCC29\\uC9C0: \",endStation]}),!startStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),!endStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),renderResults()]});};export default Nav;","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Nav","startStation","state","endStation","_useState","_useState2","_slicedToArray","currentTime","setCurrentTime","_useState3","_useState4","dayType","setDayType","_useState5","_useState6","results","setResults","timer","setInterval","clearInterval","fetchDataFromSpring","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","wrap","_callee$","_context","prev","next","concat","encodeURIComponent","fetch","method","headers","sent","json","t0","console","error","stop","apply","arguments","renderResults","map","result","index","className","children","cuTime","style","width","height","backgroundColor","margin","renderTransferBars","finalTime","path","eachTypeOfLine","line","eachTransferStation","Number","fiTime","eachWaitingTime","eachWalkingTime","eachTime","toString","length","transferBars","iconSize","i","push","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","bottom","color","Math","floor","totalTime","goBarWidth","undefined","transferBarWidth","waitingBarWidth","lastGoBarWidth","totalBarWidth","goBarRatio","transferBarRatio","waitingBarRatio","lastGoBarWidthRatio","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","adjustedLastGoBarWidth","lineColors","ratio","title","description"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Nav.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\n\nconst Nav = () => {\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n    const [currentTime, setCurrentTime] = useState(getCurrentTime());\n    const [dayType, setDayType] = useState(getDayType());\n    const [results, setResults] = useState([]);\n\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setCurrentTime(getCurrentTime());\n        }, 1000);\n        return () => clearInterval(timer);\n    }, []);\n\n    useEffect(() => {\n        const fetchDataFromSpring = async () => {\n            try {\n                const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}`;\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                });\n                const data = await response.json();\n                setResults(data);\n            } catch (error) {\n                console.error('데이터 가져오기 실패:', error);\n            }\n        };\n        if (startStation && endStation) {\n            fetchDataFromSpring();\n        }\n    }, [startStation, endStation]);\n\n    const renderResults = () => {\n        return results.map((result, index) => (\n            <div key={index} className=\"resultsMap\">\n                <h1 className=\"resultsHeader\">길찾기 결과 {index + 1}</h1>\n                <h3>출발 시간: {result.cuTime}, ({dayType})</h3>\n                <div className=\"visualRepresentation\" style={{ width: '1000px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\n                    {renderTransferBars(result)}\n                </div>\n                <p className=\"scheduleTime\">도착 시간(시간표): {result.finalTime}</p>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">출발지: {result.path[0]}</p>\n                        {result.eachTypeOfLine.map((line, index) => (\n                            <p key={index} className=\"resultItem\">{index + 1}번 환승: {line}({result.eachTransferStation[index]}) - {(Number(result.fiTime) + Number(result.eachWaitingTime[index]) + Number(result.eachWalkingTime[index]) + Number(result.eachTime[index])).toString()} 열차 탑승</p>\n                        ))}\n                        <p className=\"resultItem\">도착지: {result.path[result.path.length - 1]}({result.eachTransferStation[result.eachTransferStation.length - 1]})</p>\n                    </>\n                )}\n            </div>\n        ));\n    };\n\n    const renderTransferBars = (result) => {\n        const transferBars = [];\n        const iconSize = 20; // 이미지 크기\n        let i = 0;\n\n        // 환승역이 없는 경우 처리\n        if (result.eachTransferStation.length === 0) {\n            // 출발지에서 도착지까지 바로 이동하는 경우\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime[i] / 60)}분-{startStation}({result.startLine})</span>\n                </div>\n            );\n            return transferBars;\n        }\n\n        // 그 외의 경우에는 기존 방식으로 처리합니다.\n        // 각 막대의 너비 계산\n        const goBarWidth = (result.eachTime[i] !== undefined ? result.eachTime[i] : result.totalTime) / result.totalTime * 100;\n        const transferBarWidth = result.eachWalkingTime[i] / result.totalTime * 100;\n        const waitingBarWidth = result.eachWaitingTime[i] / result.totalTime * 100;\n        const lastGoBarWidth = (result.eachTime[result.eachTime.length - 1] !== 0 ? result.eachTime[result.eachTime.length - 1] : result.totalTime) / result.totalTime * 1000;\n\n        // 각 막대의 비율 계산\n        const totalBarWidth = goBarWidth + transferBarWidth + waitingBarWidth + lastGoBarWidth;\n        const goBarRatio = goBarWidth / totalBarWidth;\n        const transferBarRatio = transferBarWidth / totalBarWidth;\n        const waitingBarRatio = waitingBarWidth / totalBarWidth;\n        const lastGoBarWidthRatio = lastGoBarWidth / totalBarWidth;\n\n        // 비율을 조정하여 합이 1000이 되도록 합니다.\n        const totalRatio = goBarRatio + transferBarRatio + waitingBarRatio + lastGoBarWidthRatio;\n        const adjustedGoBarWidth = goBarRatio / totalRatio * 1000;\n        const adjustedTransferBarWidth = transferBarRatio / totalRatio * 1000;\n        const adjustedWaitingBarWidth = waitingBarRatio / totalRatio * 1000;\n        const adjustedLastGoBarWidth = lastGoBarWidthRatio / totalRatio * 1000;\n        do {\n\n\n\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: `${adjustedGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(i === 0 ? result.startLine : result.eachTypeOfLine[i - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${goBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(i === 0 ? result.startLine : result.eachTypeOfLine[i - 1]) }}>{Math.floor(result.eachTime[i] / 60)}분-{(i === 0 ? startStation : result.eachTypeOfLine[i - 1])}({(i === 0 ? result.startLine : result.eachTransferStation[i - 1])})</span>\n                </div>\n            );\n            if (result.eachWalkingTime[i] !== undefined && result.eachWalkingTime[i] !== null && result.eachWalkingTime[i] !== \"\") {\n                transferBars.push(\n                    <div key={`transfer${i}`} style={{ display: 'inline-block', width: `${adjustedTransferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                        <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${transferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                        <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[i] / 60)}분</span>\n                    </div>\n                );\n            }\n\n            if (result.eachWaitingTime[i] !== undefined && result.eachWaitingTime[i] !== null && result.eachWaitingTime[i] !== \"\") {\n                transferBars.push(\n                    <div key={`wait${i}`} style={{ display: 'inline-block', width: `${adjustedWaitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                        <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${waitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                        <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[i] / 60)}분</span>\n                    </div>\n                );\n            }\n\n            i++;\n        } while (i < result.eachTime.length - 1);\n\n        if (result.eachTime.length - 1 > 0) {\n\n\n            transferBars.push(\n                <div key={`go${result.eachTime.length - 1}`} style={{ display: 'inline-block', width: `${adjustedLastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[result.eachTypeOfLine.length - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${lastGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[result.eachTypeOfLine.length - 1]) }}>{Math.floor(result.eachTime[result.eachTime.length - 1]/ 60)}분-{(result.eachTypeOfLine[result.eachTypeOfLine.length - 1])}({result.eachTransferStation[result.eachTransferStation.length - 1]})</span>\n                </div>\n            );\n        }\n        return transferBars;\n    };\n\n    const getLineColor = (line) => {\n        const lineColors = {\n            '1호선': '#0d3692',\n            '2호선': '#33a23d',\n            '3호선': '#fe5d10',\n            '4호선': '#00a2d1',\n            '5호선': '#8b50a4',\n            '6호선': '#c55c1d',\n            '7호선': '#54640d',\n            '8호선': '#f14c82',\n        };\n        return lineColors[line] || '#000'; // 기본 색상은 검정색\n    };\n\n    // results 배열의 모든 요소에 대한 totalTime 값을 합산합니다.\n    const ratio = 1000 ;\n\n\n    return (\n        <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\n            <div className=\"resultsContainer\">\n                <h1 className=\"resultsHeader\">출발지/도착지</h1>\n                {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\n                {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\n                {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\n                {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\n            </div>\n            {renderResults()}\n        </Main>\n    );\n};\n\nexport default Nav;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}