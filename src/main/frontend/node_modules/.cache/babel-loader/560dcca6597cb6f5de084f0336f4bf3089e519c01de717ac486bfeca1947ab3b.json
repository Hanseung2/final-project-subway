{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Main from'../components/section/Main';import{useSelector}from'react-redux';import{getCurrentTime,getDayType}from'../data/time';import train from'../assets/img/nav/train.png';import wait from'../assets/img/nav/waiting.png';import walk from'../assets/img/nav/walk.png';import{Link,useNavigate}from'react-router-dom';// React Router를 사용한다고 가정합니다.\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ctime=0;var Nav=function Nav(){var startStation=useSelector(function(state){return state.startStation;});var endStation=useSelector(function(state){return state.endStation;});var _useState=useState(getCurrentTime()),_useState2=_slicedToArray(_useState,2),currentTime=_useState2[0],setCurrentTime=_useState2[1];// 현재 시간 상태 변수\nvar _useState3=useState(getDayType()),_useState4=_slicedToArray(_useState3,2),dayType=_useState4[0],setDayType=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];// 로딩 상태 변수\nvar navigate=useNavigate();// useHistory 훅 사용\nvar ingtime=[0];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),results=_useState8[0],setResults=_useState8[1];useEffect(function(){var fetchDataFromSpring=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;url=\"http://localhost:8080/SearchRoute?start=\".concat(encodeURIComponent(startStation),\"&end=\").concat(encodeURIComponent(endStation));_context.next=4;return fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;setResults(data);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error('데이터 가져오기 실패:',_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function fetchDataFromSpring(){return _ref.apply(this,arguments);};}();if(startStation&&endStation){fetchDataFromSpring();}},[startStation,endStation]);// 시간 문자열을 초로 변환하는 함수\nvar getCurrentTimeInSeconds=function getCurrentTimeInSeconds(){var now=new Date();var hoursInSeconds=now.getHours()*3600;var minutesInSeconds=now.getMinutes()*60;var seconds=now.getSeconds();return hoursInSeconds+minutesInSeconds+seconds;};if(ctime===0){ctime=getCurrentTimeInSeconds();}var handleButtonClick=function handleButtonClick(){setLoading(true);setTimeout(function(){setLoading(false);navigate('/Pre');},1000);};var renderResults=function renderResults(){return results.map(function(result,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"resultsMap\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"resultsHeader\",children:[\"\\uAE38\\uCC3E\\uAE30 \\uACB0\\uACFC \",index+1]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uCD9C\\uBC1C \\uC2DC\\uAC04: \",Math.floor(ctime/(60*60)),\"\\uC2DC \",Math.floor(ctime%(60*60)/60),\"\\uBD84 \",Math.floor(ctime%60),\"\\uCD08, (\",dayType,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualRepresentation\",style:{width:'1250px',height:'30px',backgroundColor:'lightgray',margin:'20px 0'},children:renderTransferBars(result)}),/*#__PURE__*/_jsxs(\"p\",{className:\"scheduleTime\",children:[\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(\\uC2DC\\uAC04\\uD45C): \",Math.floor((ctime+result.totalTime)/(60*60)),\"\\uC2DC \",Math.floor((ctime+result.totalTime)%(60*60)/60),\"\\uBD84 \",Math.floor((ctime+result.totalTime)%60),\"\\uCD08\"]}),result.path&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uAC78\\uB9AC\\uB294\\uC2DC\\uAC04: \",Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08\"]}),result.eachTypeOfLine.map(function(line,index){return/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[index+1,\"\\uBC88 \\uD658\\uC2B9: \",line,\"(\",result.eachTransferStation[index],\") - \",Math.floor((ctime+ingtime[index])/(60*60)),\"\\uC2DC \",Math.floor((ctime+ingtime[index])%(60*60)/60),\"\\uBD84 \",Math.floor((ctime+ingtime[index])%60),\"\\uCD08 \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]},index);})]})]},index);});};var renderTransferBars=function renderTransferBars(result){var transferBars=[];var iconSize=20;// 이미지 크기\nvar i=0;// 환승역이 없는 경우 처리\nif(result.eachTransferStation.length===0){// 출발지에서 도착지까지 바로 이동하는 경우\ntransferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:'100%',height:'30px',backgroundColor:getLineColor(result.startLine),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:'100%',maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[startStation,\"(\",result.startLine,\")\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08\"]})]},\"go\".concat(i)));return transferBars;}// 각 막대의 비율 계산\nvar totalBarWidth=result.totalTime;var accumulatedWidth=0;var tt=0;// tt 변수 초기화\nresult.eachTypeOfLine.forEach(function(line,index){var goBarWidth=result.eachTime[index]/totalBarWidth*1250;var transferBarWidth=result.eachWalkingTime[index]/totalBarWidth*1250;var waitingBarWidth=result.eachWaitingTime[index]/totalBarWidth*1250;ingtime[index]=0;// 각 막대의 총합이 1250이 되도록 비율 조정\nvar totalRatio=goBarWidth+transferBarWidth+waitingBarWidth;var adjustedGoBarWidth=goBarWidth/totalRatio*1250;var adjustedTransferBarWidth=transferBarWidth/totalRatio*1250;var adjustedWaitingBarWidth=waitingBarWidth/totalRatio*1250;transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(goBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedGoBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[Math.floor(result.eachTime[index]/60),\"\\uBD84 \",Math.floor(result.eachTime[index]%60),\"\\uCD08\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[index===0?startStation:result.eachTransferStation[index-1],\"(\",index===0?result.startLine:result.eachTypeOfLine[index-1],\")\"]})]},\"go\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(transferBarWidth,\"px\"),height:'30px',backgroundColor:'lightgray',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:walk,alt:\"walk\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedTransferBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWalkingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWalkingTime[index]%60),\"\\uCD08\"]})]},\"transfer\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(waitingBarWidth,\"px\"),height:'30px',backgroundColor:'red',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:wait,alt:\"wait\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedWaitingBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWaitingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWaitingTime[index]%60),\"\\uCD08 \"]})]},\"wait\".concat(index)));result.eachTime.forEach(function(_,index){if(index===0){ingtime[index]=result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];}else{ingtime[index]=ingtime[index-1]+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];}});accumulatedWidth+=adjustedGoBarWidth+adjustedTransferBarWidth+adjustedWaitingBarWidth;tt=tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];});// 마지막 열차 막대 추가\nvar lastIndex=result.eachTypeOfLine.length-1;var lastGoBarWidth=(result.eachTime[lastIndex]!==0?result.totalTime-tt:result.totalTime)/totalBarWidth*1250;var lastTotalWidth=lastGoBarWidth;var lastAdjustedGoBarWidth=lastGoBarWidth/lastTotalWidth*(1250-accumulatedWidth);transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(lastGoBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(result.eachTypeOfLine[lastIndex]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"50px\",maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[Math.floor((result.totalTime-tt)/60),\"\\uBD84 \",Math.floor(result.eachTime[lastIndex]%60),\"\\uCD08\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[result.eachTransferStation[result.eachTransferStation.length-1],\"(\",result.eachTypeOfLine[result.eachTypeOfLine.length-1],\")\"]})]},\"go\".concat(lastIndex)));return transferBars;};var getLineColor=function getLineColor(line){var lineColors={'1호선':'#0d3692','2호선':'#33a23d','3호선':'#fe5d10','4호선':'#00a2d1','5호선':'#8b50a4','6호선':'#c55c1d','7호선':'#54640d','8호선':'#f14c82'};return lineColors[line]||'#000';// 기본 색상은 검정색\n};return/*#__PURE__*/_jsxs(Main,{title:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",description:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"resultsContainer\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"resultsHeader\",children:[\"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0 \",/*#__PURE__*/_jsx(\"p\",{className:\"pre-but\",children:loading?/*#__PURE__*/_jsx(\"div\",{children:\"\\uB85C\\uB529 \\uC911...\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleButtonClick,style:{backgroundColor:'#4CAF50',color:'white',border:'none',borderRadius:'8px',cursor:'pointer'},children:\"AI Predict\"})})]}),startStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uCD9C\\uBC1C\\uC9C0: \",startStation]}),endStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uB3C4\\uCC29\\uC9C0: \",endStation]}),!startStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),!endStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),renderResults()]});};export default Nav;","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","Link","useNavigate","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","ctime","Nav","startStation","state","endStation","_useState","_useState2","_slicedToArray","currentTime","setCurrentTime","_useState3","_useState4","dayType","setDayType","_useState5","_useState6","loading","setLoading","navigate","ingtime","_useState7","_useState8","results","setResults","fetchDataFromSpring","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","wrap","_callee$","_context","prev","next","concat","encodeURIComponent","fetch","method","headers","sent","json","t0","console","error","stop","apply","arguments","getCurrentTimeInSeconds","now","Date","hoursInSeconds","getHours","minutesInSeconds","getMinutes","seconds","getSeconds","handleButtonClick","setTimeout","renderResults","map","result","index","className","children","Math","floor","style","width","height","backgroundColor","margin","renderTransferBars","totalTime","path","eachTypeOfLine","line","eachTransferStation","transferBars","iconSize","i","length","push","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","color","bottom","totalBarWidth","accumulatedWidth","tt","forEach","goBarWidth","eachTime","transferBarWidth","eachWalkingTime","waitingBarWidth","eachWaitingTime","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","_","lastIndex","lastGoBarWidth","lastTotalWidth","lastAdjustedGoBarWidth","lineColors","title","description","onClick","border","borderRadius","cursor"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Nav.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nexport let ctime = 0;\n\nconst Nav = () => {\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n    const [currentTime, setCurrentTime] = useState(getCurrentTime()); // 현재 시간 상태 변수\n    const [dayType, setDayType] = useState(getDayType());\n    const [loading, setLoading] = useState(false); // 로딩 상태 변수\n    const navigate  = useNavigate(); // useHistory 훅 사용\n    let ingtime=[0];\n    const [results, setResults] = useState([]);\n\n\n    useEffect(() => {\n        const fetchDataFromSpring = async () => {\n            try {\n                const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}`;\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                });\n                const data = await response.json();\n                setResults(data);\n            } catch (error) {\n                console.error('데이터 가져오기 실패:', error);\n            }\n        };\n        if (startStation && endStation) {\n            fetchDataFromSpring();\n        }\n    }, [startStation, endStation]);\n    \n\n    \n\n    // 시간 문자열을 초로 변환하는 함수\n    const getCurrentTimeInSeconds = () => {\n        const now = new Date();\n        const hoursInSeconds = now.getHours() * 3600;\n        const minutesInSeconds = now.getMinutes() * 60;\n        const seconds = now.getSeconds();\n        return hoursInSeconds + minutesInSeconds + seconds;\n    };\n    \n    if (ctime === 0) {\n        ctime = getCurrentTimeInSeconds();\n    }\n\n    const handleButtonClick = () => {\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            navigate('/Pre');\n        }, 1000);\n    };\n    \n    \n\n    const renderResults = () => {\n        return results.map((result, index) => (\n            \n            <div key={index} className=\"resultsMap\">\n                <h1 className=\"resultsHeader\">길찾기 결과 {index + 1}</h1>\n                <h3>출발 시간: {Math.floor((ctime) / (60*60))}시 {Math.floor((ctime) % (60*60)/60)}분 {Math.floor((ctime)% 60)}초, ({dayType})</h3>\n                <div className=\"visualRepresentation\" style={{ width: '1250px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\n                    {renderTransferBars(result)}\n                </div>\n                <p className=\"scheduleTime\">도착 시간(시간표): {Math.floor((ctime+result.totalTime) / (60*60))}시 {Math.floor((ctime+result.totalTime) % (60*60)/60)}분 {Math.floor((ctime+result.totalTime)% 60)}초</p>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">걸리는시간: {Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</p>\n                        {result.eachTypeOfLine.map((line, index) => (\n                            <p key={index} className=\"resultItem\">{index + 1}번 환승: {line}({result.eachTransferStation[index]}) - {Math.floor((ctime+ingtime[index]) / (60*60))}시 {Math.floor((ctime+ingtime[index]) % (60*60)/60)}분 {Math.floor((ctime+ingtime[index])% 60)}초 열차 탑승</p>\n                        ))}\n                    </>\n                )}\n            </div>\n        ));\n    };\n\n    const renderTransferBars = (result) => {\n        const transferBars = [];\n        const iconSize = 20; // 이미지 크기\n        let i = 0;\n    \n        // 환승역이 없는 경우 처리\n        if (result.eachTransferStation.length === 0) {\n            // 출발지에서 도착지까지 바로 이동하는 경우\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{startStation}({result.startLine})</span>\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</span>\n                </div>\n            );\n            return transferBars;\n        }\n    \n        // 각 막대의 비율 계산\n    const totalBarWidth = result.totalTime;\n    let accumulatedWidth = 0;\n    let tt = 0; // tt 변수 초기화\n    \n\n    result.eachTypeOfLine.forEach((line, index) => {\n        const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n        const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n        const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n        ingtime[index]=0;\n\n        // 각 막대의 총합이 1250이 되도록 비율 조정\n        const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n        const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n        const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n        const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n            \n    \n            transferBars.push(\n                <div key={`go${index}`} style={{ display: 'inline-block', width: `${goBarWidth}px`, height: '30px', backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{Math.floor(result.eachTime[index] / 60)}분 {Math.floor(result.eachTime[index] % 60)}초</span>\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{(index === 0 ? startStation : result.eachTransferStation[index - 1])}({(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])})</span>\n                </div>\n            );\n    \n            transferBars.push(\n                <div key={`transfer${index}`} style={{ display: 'inline-block', width: `${transferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedTransferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[index] / 60)}분 {Math.floor(result.eachWalkingTime[index] % 60)}초</span>\n                </div>\n            );\n    \n            transferBars.push(\n                <div key={`wait${index}`} style={{ display: 'inline-block', width: `${waitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedWaitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[index] / 60)}분 {Math.floor(result.eachWaitingTime[index] % 60)}초 </span>\n                </div>\n            );\n            result.eachTime.forEach((_, index) => {\n                if (index === 0) {\n                    ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                } else {\n                    ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                }\n            });\n\n            accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n            tt = tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];\n        });\n    \n        // 마지막 열차 막대 추가\n        const lastIndex = result.eachTypeOfLine.length - 1; \n        const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt: result.totalTime) / totalBarWidth * 1250;\n        const lastTotalWidth = lastGoBarWidth;\n\n        const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n        transferBars.push(\n            <div key={`go${lastIndex}`} style={{ display: 'inline-block', width: `${lastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `50px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{Math.floor((result.totalTime - tt)/ 60)}분 {Math.floor(result.eachTime[lastIndex] % 60)}초</span>\n                <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{result.eachTransferStation[result.eachTransferStation.length - 1]}({result.eachTypeOfLine[result.eachTypeOfLine.length - 1]})</span>\n                </div>\n        );\n        return transferBars;\n    };\n        const getLineColor = (line) => {\n            const lineColors = {\n                '1호선': '#0d3692',\n                '2호선': '#33a23d',\n                '3호선': '#fe5d10',\n                '4호선': '#00a2d1',\n                '5호선': '#8b50a4',\n                '6호선': '#c55c1d',\n                '7호선': '#54640d',\n                '8호선': '#f14c82',\n            };\n            return lineColors[line] || '#000'; // 기본 색상은 검정색\n        };\n\n        \n\n\n        return (\n            <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\n                \n                <div className=\"resultsContainer\">\n                    <h1 className=\"resultsHeader\">출발지/도착지 <p className=\"pre-but\">\n                {loading ? (\n                    <div>로딩 중...</div>\n                ) : (\n                    <button onClick={handleButtonClick} style={{ backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '8px', cursor: 'pointer' }}>AI Predict</button>\n                )}\n            </p></h1> \n                    {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\n                    {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\n                    {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\n                    {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\n                </div>\n                \n                {renderResults()}\n            </Main>\n        );\n        };\n\nexport default Nav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}