{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from'react';import{useDispatch,useSelector}from'react-redux';import*as d3 from'd3';import subwayData from'../data/route.json';import Main from'../components/section/Main';import mark from'../assets/img/icon/환승역_마크.png';import{IoSearch}from\"react-icons/io5\";import{setStartStation,setEndStation}from'../data/actions';import Right from'../components/section/Right';// 추가\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Routemap=function Routemap(){var ref=useRef();var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSearching=_useState4[0],setIsSearching=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),departureStation=_useState6[0],setDepartureStation=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),arrivalStation=_useState8[0],setArrivalStation=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isRightVisible=_useState10[0],setIsRightVisible=_useState10[1];// 추가\nvar _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),stationName=_useState12[0],setStationName=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),suggestions=_useState14[0],setSuggestions=_useState14[1];// Define suggestions state\nvar _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),searchedStationX=_useState16[0],setSearchedStationX=_useState16[1];var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),searchedStationY=_useState18[0],setSearchedStationY=_useState18[1];// 제안 항목 클릭 처리 함수\nvar handleSuggestionItemClick=function handleSuggestionItemClick(suggestion){// '-' 포함 여부 확인하고 이후 문자열 제거\nvar sanitizedSuggestion=suggestion.includes('-')?suggestion.split('-')[0].trim():suggestion;setSearchTerm(sanitizedSuggestion);// 정제된 제안을 검색어로 설정\nsetSuggestions([]);// 제안 목록 초기화\n};// Function to handle search term change\nvar handleSearchTermChange=function handleSearchTermChange(e){var value=e.target.value;setSearchTerm(value);// Update search term state\n// Filter subway stations based on the search term\nvar filteredStations=subwayData.filter(function(station){return station.name.includes(value);}).slice(0,3);// Slice the array to get only the first 3 elements\nsetSuggestions(filteredStations.map(function(station){return\"\".concat(station.name,\" - \").concat(station.line);}));};var toggleRightVisibility=function toggleRightVisibility(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setIsRightVisible(!isRightVisible);setStationName(name);};useEffect(function(){var svg=d3.select(ref.current).on(\"click\",function(){d3.select(\".tooltip\").remove();},true).attr('width',1500).attr('height',1800);svg.selectAll(\"*\").remove();var svgContainer=svg.append(\"g\").attr(\"id\",\"svg-container\");// 줌 기능 추가\nvar zoom=d3.zoom().scaleExtent([0.5,5])// 줌 범위 설정\n.on('zoom',function(event){svgContainer.attr('transform',event.transform);});svg.call(zoom);// 스케일 설정\nvar xScale=d3.scaleLinear().domain(d3.extent(subwayData,function(d){return parseFloat(d.x);})).range([0,500]);var yScale=d3.scaleLinear().domain(d3.extent(subwayData,function(d){return parseFloat(d.y);})).range([500,0]);// 노선별 색상 설정\nvar lineColor=function lineColor(line){if(line===\"1호선\")return\"#0D3692\";if(line===\"1호선1\")return\"#0D3692\";if(line===\"2호선\")return\"#33A23D\";if(line===\"2호선1\")return\"#33A23D\";if(line===\"2호선2\")return\"#33A23D\";if(line===\"3호선\")return\"#FE5B10\";if(line===\"4호선\")return\"#00A2D1\";if(line===\"5호선\")return\"#8B50A4\";if(line===\"5호선1\")return\"#8B50A4\";if(line===\"6호선\")return\"#C55C1D\";if(line===\"6호선1\")return\"#C55C1D\";if(line===\"7호선\")return\"#54640D\";if(line===\"8호선\")return\"#F14C82\";if(line===\"9호선\")return\"#AA9872\";if(line===\"수인분당선\")return\"#FFEB2A\";if(line===\"경의중앙선\")return\"#72C7A6\";if(line===\"경의중앙선1\")return\"#72C7A6\";if(line===\"경춘선\")return\"#2ABFD0\";if(line===\"공항철도1호선\")return\"#0065B3\";if(line===\"신림선\")return\"#6789CA\";if(line===\"우이신설선\")return\"#B7C452\";if(line===\"김포골드라인\")return\"#AD8605\";return\"black\";// 기본 색상\n};// 데이터를 라인별로 그룹화\nvar groupedData=d3.group(subwayData,function(d){return d.line;});// 각 그룹(라인)을 순회하고 선과 원을 그립니다\nvar _iterator=_createForOfIteratorHelper(groupedData),_step;try{var _loop=function _loop(){var _step$value=_slicedToArray(_step.value,2),line=_step$value[0],lineData=_step$value[1];var lineGenerator=d3.line().x(function(d){return xScale(parseFloat(d.x))*4;}).y(function(d){return yScale(parseFloat(d.y))*3.7-200;}).curve(d3.curveLinear);svgContainer.append(\"path\").datum(lineData).attr(\"fill\",\"none\").attr(\"stroke\",lineColor(line)).attr(\"stroke-width\",7).attr(\"d\",lineGenerator);// 각 라인에 대한 원(역) 추가\nsvgContainer.selectAll(\".station-\".concat(line))// 라인별로 클래스를 구분하여 선택\n.data(lineData).enter().append(\"circle\").attr(\"class\",\"station station-\".concat(line))// 라인별 클래스 추가\n.attr(\"cx\",function(d){return xScale(parseFloat(d.x))*4;})// x 좌표에 3을 곱하여 3배로 확장\n.attr(\"cy\",function(d){return yScale(parseFloat(d.y))*3.7-200;})// y 좌표에 3을 곱하여 3배로 확장\n.attr(\"r\",10).attr(\"fill\",function(d){return lineColor(line);})// 동그라미의 색상을 라인의 색상에 따라 설정\n.attr(\"stroke\",lineColor(line)).attr(\"stroke-width\",1).on(\"click\",function(event,d){event.stopPropagation();// 이벤트 버블링 방지\nvar _d3$pointer3=d3.pointer(event,svg.node()),_d3$pointer4=_slicedToArray(_d3$pointer3,2),clickX=_d3$pointer4[0],clickY=_d3$pointer4[1];showTooltip(d,clickX,clickY);});};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}// 중복된 역을 찾아 환승 역 이미지를 추가합니다.\n}catch(err){_iterator.e(err);}finally{_iterator.f();}var transferStationsData=subwayData.filter(function(d,i){return subwayData.findIndex(function(e){return e.name===d.name&&e.line[0]!==d.line[0];})!==-1;});// 환승역 이미지를 추가합니다.\nvar transferStations=svgContainer.selectAll(\".transfer-station\").data(transferStationsData).enter().append(\"image\").attr(\"class\",\"transfer-station\").attr(\"xlink:href\",mark)// 환승역 이미지 파일 경로로 수정해주세요\n.attr(\"width\",20).attr(\"height\",20).attr(\"x\",function(d){return xScale(parseFloat(d.x))*4-10;})// 이미지 중심을 원점으로 설정하기 위해 가로폭의 절반만큼 왼쪽으로 이동\n.attr(\"y\",function(d){return yScale(parseFloat(d.y))*3.7-200-10;});// 이미지 중심을 원점으로 설정하기 위해 세로폭의 절반만큼 위쪽으로 이동\n// 이미지 위에 툴팁을 표시할 수 있도록 설정합니다.\ntransferStations.on(\"click\",function(event,d){var _d3$pointer=d3.pointer(event,svg.node()),_d3$pointer2=_slicedToArray(_d3$pointer,2),clickX=_d3$pointer2[0],clickY=_d3$pointer2[1];showTooltip(d,clickX,clickY);// 다른 곳을 클릭했을 때 툴팁을 제거합니다.\nd3.select(\"body\").on(\"click.tooltip\",function(){d3.select(\".tooltip\").remove();d3.select(\"body\").on(\"click.tooltip\",null);// 이벤트 핸들러를 제거하여 메모리 누수를 방지합니다.\n});});// 각 역 이름 추가\nsvgContainer.selectAll(\".station-name\").data(subwayData).enter().append(\"text\").attr(\"class\",\"station-name\").attr(\"x\",function(d){return xScale(parseFloat(d.x))*4;})// 역 이름에도 2를 곱하여 2배로 확장\n.attr(\"y\",function(d){return yScale(parseFloat(d.y))*3.7-200+30;})// 역 이름에도 2를 곱하여 2배로 확장\n.attr(\"text-anchor\",\"middle\").attr(\"font-size\",\"18px\").attr(\"fill\",\"black\").attr(\"font-weight\",\"bold\")// 굵은 텍스트 설정\n.text(function(d){return d.name;});// 말풍선 표시 함수\nvar showTooltip=function showTooltip(data,x,y){d3.select(\".tooltip\").remove();// 기존 툴팁 제거\nvar tooltip=svg.append(\"g\").attr(\"class\",\"tooltip\").attr(\"transform\",\"translate(\".concat(x,\", \").concat(y,\")\"));tooltip.append(\"rect\").attr(\"width\",600).attr(\"height\",200)// Increased height to accommodate the new button\n.attr(\"x\",-140).attr(\"y\",0).attr(\"fill\",\"white\").attr(\"stroke\",\"black\");tooltip.append(\"text\").attr(\"x\",150).attr(\"y\",60).attr(\"font-size\",\"30px\")// 텍스트 크기 증가\n.attr(\"text-anchor\",\"middle\").text(data.name);// 버튼 데이터 배열\nvar buttons=[{text:'출발',x:-70,y:120,color:'#90ee90'},// Green color for 출발 button\n{text:'도착',x:60,y:120,color:'#f0f0f0'},// Gray color for 도착 button\n{text:'실시간 도착정보',x:190,y:120,color:'#ff6347',width:280,newx:285}// Red color for 실시간 도착정보 button\n];// 버튼 생성\nbuttons.forEach(function(button){// 버튼 배경\ntooltip.append(\"rect\").attr(\"x\",button.x-45).attr(\"y\",button.y-30).attr(\"width\",button.width||100).attr(\"height\",60).attr(\"fill\",button.color).attr(\"rx\",5)// 둥근 모서리\n.style(\"cursor\",\"pointer\").on(\"click\",function(){if(button.text===\"닫기\"){tooltip.remove();}else{if(button.text===\"출발\"){setDepartureStation(data.name);dispatch(setStartStation(data.name));// Redux store 업데이트\n}else if(button.text===\"도착\"){setArrivalStation(data.name);dispatch(setEndStation(data.name));// Redux store 업데이트\n}else if(button.text===\"실시간 도착정보\"){toggleRightVisibility(data.name);}}});// 버튼 텍스트\ntooltip.append(\"text\").attr(\"x\",button.newx||button.x).attr(\"y\",button.y).attr(\"text-anchor\",\"middle\").attr(\"alignment-baseline\",\"middle\").attr(\"font-size\",\"18px\")// 텍스트 크기 증가\n.text(button.text).style(\"cursor\",\"pointer\").on(\"click\",function(){if(button.text===\"닫기\"){tooltip.remove();}else{}});});};// 빨간색 원을 저장할 변수\nvar highlightedCircle;function removeHighlightedCircle(){if(highlightedCircle){highlightedCircle.remove();highlightedCircle=null;}}// 검색어 처리 로직\nif(isSearching&&searchTerm.trim()!==''){var searchedStation=subwayData.find(function(station){return station.name.includes(searchTerm.trim());});if(searchedStation){// 검색된 역의 위치에 말풍선 표시\nvar searchedX=xScale(parseFloat(searchedStation.x))*4+100,searchedY=yScale(parseFloat(searchedStation.y))*3.7-200;setSearchedStationX(searchedX);setSearchedStationY(searchedY);showTooltip(searchedStation,searchedX,searchedY);svg.transition().duration(750).call(zoom.transform,d3.zoomIdentity.translate(750/2-searchedX,500/2-searchedY).scale(2));// 이전에 강조된 원이 있으면 제거\nremoveHighlightedCircle();// 검색된 역의 위치에 빨간색 원 추가\nsvg.append(\"circle\").attr(\"cx\",searchedX+175).attr(\"cy\",searchedY+250).attr(\"r\",28)// 반지름 크기 조절\n.attr(\"fill\",\"red\")// 빨간색으로 채우기\n.attr(\"stroke\",\"black\").attr(\"stroke-width\",1).on(\"click\",function(event,d){event.stopPropagation();// 이벤트 버블링 방지\nshowTooltip(searchedStation,searchedX,searchedY);});}}},[isSearching,searchTerm,dispatch]);var handleSearch=function handleSearch(e){e.preventDefault();setIsSearching(true);};return/*#__PURE__*/_jsxs(Main,{title:\"\\uC9C0\\uD558\\uCCA0 \\uB178\\uC120\\uB3C4\",description:\"\\uC9C0\\uD558\\uCCA0 \\uB178\\uC120\\uB3C4 \\uD398\\uC774\\uC9C0\",departureStation:departureStation,arrivalStation:arrivalStation,children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-form\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC9C0\\uD558\\uCCA0\\uC5ED \\uAC80\\uC0C9\",value:searchTerm,onChange:handleSearchTermChange/*{(e) => setSearchTerm(e.target.value)}*/}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",children:[\" \",/*#__PURE__*/_jsx(IoSearch,{size:20}),\" \"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"notice\",children:\"[2024-06-13] 4\\uD638\\uC120 \\uD558\\uD589\\uC120, \\uC0C1\\uD589\\uC120 10\\uBD84 \\uC9C0\\uC5F0\"}),suggestions.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions\",children:suggestions.map(function(suggestion,index){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return handleSuggestionItemClick(suggestion);},children:suggestion},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{id:\"picture\",style:{width:'100%',height:'calc(100vh - 60px)',overflow:'auto',// 스크롤 추가\nposition:'relative'},children:/*#__PURE__*/_jsx(\"div\",{class:\"rectangle\",children:/*#__PURE__*/_jsx(\"svg\",{ref:ref,viewBox:\"0 -300 1500 1800\",style:{width:'100%',height:'100%',position:'absolute',top:0,left:0}})})}),isRightVisible&&/*#__PURE__*/_jsx(Right,{isVisible:isRightVisible,toggleRightVisibility:toggleRightVisibility,stationName:stationName}),\" \"]});};export default Routemap;","map":{"version":3,"names":["React","useEffect","useRef","useState","useDispatch","useSelector","d3","subwayData","Main","mark","IoSearch","setStartStation","setEndStation","Right","jsx","_jsx","jsxs","_jsxs","Routemap","ref","dispatch","_useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","isSearching","setIsSearching","_useState5","_useState6","departureStation","setDepartureStation","_useState7","_useState8","arrivalStation","setArrivalStation","_useState9","_useState10","isRightVisible","setIsRightVisible","_useState11","_useState12","stationName","setStationName","_useState13","_useState14","suggestions","setSuggestions","_useState15","_useState16","searchedStationX","setSearchedStationX","_useState17","_useState18","searchedStationY","setSearchedStationY","handleSuggestionItemClick","suggestion","sanitizedSuggestion","includes","split","trim","handleSearchTermChange","e","value","target","filteredStations","filter","station","name","slice","map","concat","line","toggleRightVisibility","arguments","length","undefined","svg","select","current","on","remove","attr","selectAll","svgContainer","append","zoom","scaleExtent","event","transform","call","xScale","scaleLinear","domain","extent","d","parseFloat","x","range","yScale","y","lineColor","groupedData","group","_iterator","_createForOfIteratorHelper","_step","_loop","_step$value","lineData","lineGenerator","curve","curveLinear","datum","data","enter","stopPropagation","_d3$pointer3","pointer","node","_d3$pointer4","clickX","clickY","showTooltip","s","n","done","err","f","transferStationsData","i","findIndex","transferStations","_d3$pointer","_d3$pointer2","text","tooltip","buttons","color","width","newx","forEach","button","style","highlightedCircle","removeHighlightedCircle","searchedStation","find","searchedX","searchedY","transition","duration","zoomIdentity","translate","scale","handleSearch","preventDefault","title","description","children","className","onSubmit","type","placeholder","onChange","size","index","onClick","id","height","overflow","position","class","viewBox","top","left","isVisible"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Routemap.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as d3 from 'd3';\nimport subwayData from '../data/route.json';\nimport Main from '../components/section/Main';\nimport mark from '../assets/img/icon/환승역_마크.png';\nimport { IoSearch } from \"react-icons/io5\";\nimport { setStartStation, setEndStation } from '../data/actions';\nimport Right from '../components/section/Right'; // 추가\n\n\nconst Routemap = () => {\n    const ref = useRef();\n    const dispatch = useDispatch();\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isSearching, setIsSearching] = useState(false);\n    const [departureStation, setDepartureStation] = useState(null);\n    const [arrivalStation, setArrivalStation] = useState(null);\n    const [isRightVisible, setIsRightVisible] = useState(false); // 추가\n    const [stationName, setStationName] = useState(null);\n    const [suggestions, setSuggestions] = useState([]); // Define suggestions state\n    const [searchedStationX, setSearchedStationX] = useState(null);\n    const [searchedStationY, setSearchedStationY] = useState(null);\n    // 제안 항목 클릭 처리 함수\n    const handleSuggestionItemClick = (suggestion) => {\n        // '-' 포함 여부 확인하고 이후 문자열 제거\n        const sanitizedSuggestion = suggestion.includes('-') ? suggestion.split('-')[0].trim() : suggestion;\n        setSearchTerm(sanitizedSuggestion); // 정제된 제안을 검색어로 설정\n        setSuggestions([]); // 제안 목록 초기화\n    };\n\n    // Function to handle search term change\n    const handleSearchTermChange = (e) => {\n        const value = e.target.value;\n        setSearchTerm(value); // Update search term state\n\n        // Filter subway stations based on the search term\n        const filteredStations = subwayData.filter(station => station.name.includes(value)).slice(0, 3); // Slice the array to get only the first 3 elements\n        setSuggestions(filteredStations.map(station => `${station.name} - ${station.line}`));\n    };\n\n    const toggleRightVisibility = (name = null) => {\n        setIsRightVisible(!isRightVisible);\n        setStationName(name);\n    };\n\n    useEffect(() => {\n        const svg = d3.select(ref.current)\n            .on(\"click\", () => {\n                d3.select(\".tooltip\").remove();\n            }, true)\n            .attr('width', 1500)\n            .attr('height', 1800);\n        svg.selectAll(\"*\").remove();\n\n        const svgContainer = svg.append(\"g\")\n            .attr(\"id\", \"svg-container\");\n\n        // 줌 기능 추가\n        const zoom = d3.zoom()\n            .scaleExtent([0.5, 5]) // 줌 범위 설정\n            .on('zoom', (event) => {\n                svgContainer.attr('transform', event.transform);\n            });\n\n        svg.call(zoom);\n\n        // 스케일 설정\n        const xScale = d3.scaleLinear()\n            .domain(d3.extent(subwayData, d => parseFloat(d.x)))\n            .range([0, 500]);\n\n        const yScale = d3.scaleLinear()\n            .domain(d3.extent(subwayData, d => parseFloat(d.y)))\n            .range([500, 0]);\n\n        // 노선별 색상 설정\n        const lineColor = (line) => {\n            if (line === \"1호선\") return \"#0D3692\";\n            if (line === \"1호선1\") return \"#0D3692\";\n            if (line === \"2호선\") return \"#33A23D\";\n            if (line === \"2호선1\") return \"#33A23D\";\n            if (line === \"2호선2\") return \"#33A23D\";\n            if (line === \"3호선\") return \"#FE5B10\";\n            if (line === \"4호선\") return \"#00A2D1\";\n            if (line === \"5호선\") return \"#8B50A4\";\n            if (line === \"5호선1\") return \"#8B50A4\";\n            if (line === \"6호선\") return \"#C55C1D\";\n            if (line === \"6호선1\") return \"#C55C1D\";\n            if (line === \"7호선\") return \"#54640D\";\n            if (line === \"8호선\") return \"#F14C82\";\n            if (line === \"9호선\") return \"#AA9872\";\n            if (line === \"수인분당선\") return \"#FFEB2A\";\n            if (line === \"경의중앙선\") return \"#72C7A6\";\n            if (line === \"경의중앙선1\") return \"#72C7A6\";\n            if (line === \"경춘선\") return \"#2ABFD0\";\n            if (line === \"공항철도1호선\") return \"#0065B3\";\n            if (line === \"신림선\") return \"#6789CA\";\n            if (line === \"우이신설선\") return \"#B7C452\";\n            if (line === \"김포골드라인\") return \"#AD8605\";\n            return \"black\"; // 기본 색상\n        };\n\n        // 데이터를 라인별로 그룹화\n        const groupedData = d3.group(subwayData, d => d.line);\n\n        // 각 그룹(라인)을 순회하고 선과 원을 그립니다\n        for (const [line, lineData] of groupedData) {\n            const lineGenerator = d3.line()\n                .x(d => xScale(parseFloat(d.x)) * 4)\n                .y(d => yScale(parseFloat(d.y)) * 3.7 - 200)\n                .curve(d3.curveLinear);\n\n            svgContainer.append(\"path\")\n                .datum(lineData)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", lineColor(line))\n                .attr(\"stroke-width\", 7)\n                .attr(\"d\", lineGenerator);\n\n            // 각 라인에 대한 원(역) 추가\n            svgContainer.selectAll(`.station-${line}`) // 라인별로 클래스를 구분하여 선택\n                .data(lineData)\n                .enter()\n                .append(\"circle\")\n                .attr(\"class\", `station station-${line}`) // 라인별 클래스 추가\n                .attr(\"cx\", d => xScale(parseFloat(d.x)) * 4) // x 좌표에 3을 곱하여 3배로 확장\n                .attr(\"cy\", d => yScale(parseFloat(d.y)) * 3.7 - 200) // y 좌표에 3을 곱하여 3배로 확장\n                .attr(\"r\", 10)\n                .attr(\"fill\", d => lineColor(line)) // 동그라미의 색상을 라인의 색상에 따라 설정\n                .attr(\"stroke\", lineColor(line))\n                .attr(\"stroke-width\", 1)\n                .on(\"click\", function (event, d) {\n                    event.stopPropagation(); // 이벤트 버블링 방지\n                    const [clickX, clickY] = d3.pointer(event, svg.node());\n                    showTooltip(d, clickX, clickY);\n                });\n        }\n\n        // 중복된 역을 찾아 환승 역 이미지를 추가합니다.\n        const transferStationsData = subwayData.filter((d, i) => {\n            return subwayData.findIndex(e => e.name === d.name && e.line[0] !== d.line[0]) !== -1;\n        });\n\n        // 환승역 이미지를 추가합니다.\n        const transferStations = svgContainer.selectAll(\".transfer-station\")\n            .data(transferStationsData)\n            .enter()\n            .append(\"image\")\n            .attr(\"class\", \"transfer-station\")\n            .attr(\"xlink:href\", mark) // 환승역 이미지 파일 경로로 수정해주세요\n            .attr(\"width\", 20)\n            .attr(\"height\", 20)\n            .attr(\"x\", d => xScale(parseFloat(d.x)) * 4-10) // 이미지 중심을 원점으로 설정하기 위해 가로폭의 절반만큼 왼쪽으로 이동\n            .attr(\"y\", d => yScale(parseFloat(d.y)) * 3.7 -200-10); // 이미지 중심을 원점으로 설정하기 위해 세로폭의 절반만큼 위쪽으로 이동\n\n        // 이미지 위에 툴팁을 표시할 수 있도록 설정합니다.\n        transferStations.on(\"click\", function (event, d) {\n            const [clickX, clickY] = d3.pointer(event, svg.node());\n            showTooltip(d, clickX, clickY);\n\n\n\n            // 다른 곳을 클릭했을 때 툴팁을 제거합니다.\n            d3.select(\"body\").on(\"click.tooltip\", function () {\n                d3.select(\".tooltip\").remove();\n                d3.select(\"body\").on(\"click.tooltip\", null); // 이벤트 핸들러를 제거하여 메모리 누수를 방지합니다.\n            });\n        });\n\n        // 각 역 이름 추가\n        svgContainer.selectAll(\".station-name\")\n            .data(subwayData)\n            .enter()\n            .append(\"text\")\n            .attr(\"class\", \"station-name\")\n            .attr(\"x\", d => xScale(parseFloat(d.x)) * 4) // 역 이름에도 2를 곱하여 2배로 확장\n            .attr(\"y\", d => yScale(parseFloat(d.y)) * 3.7 - 200 + 30) // 역 이름에도 2를 곱하여 2배로 확장\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"18px\")\n            .attr(\"fill\", \"black\")\n            .attr(\"font-weight\", \"bold\") // 굵은 텍스트 설정\n            .text(d => d.name);\n\n// 말풍선 표시 함수\n        const showTooltip = (data, x, y) => {\n            d3.select(\".tooltip\").remove(); // 기존 툴팁 제거\n\n            const tooltip = svg.append(\"g\")\n                .attr(\"class\", \"tooltip\")\n                .attr(\"transform\", `translate(${x}, ${y })`);\n\n            tooltip.append(\"rect\")\n                .attr(\"width\", 600)\n                .attr(\"height\", 200) // Increased height to accommodate the new button\n                .attr(\"x\", -140)\n                .attr(\"y\", 0)\n                .attr(\"fill\", \"white\")\n                .attr(\"stroke\", \"black\");\n\n            tooltip.append(\"text\")\n                .attr(\"x\", 150)\n                .attr(\"y\", 60)\n                .attr(\"font-size\", \"30px\") // 텍스트 크기 증가\n                .attr(\"text-anchor\", \"middle\")\n                .text(data.name);\n\n            // 버튼 데이터 배열\n            const buttons = [\n                { text: '출발', x: -70, y: 120, color: '#90ee90' }, // Green color for 출발 button\n                { text: '도착', x: 60, y: 120, color: '#f0f0f0' },   // Gray color for 도착 button\n                { text: '실시간 도착정보', x: 190, y: 120, color: '#ff6347', width: 280, newx: 285 } // Red color for 실시간 도착정보 button\n            ];\n\n\n\n            // 버튼 생성\n            buttons.forEach(button => {\n                // 버튼 배경\n                tooltip.append(\"rect\")\n                    .attr(\"x\", button.x - 45)\n                    .attr(\"y\", button.y - 30)\n                    .attr(\"width\", button.width || 100)\n                    .attr(\"height\", 60)\n                    .attr(\"fill\", button.color)\n                    .attr(\"rx\", 5) // 둥근 모서리\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", () => {\n                        if (button.text === \"닫기\") {\n                            tooltip.remove();\n                        } else {\n                            if (button.text === \"출발\") {\n                                setDepartureStation(data.name);\n                                dispatch(setStartStation(data.name)); // Redux store 업데이트\n                            } else if (button.text === \"도착\") {\n                                setArrivalStation(data.name);\n                                dispatch(setEndStation(data.name)); // Redux store 업데이트\n                            } else if (button.text === \"실시간 도착정보\") {\n                                toggleRightVisibility(data.name);\n                            }\n                        }\n                    });\n\n                // 버튼 텍스트\n                tooltip.append(\"text\")\n                    .attr(\"x\", button.newx || button.x)\n                    .attr(\"y\", button.y)\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"alignment-baseline\", \"middle\")\n                    .attr(\"font-size\", \"18px\") // 텍스트 크기 증가\n                    .text(button.text)\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", () => {\n                        if (button.text === \"닫기\") {\n                            tooltip.remove();\n                        } else {\n                        }\n                    });\n\n            });\n\n        };\n\n        // 빨간색 원을 저장할 변수\n        let highlightedCircle;\n\n        function removeHighlightedCircle() {\n            if (highlightedCircle) {\n                highlightedCircle.remove();\n                highlightedCircle = null;\n            }\n        }\n\n        // 검색어 처리 로직\n        if (isSearching && searchTerm.trim() !== '') {\n            const searchedStation = subwayData.find(station => station.name.includes(searchTerm.trim()));\n            if (searchedStation) {\n                // 검색된 역의 위치에 말풍선 표시\n                const [searchedX, searchedY] = [xScale(parseFloat(searchedStation.x)) * 4+100, yScale(parseFloat(searchedStation.y)) * 3.7 - 200];\n                setSearchedStationX(searchedX);\n                setSearchedStationY(searchedY);\n                showTooltip(searchedStation, searchedX, searchedY);\n                svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(750 / 2 - searchedX, 500 / 2 - searchedY).scale(2));\n\n                // 이전에 강조된 원이 있으면 제거\n                removeHighlightedCircle();\n\n                // 검색된 역의 위치에 빨간색 원 추가\n                svg.append(\"circle\")\n                    .attr(\"cx\", searchedX+175)\n                    .attr(\"cy\", searchedY+250)\n                    .attr(\"r\", 28) // 반지름 크기 조절\n                    .attr(\"fill\", \"red\") // 빨간색으로 채우기\n                    .attr(\"stroke\", \"black\")\n                    .attr(\"stroke-width\", 1)\n                    .on(\"click\", (event, d) => {\n                        event.stopPropagation(); // 이벤트 버블링 방지\n                        showTooltip(searchedStation, searchedX, searchedY);\n                    });\n            }\n        }\n\n    }, [isSearching, searchTerm, dispatch]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setIsSearching(true);\n    };\n\n    return (\n        <Main\n            title=\"지하철 노선도\"\n            description=\"지하철 노선도 페이지\"\n            departureStation={departureStation}\n            arrivalStation={arrivalStation}\n        >\n            <div className=\"search-container\">\n                <div className=\"search-form\">\n                    <form onSubmit={handleSearch}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"지하철역 검색\"\n                            value={searchTerm}\n                            onChange={handleSearchTermChange} /*{(e) => setSearchTerm(e.target.value)}*/\n                        />\n                        <button type=\"submit\"> <IoSearch size={20} /> </button>\n                    </form>\n                    <div className=\"notice\">\n                        [2024-06-13] 4호선 하행선, 상행선 10분 지연\n                    </div>\n                    {suggestions.length > 0 && (\n                        <ul className=\"suggestions\">\n                            {suggestions.map((suggestion, index) => (\n                                <li key={index} onClick={() => handleSuggestionItemClick(suggestion)}>{suggestion}</li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n            <div\n                id=\"picture\"\n                style={{\n                    width: '100%',\n                    height: 'calc(100vh - 60px)',\n                    overflow: 'auto', // 스크롤 추가\n                    position: 'relative'\n                }}\n            >\n                <div class=\"rectangle\">\n                    <svg\n                        ref={ref}\n                        viewBox=\"0 -300 1500 1800\"\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'absolute',\n                            top: 0,\n                            left: 0\n                        }}\n                    ></svg>\n                </div>\n            </div>\n            {isRightVisible && <Right isVisible={isRightVisible} toggleRightVisibility={toggleRightVisibility} stationName={stationName} />} {/* Right 컴포넌트 렌더링 */}\n        </Main>\n    );\n};\n\nexport default Routemap;\n"],"mappings":"4UAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,MAAO,GAAK,CAAAC,EAAE,KAAM,IAAI,CACxB,MAAO,CAAAC,UAAU,KAAM,oBAAoB,CAC3C,MAAO,CAAAC,IAAI,KAAM,4BAA4B,CAC7C,MAAO,CAAAC,IAAI,KAAM,+BAA+B,CAChD,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,OAASC,eAAe,CAAEC,aAAa,KAAQ,iBAAiB,CAChE,MAAO,CAAAC,KAAK,KAAM,6BAA6B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGjD,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACnB,GAAM,CAAAC,GAAG,CAAGjB,MAAM,CAAC,CAAC,CACpB,GAAM,CAAAkB,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAC9B,IAAAiB,SAAA,CAAoClB,QAAQ,CAAC,EAAE,CAAC,CAAAmB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAzCG,UAAU,CAAAF,UAAA,IAAEG,aAAa,CAAAH,UAAA,IAChC,IAAAI,UAAA,CAAsCvB,QAAQ,CAAC,KAAK,CAAC,CAAAwB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA9CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,IAAAG,UAAA,CAAgD3B,QAAQ,CAAC,IAAI,CAAC,CAAA4B,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAvDE,gBAAgB,CAAAD,UAAA,IAAEE,mBAAmB,CAAAF,UAAA,IAC5C,IAAAG,UAAA,CAA4C/B,QAAQ,CAAC,IAAI,CAAC,CAAAgC,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAAnDE,cAAc,CAAAD,UAAA,IAAEE,iBAAiB,CAAAF,UAAA,IACxC,IAAAG,UAAA,CAA4CnC,QAAQ,CAAC,KAAK,CAAC,CAAAoC,WAAA,CAAAhB,cAAA,CAAAe,UAAA,IAApDE,cAAc,CAAAD,WAAA,IAAEE,iBAAiB,CAAAF,WAAA,IAAqB;AAC7D,IAAAG,WAAA,CAAsCvC,QAAQ,CAAC,IAAI,CAAC,CAAAwC,WAAA,CAAApB,cAAA,CAAAmB,WAAA,IAA7CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAClC,IAAAG,WAAA,CAAsC3C,QAAQ,CAAC,EAAE,CAAC,CAAA4C,WAAA,CAAAxB,cAAA,CAAAuB,WAAA,IAA3CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAAkB;AACpD,IAAAG,WAAA,CAAgD/C,QAAQ,CAAC,IAAI,CAAC,CAAAgD,WAAA,CAAA5B,cAAA,CAAA2B,WAAA,IAAvDE,gBAAgB,CAAAD,WAAA,IAAEE,mBAAmB,CAAAF,WAAA,IAC5C,IAAAG,WAAA,CAAgDnD,QAAQ,CAAC,IAAI,CAAC,CAAAoD,WAAA,CAAAhC,cAAA,CAAA+B,WAAA,IAAvDE,gBAAgB,CAAAD,WAAA,IAAEE,mBAAmB,CAAAF,WAAA,IAC5C;AACA,GAAM,CAAAG,yBAAyB,CAAG,QAA5B,CAAAA,yBAAyBA,CAAIC,UAAU,CAAK,CAC9C;AACA,GAAM,CAAAC,mBAAmB,CAAGD,UAAU,CAACE,QAAQ,CAAC,GAAG,CAAC,CAAGF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAGJ,UAAU,CACnGlC,aAAa,CAACmC,mBAAmB,CAAC,CAAE;AACpCX,cAAc,CAAC,EAAE,CAAC,CAAE;AACxB,CAAC,CAED;AACA,GAAM,CAAAe,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAIC,CAAC,CAAK,CAClC,GAAM,CAAAC,KAAK,CAAGD,CAAC,CAACE,MAAM,CAACD,KAAK,CAC5BzC,aAAa,CAACyC,KAAK,CAAC,CAAE;AAEtB;AACA,GAAM,CAAAE,gBAAgB,CAAG7D,UAAU,CAAC8D,MAAM,CAAC,SAAAC,OAAO,QAAI,CAAAA,OAAO,CAACC,IAAI,CAACV,QAAQ,CAACK,KAAK,CAAC,GAAC,CAACM,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE;AACjGvB,cAAc,CAACmB,gBAAgB,CAACK,GAAG,CAAC,SAAAH,OAAO,WAAAI,MAAA,CAAOJ,OAAO,CAACC,IAAI,QAAAG,MAAA,CAAMJ,OAAO,CAACK,IAAI,GAAE,CAAC,CAAC,CACxF,CAAC,CAED,GAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAA,CAAoB,IAAhB,CAAAL,IAAI,CAAAM,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACtCpC,iBAAiB,CAAC,CAACD,cAAc,CAAC,CAClCK,cAAc,CAAC0B,IAAI,CAAC,CACxB,CAAC,CAEDtE,SAAS,CAAC,UAAM,CACZ,GAAM,CAAA+E,GAAG,CAAG1E,EAAE,CAAC2E,MAAM,CAAC9D,GAAG,CAAC+D,OAAO,CAAC,CAC7BC,EAAE,CAAC,OAAO,CAAE,UAAM,CACf7E,EAAE,CAAC2E,MAAM,CAAC,UAAU,CAAC,CAACG,MAAM,CAAC,CAAC,CAClC,CAAC,CAAE,IAAI,CAAC,CACPC,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,CACnBA,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,CACzBL,GAAG,CAACM,SAAS,CAAC,GAAG,CAAC,CAACF,MAAM,CAAC,CAAC,CAE3B,GAAM,CAAAG,YAAY,CAAGP,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAC/BH,IAAI,CAAC,IAAI,CAAE,eAAe,CAAC,CAEhC;AACA,GAAM,CAAAI,IAAI,CAAGnF,EAAE,CAACmF,IAAI,CAAC,CAAC,CACjBC,WAAW,CAAC,CAAC,GAAG,CAAE,CAAC,CAAC,CAAE;AAAA,CACtBP,EAAE,CAAC,MAAM,CAAE,SAACQ,KAAK,CAAK,CACnBJ,YAAY,CAACF,IAAI,CAAC,WAAW,CAAEM,KAAK,CAACC,SAAS,CAAC,CACnD,CAAC,CAAC,CAENZ,GAAG,CAACa,IAAI,CAACJ,IAAI,CAAC,CAEd;AACA,GAAM,CAAAK,MAAM,CAAGxF,EAAE,CAACyF,WAAW,CAAC,CAAC,CAC1BC,MAAM,CAAC1F,EAAE,CAAC2F,MAAM,CAAC1F,UAAU,CAAE,SAAA2F,CAAC,QAAI,CAAAC,UAAU,CAACD,CAAC,CAACE,CAAC,CAAC,GAAC,CAAC,CACnDC,KAAK,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,CAAC,CAEpB,GAAM,CAAAC,MAAM,CAAGhG,EAAE,CAACyF,WAAW,CAAC,CAAC,CAC1BC,MAAM,CAAC1F,EAAE,CAAC2F,MAAM,CAAC1F,UAAU,CAAE,SAAA2F,CAAC,QAAI,CAAAC,UAAU,CAACD,CAAC,CAACK,CAAC,CAAC,GAAC,CAAC,CACnDF,KAAK,CAAC,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,CAEpB;AACA,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAI7B,IAAI,CAAK,CACxB,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,MAAM,CAAE,MAAO,SAAS,CACrC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,MAAM,CAAE,MAAO,SAAS,CACrC,GAAIA,IAAI,GAAK,MAAM,CAAE,MAAO,SAAS,CACrC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,MAAM,CAAE,MAAO,SAAS,CACrC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,MAAM,CAAE,MAAO,SAAS,CACrC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,OAAO,CAAE,MAAO,SAAS,CACtC,GAAIA,IAAI,GAAK,OAAO,CAAE,MAAO,SAAS,CACtC,GAAIA,IAAI,GAAK,QAAQ,CAAE,MAAO,SAAS,CACvC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,SAAS,CAAE,MAAO,SAAS,CACxC,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,SAAS,CACpC,GAAIA,IAAI,GAAK,OAAO,CAAE,MAAO,SAAS,CACtC,GAAIA,IAAI,GAAK,QAAQ,CAAE,MAAO,SAAS,CACvC,MAAO,OAAO,CAAE;AACpB,CAAC,CAED;AACA,GAAM,CAAA8B,WAAW,CAAGnG,EAAE,CAACoG,KAAK,CAACnG,UAAU,CAAE,SAAA2F,CAAC,QAAI,CAAAA,CAAC,CAACvB,IAAI,GAAC,CAErD;AAAA,IAAAgC,SAAA,CAAAC,0BAAA,CAC+BH,WAAW,EAAAI,KAAA,SAAAC,KAAA,UAAAA,MAAA,CAAE,KAAAC,WAAA,CAAAxF,cAAA,CAAAsF,KAAA,CAAA3C,KAAA,IAAhCS,IAAI,CAAAoC,WAAA,IAAEC,QAAQ,CAAAD,WAAA,IACtB,GAAM,CAAAE,aAAa,CAAG3G,EAAE,CAACqE,IAAI,CAAC,CAAC,CAC1ByB,CAAC,CAAC,SAAAF,CAAC,QAAI,CAAAJ,MAAM,CAACK,UAAU,CAACD,CAAC,CAACE,CAAC,CAAC,CAAC,CAAG,CAAC,GAAC,CACnCG,CAAC,CAAC,SAAAL,CAAC,QAAI,CAAAI,MAAM,CAACH,UAAU,CAACD,CAAC,CAACK,CAAC,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,GAAC,CAC3CW,KAAK,CAAC5G,EAAE,CAAC6G,WAAW,CAAC,CAE1B5B,YAAY,CAACC,MAAM,CAAC,MAAM,CAAC,CACtB4B,KAAK,CAACJ,QAAQ,CAAC,CACf3B,IAAI,CAAC,MAAM,CAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,CAAEmB,SAAS,CAAC7B,IAAI,CAAC,CAAC,CAC/BU,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,GAAG,CAAE4B,aAAa,CAAC,CAE7B;AACA1B,YAAY,CAACD,SAAS,aAAAZ,MAAA,CAAaC,IAAI,CAAE,CAAE;AAAA,CACtC0C,IAAI,CAACL,QAAQ,CAAC,CACdM,KAAK,CAAC,CAAC,CACP9B,MAAM,CAAC,QAAQ,CAAC,CAChBH,IAAI,CAAC,OAAO,oBAAAX,MAAA,CAAqBC,IAAI,CAAE,CAAE;AAAA,CACzCU,IAAI,CAAC,IAAI,CAAE,SAAAa,CAAC,QAAI,CAAAJ,MAAM,CAACK,UAAU,CAACD,CAAC,CAACE,CAAC,CAAC,CAAC,CAAG,CAAC,GAAE;AAAA,CAC7Cf,IAAI,CAAC,IAAI,CAAE,SAAAa,CAAC,QAAI,CAAAI,MAAM,CAACH,UAAU,CAACD,CAAC,CAACK,CAAC,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,GAAE;AAAA,CACrDlB,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,CACbA,IAAI,CAAC,MAAM,CAAE,SAAAa,CAAC,QAAI,CAAAM,SAAS,CAAC7B,IAAI,CAAC,GAAE;AAAA,CACnCU,IAAI,CAAC,QAAQ,CAAEmB,SAAS,CAAC7B,IAAI,CAAC,CAAC,CAC/BU,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,CACvBF,EAAE,CAAC,OAAO,CAAE,SAAUQ,KAAK,CAAEO,CAAC,CAAE,CAC7BP,KAAK,CAAC4B,eAAe,CAAC,CAAC,CAAE;AACzB,IAAAC,YAAA,CAAyBlH,EAAE,CAACmH,OAAO,CAAC9B,KAAK,CAAEX,GAAG,CAAC0C,IAAI,CAAC,CAAC,CAAC,CAAAC,YAAA,CAAApG,cAAA,CAAAiG,YAAA,IAA/CI,MAAM,CAAAD,YAAA,IAAEE,MAAM,CAAAF,YAAA,IACrBG,WAAW,CAAC5B,CAAC,CAAE0B,MAAM,CAAEC,MAAM,CAAC,CAClC,CAAC,CAAC,CACV,CAAC,CA9BD,IAAAlB,SAAA,CAAAoB,CAAA,KAAAlB,KAAA,CAAAF,SAAA,CAAAqB,CAAA,IAAAC,IAAA,GAAAnB,KAAA,IAgCA;AAAA,OAAAoB,GAAA,EAAAvB,SAAA,CAAA1C,CAAA,CAAAiE,GAAA,WAAAvB,SAAA,CAAAwB,CAAA,IACA,GAAM,CAAAC,oBAAoB,CAAG7H,UAAU,CAAC8D,MAAM,CAAC,SAAC6B,CAAC,CAAEmC,CAAC,CAAK,CACrD,MAAO,CAAA9H,UAAU,CAAC+H,SAAS,CAAC,SAAArE,CAAC,QAAI,CAAAA,CAAC,CAACM,IAAI,GAAK2B,CAAC,CAAC3B,IAAI,EAAIN,CAAC,CAACU,IAAI,CAAC,CAAC,CAAC,GAAKuB,CAAC,CAACvB,IAAI,CAAC,CAAC,CAAC,GAAC,GAAK,CAAC,CAAC,CACzF,CAAC,CAAC,CAEF;AACA,GAAM,CAAA4D,gBAAgB,CAAGhD,YAAY,CAACD,SAAS,CAAC,mBAAmB,CAAC,CAC/D+B,IAAI,CAACe,oBAAoB,CAAC,CAC1Bd,KAAK,CAAC,CAAC,CACP9B,MAAM,CAAC,OAAO,CAAC,CACfH,IAAI,CAAC,OAAO,CAAE,kBAAkB,CAAC,CACjCA,IAAI,CAAC,YAAY,CAAE5E,IAAI,CAAE;AAAA,CACzB4E,IAAI,CAAC,OAAO,CAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,CAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,GAAG,CAAE,SAAAa,CAAC,QAAI,CAAAJ,MAAM,CAACK,UAAU,CAACD,CAAC,CAACE,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,EAAE,GAAE;AAAA,CAC/Cf,IAAI,CAAC,GAAG,CAAE,SAAAa,CAAC,QAAI,CAAAI,MAAM,CAACH,UAAU,CAACD,CAAC,CAACK,CAAC,CAAC,CAAC,CAAG,GAAG,CAAE,GAAG,CAAC,EAAE,GAAC,CAAE;AAE5D;AACAgC,gBAAgB,CAACpD,EAAE,CAAC,OAAO,CAAE,SAAUQ,KAAK,CAAEO,CAAC,CAAE,CAC7C,IAAAsC,WAAA,CAAyBlI,EAAE,CAACmH,OAAO,CAAC9B,KAAK,CAAEX,GAAG,CAAC0C,IAAI,CAAC,CAAC,CAAC,CAAAe,YAAA,CAAAlH,cAAA,CAAAiH,WAAA,IAA/CZ,MAAM,CAAAa,YAAA,IAAEZ,MAAM,CAAAY,YAAA,IACrBX,WAAW,CAAC5B,CAAC,CAAE0B,MAAM,CAAEC,MAAM,CAAC,CAI9B;AACAvH,EAAE,CAAC2E,MAAM,CAAC,MAAM,CAAC,CAACE,EAAE,CAAC,eAAe,CAAE,UAAY,CAC9C7E,EAAE,CAAC2E,MAAM,CAAC,UAAU,CAAC,CAACG,MAAM,CAAC,CAAC,CAC9B9E,EAAE,CAAC2E,MAAM,CAAC,MAAM,CAAC,CAACE,EAAE,CAAC,eAAe,CAAE,IAAI,CAAC,CAAE;AACjD,CAAC,CAAC,CACN,CAAC,CAAC,CAEF;AACAI,YAAY,CAACD,SAAS,CAAC,eAAe,CAAC,CAClC+B,IAAI,CAAC9G,UAAU,CAAC,CAChB+G,KAAK,CAAC,CAAC,CACP9B,MAAM,CAAC,MAAM,CAAC,CACdH,IAAI,CAAC,OAAO,CAAE,cAAc,CAAC,CAC7BA,IAAI,CAAC,GAAG,CAAE,SAAAa,CAAC,QAAI,CAAAJ,MAAM,CAACK,UAAU,CAACD,CAAC,CAACE,CAAC,CAAC,CAAC,CAAG,CAAC,GAAE;AAAA,CAC5Cf,IAAI,CAAC,GAAG,CAAE,SAAAa,CAAC,QAAI,CAAAI,MAAM,CAACH,UAAU,CAACD,CAAC,CAACK,CAAC,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,CAAG,EAAE,GAAE;AAAA,CACzDlB,IAAI,CAAC,aAAa,CAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,WAAW,CAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,CAAE,OAAO,CAAC,CACrBA,IAAI,CAAC,aAAa,CAAE,MAAM,CAAE;AAAA,CAC5BqD,IAAI,CAAC,SAAAxC,CAAC,QAAI,CAAAA,CAAC,CAAC3B,IAAI,GAAC,CAE9B;AACQ,GAAM,CAAAuD,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIT,IAAI,CAAEjB,CAAC,CAAEG,CAAC,CAAK,CAChCjG,EAAE,CAAC2E,MAAM,CAAC,UAAU,CAAC,CAACG,MAAM,CAAC,CAAC,CAAE;AAEhC,GAAM,CAAAuD,OAAO,CAAG3D,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAC1BH,IAAI,CAAC,OAAO,CAAE,SAAS,CAAC,CACxBA,IAAI,CAAC,WAAW,cAAAX,MAAA,CAAe0B,CAAC,OAAA1B,MAAA,CAAK6B,CAAC,KAAI,CAAC,CAEhDoC,OAAO,CAACnD,MAAM,CAAC,MAAM,CAAC,CACjBH,IAAI,CAAC,OAAO,CAAE,GAAG,CAAC,CAClBA,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAE;AAAA,CACpBA,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CACfA,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC,CACZA,IAAI,CAAC,MAAM,CAAE,OAAO,CAAC,CACrBA,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAC,CAE5BsD,OAAO,CAACnD,MAAM,CAAC,MAAM,CAAC,CACjBH,IAAI,CAAC,GAAG,CAAE,GAAG,CAAC,CACdA,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,CACbA,IAAI,CAAC,WAAW,CAAE,MAAM,CAAE;AAAA,CAC1BA,IAAI,CAAC,aAAa,CAAE,QAAQ,CAAC,CAC7BqD,IAAI,CAACrB,IAAI,CAAC9C,IAAI,CAAC,CAEpB;AACA,GAAM,CAAAqE,OAAO,CAAG,CACZ,CAAEF,IAAI,CAAE,IAAI,CAAEtC,CAAC,CAAE,CAAC,EAAE,CAAEG,CAAC,CAAE,GAAG,CAAEsC,KAAK,CAAE,SAAU,CAAC,CAAE;AAClD,CAAEH,IAAI,CAAE,IAAI,CAAEtC,CAAC,CAAE,EAAE,CAAEG,CAAC,CAAE,GAAG,CAAEsC,KAAK,CAAE,SAAU,CAAC,CAAI;AACnD,CAAEH,IAAI,CAAE,UAAU,CAAEtC,CAAC,CAAE,GAAG,CAAEG,CAAC,CAAE,GAAG,CAAEsC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,GAAG,CAAEC,IAAI,CAAE,GAAI,CAAE;AAAA,CACjF,CAID;AACAH,OAAO,CAACI,OAAO,CAAC,SAAAC,MAAM,CAAI,CACtB;AACAN,OAAO,CAACnD,MAAM,CAAC,MAAM,CAAC,CACjBH,IAAI,CAAC,GAAG,CAAE4D,MAAM,CAAC7C,CAAC,CAAG,EAAE,CAAC,CACxBf,IAAI,CAAC,GAAG,CAAE4D,MAAM,CAAC1C,CAAC,CAAG,EAAE,CAAC,CACxBlB,IAAI,CAAC,OAAO,CAAE4D,MAAM,CAACH,KAAK,EAAI,GAAG,CAAC,CAClCzD,IAAI,CAAC,QAAQ,CAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,CAAE4D,MAAM,CAACJ,KAAK,CAAC,CAC1BxD,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE;AAAA,CACd6D,KAAK,CAAC,QAAQ,CAAE,SAAS,CAAC,CAC1B/D,EAAE,CAAC,OAAO,CAAE,UAAM,CACf,GAAI8D,MAAM,CAACP,IAAI,GAAK,IAAI,CAAE,CACtBC,OAAO,CAACvD,MAAM,CAAC,CAAC,CACpB,CAAC,IAAM,CACH,GAAI6D,MAAM,CAACP,IAAI,GAAK,IAAI,CAAE,CACtBzG,mBAAmB,CAACoF,IAAI,CAAC9C,IAAI,CAAC,CAC9BnD,QAAQ,CAACT,eAAe,CAAC0G,IAAI,CAAC9C,IAAI,CAAC,CAAC,CAAE;AAC1C,CAAC,IAAM,IAAI0E,MAAM,CAACP,IAAI,GAAK,IAAI,CAAE,CAC7BrG,iBAAiB,CAACgF,IAAI,CAAC9C,IAAI,CAAC,CAC5BnD,QAAQ,CAACR,aAAa,CAACyG,IAAI,CAAC9C,IAAI,CAAC,CAAC,CAAE;AACxC,CAAC,IAAM,IAAI0E,MAAM,CAACP,IAAI,GAAK,UAAU,CAAE,CACnC9D,qBAAqB,CAACyC,IAAI,CAAC9C,IAAI,CAAC,CACpC,CACJ,CACJ,CAAC,CAAC,CAEN;AACAoE,OAAO,CAACnD,MAAM,CAAC,MAAM,CAAC,CACjBH,IAAI,CAAC,GAAG,CAAE4D,MAAM,CAACF,IAAI,EAAIE,MAAM,CAAC7C,CAAC,CAAC,CAClCf,IAAI,CAAC,GAAG,CAAE4D,MAAM,CAAC1C,CAAC,CAAC,CACnBlB,IAAI,CAAC,aAAa,CAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,oBAAoB,CAAE,QAAQ,CAAC,CACpCA,IAAI,CAAC,WAAW,CAAE,MAAM,CAAE;AAAA,CAC1BqD,IAAI,CAACO,MAAM,CAACP,IAAI,CAAC,CACjBQ,KAAK,CAAC,QAAQ,CAAE,SAAS,CAAC,CAC1B/D,EAAE,CAAC,OAAO,CAAE,UAAM,CACf,GAAI8D,MAAM,CAACP,IAAI,GAAK,IAAI,CAAE,CACtBC,OAAO,CAACvD,MAAM,CAAC,CAAC,CACpB,CAAC,IAAM,CACP,CACJ,CAAC,CAAC,CAEV,CAAC,CAAC,CAEN,CAAC,CAED;AACA,GAAI,CAAA+D,iBAAiB,CAErB,QAAS,CAAAC,uBAAuBA,CAAA,CAAG,CAC/B,GAAID,iBAAiB,CAAE,CACnBA,iBAAiB,CAAC/D,MAAM,CAAC,CAAC,CAC1B+D,iBAAiB,CAAG,IAAI,CAC5B,CACJ,CAEA;AACA,GAAIvH,WAAW,EAAIJ,UAAU,CAACuC,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACzC,GAAM,CAAAsF,eAAe,CAAG9I,UAAU,CAAC+I,IAAI,CAAC,SAAAhF,OAAO,QAAI,CAAAA,OAAO,CAACC,IAAI,CAACV,QAAQ,CAACrC,UAAU,CAACuC,IAAI,CAAC,CAAC,CAAC,GAAC,CAC5F,GAAIsF,eAAe,CAAE,CACjB;AACA,GAAO,CAAAE,SAAS,CAAgBzD,MAAM,CAACK,UAAU,CAACkD,eAAe,CAACjD,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,GAAG,CAA3DoD,SAAS,CAAoDlD,MAAM,CAACH,UAAU,CAACkD,eAAe,CAAC9C,CAAC,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,CAChIlD,mBAAmB,CAACkG,SAAS,CAAC,CAC9B9F,mBAAmB,CAAC+F,SAAS,CAAC,CAC9B1B,WAAW,CAACuB,eAAe,CAAEE,SAAS,CAAEC,SAAS,CAAC,CAClDxE,GAAG,CAACyE,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC7D,IAAI,CAACJ,IAAI,CAACG,SAAS,CAAEtF,EAAE,CAACqJ,YAAY,CAACC,SAAS,CAAC,GAAG,CAAG,CAAC,CAAGL,SAAS,CAAE,GAAG,CAAG,CAAC,CAAGC,SAAS,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAEjI;AACAT,uBAAuB,CAAC,CAAC,CAEzB;AACApE,GAAG,CAACQ,MAAM,CAAC,QAAQ,CAAC,CACfH,IAAI,CAAC,IAAI,CAAEkE,SAAS,CAAC,GAAG,CAAC,CACzBlE,IAAI,CAAC,IAAI,CAAEmE,SAAS,CAAC,GAAG,CAAC,CACzBnE,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE;AAAA,CACdA,IAAI,CAAC,MAAM,CAAE,KAAK,CAAE;AAAA,CACpBA,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAC,CACvBA,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,CACvBF,EAAE,CAAC,OAAO,CAAE,SAACQ,KAAK,CAAEO,CAAC,CAAK,CACvBP,KAAK,CAAC4B,eAAe,CAAC,CAAC,CAAE;AACzBO,WAAW,CAACuB,eAAe,CAAEE,SAAS,CAAEC,SAAS,CAAC,CACtD,CAAC,CAAC,CACV,CACJ,CAEJ,CAAC,CAAE,CAAC5H,WAAW,CAAEJ,UAAU,CAAEJ,QAAQ,CAAC,CAAC,CAEvC,GAAM,CAAA0I,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAI7F,CAAC,CAAK,CACxBA,CAAC,CAAC8F,cAAc,CAAC,CAAC,CAClBlI,cAAc,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,mBACIZ,KAAA,CAACT,IAAI,EACDwJ,KAAK,CAAC,uCAAS,CACfC,WAAW,CAAC,0DAAa,CACzBjI,gBAAgB,CAAEA,gBAAiB,CACnCI,cAAc,CAAEA,cAAe,CAAA8H,QAAA,eAE/BnJ,IAAA,QAAKoJ,SAAS,CAAC,kBAAkB,CAAAD,QAAA,cAC7BjJ,KAAA,QAAKkJ,SAAS,CAAC,aAAa,CAAAD,QAAA,eACxBjJ,KAAA,SAAMmJ,QAAQ,CAAEN,YAAa,CAAAI,QAAA,eACzBnJ,IAAA,UACIsJ,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,uCAAS,CACrBpG,KAAK,CAAE1C,UAAW,CAClB+I,QAAQ,CAAEvG,sBAAwB,2CACrC,CAAC,cACF/C,KAAA,WAAQoJ,IAAI,CAAC,QAAQ,CAAAH,QAAA,EAAC,GAAC,cAAAnJ,IAAA,CAACL,QAAQ,EAAC8J,IAAI,CAAE,EAAG,CAAE,CAAC,IAAC,EAAQ,CAAC,EACrD,CAAC,cACPzJ,IAAA,QAAKoJ,SAAS,CAAC,QAAQ,CAAAD,QAAA,CAAC,yFAExB,CAAK,CAAC,CACLlH,WAAW,CAAC8B,MAAM,CAAG,CAAC,eACnB/D,IAAA,OAAIoJ,SAAS,CAAC,aAAa,CAAAD,QAAA,CACtBlH,WAAW,CAACyB,GAAG,CAAC,SAACd,UAAU,CAAE8G,KAAK,qBAC/B1J,IAAA,OAAgB2J,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAhH,yBAAyB,CAACC,UAAU,CAAC,EAAC,CAAAuG,QAAA,CAAEvG,UAAU,EAAxE8G,KAA6E,CAAC,EAC1F,CAAC,CACF,CACP,EACA,CAAC,CACL,CAAC,cACN1J,IAAA,QACI4J,EAAE,CAAC,SAAS,CACZzB,KAAK,CAAE,CACHJ,KAAK,CAAE,MAAM,CACb8B,MAAM,CAAE,oBAAoB,CAC5BC,QAAQ,CAAE,MAAM,CAAE;AAClBC,QAAQ,CAAE,UACd,CAAE,CAAAZ,QAAA,cAEFnJ,IAAA,QAAKgK,KAAK,CAAC,WAAW,CAAAb,QAAA,cAClBnJ,IAAA,QACII,GAAG,CAAEA,GAAI,CACT6J,OAAO,CAAC,kBAAkB,CAC1B9B,KAAK,CAAE,CACHJ,KAAK,CAAE,MAAM,CACb8B,MAAM,CAAE,MAAM,CACdE,QAAQ,CAAE,UAAU,CACpBG,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CACV,CAAE,CACA,CAAC,CACN,CAAC,CACL,CAAC,CACL1I,cAAc,eAAIzB,IAAA,CAACF,KAAK,EAACsK,SAAS,CAAE3I,cAAe,CAACoC,qBAAqB,CAAEA,qBAAsB,CAAChC,WAAW,CAAEA,WAAY,CAAE,CAAC,CAAC,GAAC,EAC/H,CAAC,CAEf,CAAC,CAED,cAAe,CAAA1B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}