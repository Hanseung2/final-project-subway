{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Main from'../components/section/Main';import{useSelector}from'react-redux';import{getCurrentTime,getDayType}from'../data/time';import train from'../assets/img/nav/train.png';import wait from'../assets/img/nav/waiting.png';import walk from'../assets/img/nav/walk.png';import{Link,useNavigate}from'react-router-dom';// React Router를 사용한다고 가정합니다.\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Pre=function Pre(){var startStation=useSelector(function(state){return state.startStation;});var endStation=useSelector(function(state){return state.endStation;});var _useState=useState(getDayType()),_useState2=_slicedToArray(_useState,2),dayType=_useState2[0],setDayType=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];// 로딩 상태 변수\nvar navigate=useNavigate();// useHistory 훅 사용\nvar ingtime=[0];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];useEffect(function(){var fetchDataFromSpring=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;url=\"http://localhost:8080/SearchRoute?start=\".concat(encodeURIComponent(startStation),\"&end=\").concat(encodeURIComponent(endStation));_context.next=4;return fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;setResults(data);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error('데이터 가져오기 실패:',_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function fetchDataFromSpring(){return _ref.apply(this,arguments);};}();if(startStation&&endStation){fetchDataFromSpring();}},[startStation,endStation]);var renderResults=function renderResults(){return results.map(function(result,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"resultsMap\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"resultsHeader\",children:[\"\\uAE38\\uCC3E\\uAE30 \\uACB0\\uACFC \",index+1]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uCD9C\\uBC1C \\uC2DC\\uAC04: \",Math.floor(currentTime/(60*60)),\"\\uC2DC \",Math.floor(currentTime%(60*60)/60),\"\\uBD84 \",Math.floor(currentTime%60),\"\\uCD08, (\",dayType,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualRepresentation\",style:{width:'1250px',height:'30px',backgroundColor:'lightgray',margin:'20px 0'},children:renderTransferBars(result)}),/*#__PURE__*/_jsxs(\"p\",{className:\"scheduleTime\",children:[\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(\\uC2DC\\uAC04\\uD45C): \",Math.floor((currentTime+result.totalTime)/(60*60)),\"\\uC2DC \",Math.floor((currentTime+result.totalTime)%(60*60)/60),\"\\uBD84 \",Math.floor((currentTime+result.totalTime)%60),\"\\uCD08\"]}),result.path&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uAC78\\uB9AC\\uB294\\uC2DC\\uAC04: \",Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08\"]}),result.eachTypeOfLine.map(function(line,index){return/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[index+1,\"\\uBC88 \\uD658\\uC2B9: \",line,\"(\",result.eachTransferStation[index],\") - \",Math.floor((currentTime+ingtime[index])/(60*60)),\"\\uC2DC \",Math.floor((currentTime+ingtime[index])%(60*60)/60),\"\\uBD84 \",Math.floor((currentTime+ingtime[index])%60),\"\\uCD08 \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]},index);})]})]},index);});};var renderTransferBars=function renderTransferBars(result){var transferBars=[];var iconSize=20;// 이미지 크기\nvar i=0;// 환승역이 없는 경우 처리\nif(result.eachTransferStation.length===0){// 출발지에서 도착지까지 바로 이동하는 경우\ntransferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:'100%',height:'30px',backgroundColor:getLineColor(result.startLine),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:'100%',maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[startStation,\"(\",result.startLine,\")\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08\"]})]},\"go\".concat(i)));return transferBars;}// 각 막대의 비율 계산\nvar totalBarWidth=result.totalTime;var accumulatedWidth=0;var tt=0;// tt 변수 초기화\nresult.eachTypeOfLine.forEach(function(line,index){var goBarWidth=result.eachTime[index]/totalBarWidth*1250;var transferBarWidth=result.eachWalkingTime[index]/totalBarWidth*1250;var waitingBarWidth=result.eachWaitingTime[index]/totalBarWidth*1250;ingtime[index]=0;// 각 막대의 총합이 1250이 되도록 비율 조정\nvar totalRatio=goBarWidth+transferBarWidth+waitingBarWidth;var adjustedGoBarWidth=goBarWidth/totalRatio*1250;var adjustedTransferBarWidth=transferBarWidth/totalRatio*1250;var adjustedWaitingBarWidth=waitingBarWidth/totalRatio*1250;transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(goBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedGoBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[Math.floor(result.eachTime[index]/60),\"\\uBD84 \",Math.floor(result.eachTime[index]%60),\"\\uCD08\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[index===0?startStation:result.eachTransferStation[index-1],\"(\",index===0?result.startLine:result.eachTypeOfLine[index-1],\")\"]})]},\"go\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(transferBarWidth,\"px\"),height:'30px',backgroundColor:'lightgray',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:walk,alt:\"walk\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedTransferBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWalkingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWalkingTime[index]%60),\"\\uCD08\"]})]},\"transfer\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(waitingBarWidth,\"px\"),height:'30px',backgroundColor:'red',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:wait,alt:\"wait\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedWaitingBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWaitingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWaitingTime[index]%60),\"\\uCD08 \"]})]},\"wait\".concat(index)));result.eachTime.forEach(function(_,index){if(index===0){ingtime[index]=result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];}else{ingtime[index]=ingtime[index-1]+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];}});accumulatedWidth+=adjustedGoBarWidth+adjustedTransferBarWidth+adjustedWaitingBarWidth;tt=tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];});// 마지막 열차 막대 추가\nvar lastIndex=result.eachTypeOfLine.length-1;var lastGoBarWidth=(result.eachTime[lastIndex]!==0?result.totalTime-tt:result.totalTime)/totalBarWidth*1250;var lastTotalWidth=lastGoBarWidth;var lastAdjustedGoBarWidth=lastGoBarWidth/lastTotalWidth*(1250-accumulatedWidth);transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(lastGoBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(result.eachTypeOfLine[lastIndex]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(lastAdjustedGoBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[Math.floor((result.totalTime-tt)/60),\"\\uBD84 \",Math.floor(result.eachTime[lastIndex]%60),\"\\uCD08\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[result.eachTransferStation[result.eachTransferStation.length-1],\"(\",result.eachTypeOfLine[result.eachTypeOfLine.length-1],\")\"]})]},\"go\".concat(lastIndex)));return transferBars;};var getLineColor=function getLineColor(line){var lineColors={'1호선':'#0d3692','2호선':'#33a23d','3호선':'#fe5d10','4호선':'#00a2d1','5호선':'#8b50a4','6호선':'#c55c1d','7호선':'#54640d','8호선':'#f14c82'};return lineColors[line]||'#000';// 기본 색상은 검정색\n};return/*#__PURE__*/_jsxs(Main,{title:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",description:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"resultsContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"resultsHeader\",children:\"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0\"}),startStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uCD9C\\uBC1C\\uC9C0: \",startStation]}),endStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uB3C4\\uCC29\\uC9C0: \",endStation]}),!startStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),!endStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),renderResults()]});};export default Pre;","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","Link","useNavigate","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Pre","startStation","state","endStation","_useState","_useState2","_slicedToArray","dayType","setDayType","_useState3","_useState4","loading","setLoading","navigate","ingtime","_useState5","_useState6","results","setResults","fetchDataFromSpring","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","wrap","_callee$","_context","prev","next","concat","encodeURIComponent","fetch","method","headers","sent","json","t0","console","error","stop","apply","arguments","renderResults","map","result","index","className","children","Math","floor","currentTime","style","width","height","backgroundColor","margin","renderTransferBars","totalTime","path","eachTypeOfLine","line","eachTransferStation","transferBars","iconSize","i","length","push","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","color","bottom","totalBarWidth","accumulatedWidth","tt","forEach","goBarWidth","eachTime","transferBarWidth","eachWalkingTime","waitingBarWidth","eachWaitingTime","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","_","lastIndex","lastGoBarWidth","lastTotalWidth","lastAdjustedGoBarWidth","lineColors","title","description"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Pre.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Main from '../components/section/Main';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCurrentTime, getDayType } from '../data/time';\r\nimport train from '../assets/img/nav/train.png';\r\nimport wait from '../assets/img/nav/waiting.png';\r\nimport walk from '../assets/img/nav/walk.png';\r\nimport { Link, useNavigate } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\r\n\r\nconst Pre = () => {\r\n    const startStation = useSelector(state => state.startStation);\r\n    const endStation = useSelector(state => state.endStation);\r\n    const [dayType, setDayType] = useState(getDayType());\r\n    const [loading, setLoading] = useState(false); // 로딩 상태 변수\r\n    const navigate  = useNavigate(); // useHistory 훅 사용\r\n    let ingtime=[0];\r\n    const [results, setResults] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchDataFromSpring = async () => {\r\n            try {\r\n                const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}`;\r\n                const response = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                });\r\n                const data = await response.json();\r\n                setResults(data);\r\n            } catch (error) {\r\n                console.error('데이터 가져오기 실패:', error);\r\n            }\r\n        };\r\n        if (startStation && endStation) {\r\n            fetchDataFromSpring();\r\n        }\r\n    }, [startStation, endStation]);\r\n\r\n\r\n\r\n    const renderResults = () => {\r\n        return results.map((result, index) => (\r\n\r\n\r\n            <div key={index} className=\"resultsMap\">\r\n                <h1 className=\"resultsHeader\">길찾기 결과 {index + 1}</h1>\r\n                <h3>출발 시간: {Math.floor((currentTime) / (60*60))}시 {Math.floor((currentTime) % (60*60)/60)}분 {Math.floor((currentTime)% 60)}초, ({dayType})</h3>\r\n                <div className=\"visualRepresentation\" style={{ width: '1250px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\r\n                    {renderTransferBars(result)}\r\n                </div>\r\n                <p className=\"scheduleTime\">도착 시간(시간표): {Math.floor((currentTime+result.totalTime) / (60*60))}시 {Math.floor((currentTime+result.totalTime) % (60*60)/60)}분 {Math.floor((currentTime+result.totalTime)% 60)}초</p>\r\n                {result.path && (\r\n                    <>\r\n                        <p className=\"resultItem\">걸리는시간: {Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</p>\r\n                        {result.eachTypeOfLine.map((line, index) => (\r\n                            <p key={index} className=\"resultItem\">{index + 1}번 환승: {line}({result.eachTransferStation[index]}) - {Math.floor((currentTime+ingtime[index]) / (60*60))}시 {Math.floor((currentTime+ingtime[index]) % (60*60)/60)}분 {Math.floor((currentTime+ingtime[index])% 60)}초 열차 탑승</p>\r\n                        ))}\r\n                    </>\r\n                )}\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const renderTransferBars = (result) => {\r\n        const transferBars = [];\r\n        const iconSize = 20; // 이미지 크기\r\n        let i = 0;\r\n\r\n        // 환승역이 없는 경우 처리\r\n        if (result.eachTransferStation.length === 0) {\r\n            // 출발지에서 도착지까지 바로 이동하는 경우\r\n            transferBars.push(\r\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\r\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\r\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{startStation}({result.startLine})</span>\r\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</span>\r\n                </div>\r\n            );\r\n            return transferBars;\r\n        }\r\n\r\n        // 각 막대의 비율 계산\r\n        const totalBarWidth = result.totalTime;\r\n        let accumulatedWidth = 0;\r\n        let tt = 0; // tt 변수 초기화\r\n\r\n\r\n        result.eachTypeOfLine.forEach((line, index) => {\r\n            const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\r\n            const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\r\n            const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\r\n            ingtime[index]=0;\r\n\r\n            // 각 막대의 총합이 1250이 되도록 비율 조정\r\n            const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\r\n            const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\r\n            const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\r\n            const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\r\n\r\n\r\n            transferBars.push(\r\n                <div key={`go${index}`} style={{ display: 'inline-block', width: `${goBarWidth}px`, height: '30px', backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\r\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\r\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{Math.floor(result.eachTime[index] / 60)}분 {Math.floor(result.eachTime[index] % 60)}초</span>\r\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{(index === 0 ? startStation : result.eachTransferStation[index - 1])}({(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])})</span>\r\n                </div>\r\n            );\r\n\r\n            transferBars.push(\r\n                <div key={`transfer${index}`} style={{ display: 'inline-block', width: `${transferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\r\n                    <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedTransferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\r\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[index] / 60)}분 {Math.floor(result.eachWalkingTime[index] % 60)}초</span>\r\n                </div>\r\n            );\r\n\r\n            transferBars.push(\r\n                <div key={`wait${index}`} style={{ display: 'inline-block', width: `${waitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\r\n                    <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedWaitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\r\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[index] / 60)}분 {Math.floor(result.eachWaitingTime[index] % 60)}초 </span>\r\n                </div>\r\n            );\r\n            result.eachTime.forEach((_, index) => {\r\n                if (index === 0) {\r\n                    ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\r\n                } else {\r\n                    ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\r\n                }\r\n            });\r\n\r\n            accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\r\n            tt = tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];\r\n        });\r\n\r\n        // 마지막 열차 막대 추가\r\n        const lastIndex = result.eachTypeOfLine.length - 1;\r\n        const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt: result.totalTime) / totalBarWidth * 1250;\r\n        const lastTotalWidth = lastGoBarWidth;\r\n        const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\r\n        transferBars.push(\r\n            <div key={`go${lastIndex}`} style={{ display: 'inline-block', width: `${lastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\r\n                <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${lastAdjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\r\n                <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{Math.floor((result.totalTime - tt)/ 60)}분 {Math.floor(result.eachTime[lastIndex] % 60)}초</span>\r\n                <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{result.eachTransferStation[result.eachTransferStation.length - 1]}({result.eachTypeOfLine[result.eachTypeOfLine.length - 1]})</span>\r\n            </div>\r\n        );\r\n        return transferBars;\r\n    };\r\n    const getLineColor = (line) => {\r\n        const lineColors = {\r\n            '1호선': '#0d3692',\r\n            '2호선': '#33a23d',\r\n            '3호선': '#fe5d10',\r\n            '4호선': '#00a2d1',\r\n            '5호선': '#8b50a4',\r\n            '6호선': '#c55c1d',\r\n            '7호선': '#54640d',\r\n            '8호선': '#f14c82',\r\n        };\r\n        return lineColors[line] || '#000'; // 기본 색상은 검정색\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\r\n\r\n            <div className=\"resultsContainer\">\r\n                <h1 className=\"resultsHeader\">출발지/도착지</h1>\r\n                {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\r\n                {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\r\n                {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\r\n                {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\r\n            </div>\r\n\r\n            {renderResults()}\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default Pre;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}