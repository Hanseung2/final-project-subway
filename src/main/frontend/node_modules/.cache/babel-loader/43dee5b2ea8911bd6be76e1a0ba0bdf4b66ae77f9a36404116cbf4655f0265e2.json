{"ast":null,"code":"import _slicedToArray from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import Main from'../components/section/Main';import subwayData from'../data/map.json';import{FaLongArrowAltRight}from\"react-icons/fa\";import{IoSearch,IoLocationOutline}from\"react-icons/io5\";import{setStartStation,setEndStation}from'../data/actions';import Right from'../components/section/Right';import{MdMyLocation}from\"react-icons/md\";import{FaMapMarkerAlt}from\"react-icons/fa\";// Import subway line images...\nimport line1 from'../assets/img/subwaymapmarker/1호선마커.png';import line2 from'../assets/img/subwaymapmarker/2호선마커.png';import line3 from'../assets/img/subwaymapmarker/3호선마커.png';import line4 from'../assets/img/subwaymapmarker/4호선마커.png';import line5 from'../assets/img/subwaymapmarker/5호선마커.png';import line6 from'../assets/img/subwaymapmarker/6호선마커.png';import line7 from'../assets/img/subwaymapmarker/7호선마커.png';import line8 from'../assets/img/subwaymapmarker/8호선마커.png';import line9 from'../assets/img/subwaymapmarker/9호선마커.png';import line10 from'../assets/img/subwaymapmarker/수인분당선마커.png';import line11 from'../assets/img/subwaymapmarker/경의중앙선마커.png';import line12 from'../assets/img/subwaymapmarker/경춘선마커.png';import line13 from'../assets/img/subwaymapmarker/공항철도1호선마커.png';import line14 from'../assets/img/subwaymapmarker/신림선마커.png';import line15 from'../assets/img/subwaymapmarker/우이신설선마커.png';import line16 from'../assets/img/subwaymapmarker/김포골드라인마커.png';import loc from'../assets/img/subwaymapmarker/현위치.png';import{Background}from'victory';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var lineImages={\"1호선\":line1,\"2호선\":line2,\"3호선\":line3,\"4호선\":line4,\"5호선\":line5,\"6호선\":line6,\"7호선\":line7,\"8호선\":line8,\"9호선\":line9,\"수인분당선\":line10,\"경의중앙선\":line11,\"경춘선\":line12,\"공항철도1호선\":line13,\"신림선\":line14,\"우이신설선\":line15,\"김포골드라인\":line16};var Map=function Map(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRightVisible=_useState2[0],setIsRightVisible=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchTerm=_useState4[0],setSearchTerm=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),map=_useState6[0],setMap=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),userMarker=_useState8[0],setUserMarker=_useState8[1];// 사용자 마커 상태 추가\nvar _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),stationName=_useState10[0],setStationName=_useState10[1];var dispatch=useDispatch();var navigate=useNavigate();var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),suggestions=_useState12[0],setSuggestions=_useState12[1];// Define suggestions state\nvar startStation=useSelector(function(state){return state.startStation;});var endStation=useSelector(function(state){return state.endStation;});// 제안 항목 클릭 처리 함수\nvar handleSuggestionItemClick=function handleSuggestionItemClick(suggestion){// '-' 포함 여부 확인하고 이후 문자열 제거\nvar sanitizedSuggestion=suggestion.includes('-')?suggestion.split('-')[0].trim():suggestion;setSearchTerm(sanitizedSuggestion);// 정제된 제안을 검색어로 설정\nsetSuggestions([]);// 제안 목록 초기화\n};// Function to handle search term change\nvar handleSearchTermChange=function handleSearchTermChange(e){var value=e.target.value;setSearchTerm(value);// Update search term state\n// Filter subway stations based on the search term\nvar filteredStations=subwayData.filter(function(station){return station.name.includes(value);}).slice(0,3);// Slice the array to get only the first 3 elements\nsetSuggestions(filteredStations.map(function(station){return\"\".concat(station.name,\" - \").concat(station.line);}));};var toggleRightVisibility=function toggleRightVisibility(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setIsRightVisible(!isRightVisible);setStationName(name);};useEffect(function(){window.setStation=function(stationName,type){if(type==='start'){dispatch(setStartStation(stationName));}else if(type==='end'){dispatch(setEndStation(stationName));}};var script=document.createElement('script');script.src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=a576239cea9ab4b2daf2a00e251e97e9&autoload=false\";script.async=true;document.head.appendChild(script);script.onload=function(){window.kakao.maps.load(function(){var mapContainer=document.getElementById('map');var mapOption={center:new window.kakao.maps.LatLng(37.5503,127.0731),level:5};var map=new window.kakao.maps.Map(mapContainer,mapOption);setMap(map);if('geolocation'in navigator){navigator.geolocation.getCurrentPosition(function(position){var userPosition=new window.kakao.maps.LatLng(position.coords.latitude,position.coords.longitude);map.setCenter(userPosition);});}else{console.log('Geolocation is not supported.');}subwayData.forEach(function(station,index){var markerPosition=new window.kakao.maps.LatLng(station.y,station.x);var markerImageSrc=lineImages[station.line];var markerImageSize=new window.kakao.maps.Size(24,30);var markerImageOption={offset:new window.kakao.maps.Point(12,35)};var markerImage=new window.kakao.maps.MarkerImage(markerImageSrc,markerImageSize,markerImageOption);var marker=new window.kakao.maps.Marker({position:markerPosition,map:map,image:markerImage});var content=\"\\n                        <div class=\\\"wrap\\\" id=\\\"overlay-\".concat(index,\"\\\">\\n                            <div class=\\\"info\\\">\\n                                <div class=\\\"title\\\">\\n                                    \").concat(station.name,\"\\n                                    <div class=\\\"close\\\" onclick=\\\"document.getElementById('overlay-\").concat(index,\"').style.display='none'\\\" title=\\\"\\uB2EB\\uAE30\\\"></div>\\n                                </div>\\n                                <div class=\\\"body\\\">\\n                                    <div class=\\\"desc\\\">\\n                                        <div class=\\\"ellipsis\\\">\").concat(station.line,\" \").concat(station.name,\"</div>\\n                                        <div>\\n                                            <button onclick=\\\"setStation('\").concat(station.name,\"', 'start')\\\">\\uCD9C\\uBC1C</button>\\n                                            <button onclick=\\\"setStation('\").concat(station.name,\"', 'end')\\\">\\uB3C4\\uCC29</button>\\n                                            <button onclick=\\\"window.goToLivePage('\").concat(station.name,\"')\\\">\\uC2E4\\uC2DC\\uAC04 \\uB3C4\\uCC29\\uC815\\uBCF4</button>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    \");var overlay=new window.kakao.maps.CustomOverlay({content:content,position:marker.getPosition(),yAnchor:1});window.kakao.maps.event.addListener(marker,'click',function(){overlay.setMap(map);document.querySelectorAll('.wrap').forEach(function(el){return el.style.display='none';});document.getElementById(\"overlay-\".concat(index)).style.display='block';});});window.goToLivePage=function(stationName){toggleRightVisibility(stationName);};});};return function(){document.head.removeChild(script);delete window.goToArrivalPage;};},[dispatch,navigate]);var handleSearch=function handleSearch(e){e.preventDefault();var station=subwayData.find(function(station){return station.name.includes(searchTerm);});if(station&&map){var moveLatLon=new window.kakao.maps.LatLng(station.y,station.x);map.setCenter(moveLatLon);map.setLevel(4);// 오버레이를 표시할 위치에 커스텀 오버레이 생성 및 표시\nvar content=\"\\n                <div class=\\\"wrap\\\">\\n                    <div class=\\\"info\\\">\\n                        <div class=\\\"title\\\">\\n                            \".concat(station.name,\"\\n                            <button class=\\\"close\\\" title=\\\"\\uB2EB\\uAE30\\\" onclick=\\\"document.querySelector('.wrap').style.display = 'none'\\\"></button>\\n                        </div>\\n                        <div class=\\\"body\\\">\\n                            <div class=\\\"desc\\\">\\n                                <div class=\\\"ellipsis\\\">\").concat(station.line,\" \").concat(station.name,\"</div>\\n                                <div>\\n                                    <button onclick=\\\"setStation('\").concat(station.name,\"', 'start')\\\">\\uCD9C\\uBC1C</button>\\n                                    <button onclick=\\\"setStation('\").concat(station.name,\"', 'end')\\\">\\uB3C4\\uCC29</button>\\n                                    <button onclick=\\\"window.goToLivePage('\").concat(station.name,\"')\\\">\\uC2E4\\uC2DC\\uAC04 \\uB3C4\\uCC29\\uC815\\uBCF4</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            \");var overlay=new window.kakao.maps.CustomOverlay({content:content,position:moveLatLon,yAnchor:1});overlay.setMap(map);}};var moveToUserLocation=function moveToUserLocation(){if(map&&'geolocation'in navigator){navigator.geolocation.getCurrentPosition(function(position){var userPosition=new window.kakao.maps.LatLng(position.coords.latitude,position.coords.longitude);map.setCenter(userPosition);// 마커가 이미 존재하면 제거\nif(userMarker){userMarker.setMap(null);setUserMarker(null);}else{// Create a marker for the user's current location\nvar markerImageSrc=loc;// You need to provide a valid image URL or path\nvar markerImageSize=new window.kakao.maps.Size(30,40);// Customize size as needed\nvar markerImageOption={offset:new window.kakao.maps.Point(12,35)};var markerImage=new window.kakao.maps.MarkerImage(markerImageSrc,markerImageSize,markerImageOption);var _userMarker=new window.kakao.maps.Marker({position:userPosition,map:map,image:markerImage});setUserMarker(_userMarker);}});}};return/*#__PURE__*/_jsxs(Main,{title:\"\\uC9C0\\uB3C4\",description:\"\\uC9C0\\uB3C4 \\uD398\\uC774\\uC9C0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-form\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC9C0\\uD558\\uCCA0\\uC5ED \\uAC80\\uC0C9\",value:searchTerm,onChange:handleSearchTermChange// Use handleSearchTermChange for input change\n}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",children:[\" \",/*#__PURE__*/_jsx(IoSearch,{size:20}),\" \"]})]}),suggestions.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions\",children:suggestions.map(function(suggestion,index){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return handleSuggestionItemClick(suggestion);},children:suggestion},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{id:\"map\",children:\"\\uC9C0\\uB3C4 \\uB85C\\uB529\\uC911...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"location-button\",onClick:moveToUserLocation,children:/*#__PURE__*/_jsx(MdMyLocation,{})}),isRightVisible&&/*#__PURE__*/_jsx(Right,{isVisible:isRightVisible,toggleRightVisibility:toggleRightVisibility,stationName:stationName})]});};export default Map;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useDispatch","useSelector","Main","subwayData","FaLongArrowAltRight","IoSearch","IoLocationOutline","setStartStation","setEndStation","Right","MdMyLocation","FaMapMarkerAlt","line1","line2","line3","line4","line5","line6","line7","line8","line9","line10","line11","line12","line13","line14","line15","line16","loc","Background","jsx","_jsx","jsxs","_jsxs","lineImages","Map","_useState","_useState2","_slicedToArray","isRightVisible","setIsRightVisible","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","map","setMap","_useState7","_useState8","userMarker","setUserMarker","_useState9","_useState10","stationName","setStationName","dispatch","navigate","_useState11","_useState12","suggestions","setSuggestions","startStation","state","endStation","handleSuggestionItemClick","suggestion","sanitizedSuggestion","includes","split","trim","handleSearchTermChange","e","value","target","filteredStations","filter","station","name","slice","concat","line","toggleRightVisibility","arguments","length","undefined","window","setStation","type","script","document","createElement","src","async","head","appendChild","onload","kakao","maps","load","mapContainer","getElementById","mapOption","center","LatLng","level","navigator","geolocation","getCurrentPosition","position","userPosition","coords","latitude","longitude","setCenter","console","log","forEach","index","markerPosition","y","x","markerImageSrc","markerImageSize","Size","markerImageOption","offset","Point","markerImage","MarkerImage","marker","Marker","image","content","overlay","CustomOverlay","getPosition","yAnchor","event","addListener","querySelectorAll","el","style","display","goToLivePage","removeChild","goToArrivalPage","handleSearch","preventDefault","find","moveLatLon","setLevel","moveToUserLocation","title","description","children","className","onSubmit","placeholder","onChange","size","onClick","id","isVisible"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Main from '../components/section/Main';\nimport subwayData from '../data/map.json';\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\nimport { IoSearch, IoLocationOutline } from \"react-icons/io5\";\nimport { setStartStation, setEndStation } from '../data/actions';\nimport Right from '../components/section/Right';\nimport { MdMyLocation } from \"react-icons/md\";\n\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\n\n// Import subway line images...\nimport line1 from '../assets/img/subwaymapmarker/1호선마커.png';\nimport line2 from '../assets/img/subwaymapmarker/2호선마커.png';\nimport line3 from '../assets/img/subwaymapmarker/3호선마커.png';\nimport line4 from '../assets/img/subwaymapmarker/4호선마커.png';\nimport line5 from '../assets/img/subwaymapmarker/5호선마커.png';\nimport line6 from '../assets/img/subwaymapmarker/6호선마커.png';\nimport line7 from '../assets/img/subwaymapmarker/7호선마커.png';\nimport line8 from '../assets/img/subwaymapmarker/8호선마커.png';\nimport line9 from '../assets/img/subwaymapmarker/9호선마커.png';\nimport line10 from '../assets/img/subwaymapmarker/수인분당선마커.png';\nimport line11 from '../assets/img/subwaymapmarker/경의중앙선마커.png';\nimport line12 from '../assets/img/subwaymapmarker/경춘선마커.png';\nimport line13 from '../assets/img/subwaymapmarker/공항철도1호선마커.png';\nimport line14 from '../assets/img/subwaymapmarker/신림선마커.png';\nimport line15 from '../assets/img/subwaymapmarker/우이신설선마커.png';\nimport line16 from '../assets/img/subwaymapmarker/김포골드라인마커.png';\n\nimport loc from '../assets/img/subwaymapmarker/현위치.png';\nimport { Background } from 'victory';\n\nconst lineImages = {\n    \"1호선\": line1,\n    \"2호선\": line2,\n    \"3호선\": line3,\n    \"4호선\": line4,\n    \"5호선\": line5,\n    \"6호선\": line6,\n    \"7호선\": line7,\n    \"8호선\": line8,\n    \"9호선\": line9,\n    \"수인분당선\": line10,\n    \"경의중앙선\": line11,\n    \"경춘선\": line12,\n    \"공항철도1호선\": line13,\n    \"신림선\": line14,\n    \"우이신설선\": line15,\n    \"김포골드라인\": line16,\n};\n\n\nconst Map = () => {\n    const [isRightVisible, setIsRightVisible] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [map, setMap] = useState(null);\n    const [userMarker, setUserMarker] = useState(null); // 사용자 마커 상태 추가\n    const [stationName, setStationName] = useState(null);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [suggestions, setSuggestions] = useState([]); // Define suggestions state\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n\n    // 제안 항목 클릭 처리 함수\n    const handleSuggestionItemClick = (suggestion) => {\n    // '-' 포함 여부 확인하고 이후 문자열 제거\n    const sanitizedSuggestion = suggestion.includes('-') ? suggestion.split('-')[0].trim() : suggestion;\n        setSearchTerm(sanitizedSuggestion); // 정제된 제안을 검색어로 설정\n        setSuggestions([]); // 제안 목록 초기화\n    };\n\n\n// Function to handle search term change\nconst handleSearchTermChange = (e) => {\n    const value = e.target.value;\n    setSearchTerm(value); // Update search term state\n\n    // Filter subway stations based on the search term\n    const filteredStations = subwayData.filter(station => station.name.includes(value)).slice(0, 3); // Slice the array to get only the first 3 elements\n    setSuggestions(filteredStations.map(station => `${station.name} - ${station.line}`));\n};\n\n\n    const toggleRightVisibility = (name = null) => {\n        setIsRightVisible(!isRightVisible);\n        setStationName(name);\n    };    \n\n\n    useEffect(() => {\n        window.setStation = (stationName, type) => {\n            if (type === 'start') {\n                dispatch(setStartStation(stationName));\n            } else if (type === 'end') {\n                dispatch(setEndStation(stationName));\n            }\n        };\n\n        const script = document.createElement('script');\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=a576239cea9ab4b2daf2a00e251e97e9&autoload=false\";\n        script.async = true;\n        document.head.appendChild(script);\n\n        script.onload = () => {\n            window.kakao.maps.load(() => {\n                const mapContainer = document.getElementById('map');\n                const mapOption = {\n                    center: new window.kakao.maps.LatLng(37.5503, 127.0731),\n                    level: 5\n                };\n\n                const map = new window.kakao.maps.Map(mapContainer, mapOption);\n                setMap(map);\n\n                if ('geolocation' in navigator) {\n                    navigator.geolocation.getCurrentPosition(position => {\n                        const userPosition = new window.kakao.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                        map.setCenter(userPosition);\n                    });\n                } else {\n                    console.log('Geolocation is not supported.');\n                }\n\n                subwayData.forEach((station, index) => {\n                    const markerPosition = new window.kakao.maps.LatLng(station.y, station.x);\n                    const markerImageSrc = lineImages[station.line];\n                    const markerImageSize = new window.kakao.maps.Size(24, 30);\n                    const markerImageOption = { offset: new window.kakao.maps.Point(12, 35) };\n                    const markerImage = new window.kakao.maps.MarkerImage(markerImageSrc, markerImageSize, markerImageOption);\n\n                    const marker = new window.kakao.maps.Marker({\n                        position: markerPosition,\n                        map: map,\n                        image: markerImage\n                    });\n\n                    const content = `\n                        <div class=\"wrap\" id=\"overlay-${index}\">\n                            <div class=\"info\">\n                                <div class=\"title\">\n                                    ${station.name}\n                                    <div class=\"close\" onclick=\"document.getElementById('overlay-${index}').style.display='none'\" title=\"닫기\"></div>\n                                </div>\n                                <div class=\"body\">\n                                    <div class=\"desc\">\n                                        <div class=\"ellipsis\">${station.line} ${station.name}</div>\n                                        <div>\n                                            <button onclick=\"setStation('${station.name}', 'start')\">출발</button>\n                                            <button onclick=\"setStation('${station.name}', 'end')\">도착</button>\n                                            <button onclick=\"window.goToLivePage('${station.name}')\">실시간 도착정보</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    `;\n\n                    const overlay = new window.kakao.maps.CustomOverlay({\n                        content: content,\n                        position: marker.getPosition(),\n                        yAnchor: 1\n                    });\n\n                    window.kakao.maps.event.addListener(marker, 'click', function () {\n                        overlay.setMap(map);\n                        document.querySelectorAll('.wrap').forEach(el => el.style.display = 'none');\n                        document.getElementById(`overlay-${index}`).style.display = 'block';\n                    });\n                });\n\n                window.goToLivePage = (stationName) => {                        \n                    toggleRightVisibility(stationName);\n                };\n            });\n        };\n\n        return () => {\n            document.head.removeChild(script);\n            delete window.goToArrivalPage;\n        };\n    }, [dispatch, navigate]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        const station = subwayData.find(station => station.name.includes(searchTerm));\n        if (station && map) {\n            const moveLatLon = new window.kakao.maps.LatLng(station.y, station.x);\n            map.setCenter(moveLatLon);\n            map.setLevel(4);\n    \n            // 오버레이를 표시할 위치에 커스텀 오버레이 생성 및 표시\n            const content = `\n                <div class=\"wrap\">\n                    <div class=\"info\">\n                        <div class=\"title\">\n                            ${station.name}\n                            <button class=\"close\" title=\"닫기\" onclick=\"document.querySelector('.wrap').style.display = 'none'\"></button>\n                        </div>\n                        <div class=\"body\">\n                            <div class=\"desc\">\n                                <div class=\"ellipsis\">${station.line} ${station.name}</div>\n                                <div>\n                                    <button onclick=\"setStation('${station.name}', 'start')\">출발</button>\n                                    <button onclick=\"setStation('${station.name}', 'end')\">도착</button>\n                                    <button onclick=\"window.goToLivePage('${station.name}')\">실시간 도착정보</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `;\n            const overlay = new window.kakao.maps.CustomOverlay({\n                content: content,\n                position: moveLatLon,\n                yAnchor: 1\n            });\n    \n            overlay.setMap(map);\n        }\n    };\n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n\n\n    const moveToUserLocation = () => {\n        if (map && 'geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition(position => {\n                const userPosition = new window.kakao.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                map.setCenter(userPosition);\n\n                // 마커가 이미 존재하면 제거\n                if (userMarker) {\n                    userMarker.setMap(null);\n                    setUserMarker(null);\n                } else {\n    \n                    // Create a marker for the user's current location\n                    const markerImageSrc = loc ; // You need to provide a valid image URL or path\n                    const markerImageSize = new window.kakao.maps.Size(30, 40); // Customize size as needed\n                    const markerImageOption = { offset: new window.kakao.maps.Point(12, 35) };\n                    const markerImage = new window.kakao.maps.MarkerImage(markerImageSrc, markerImageSize, markerImageOption);\n        \n                    const userMarker = new window.kakao.maps.Marker({\n                        position: userPosition,\n                        map: map,\n                        image: markerImage\n                });\n                setUserMarker(userMarker);\n\n            }\n                \n            });\n        }\n    };\n\n    return (\n        <Main title=\"지도\" description=\"지도 페이지\">\n            <div className=\"search-container\">\n                <div className=\"search-form\">\n                    <form onSubmit={handleSearch}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"지하철역 검색\"\n                            value={searchTerm}\n                            onChange={handleSearchTermChange} // Use handleSearchTermChange for input change\n                        />\n                        <button type=\"submit\"> <IoSearch size={20} /> </button>\n                    </form>\n                    \n                    { suggestions.length > 0 && (\n                        <ul className=\"suggestions\">\n                            {suggestions.map((suggestion, index) => (\n                                <li key={index} onClick={() => handleSuggestionItemClick(suggestion)}>{suggestion}</li>\n                            ))}\n                        </ul>\n                    )}\n                    {/*\n                    <div className=\"route-box\">\n                        <div className=\"route-info\">출발지: {startStation}</div>\n                        <FaLongArrowAltRight />\n                        <div className=\"route-info\">도착지: {endStation}</div>\n                        <button onClick={navigateToRouteResult}>실시간 길찾기</button>\n                    </div>\n                */}\n                </div>\n            </div>\n            <div id=\"map\">지도 로딩중...</div>\n            {/* 내 위치로 이동 버튼 */}\n            <div className=\"location-button\" onClick={moveToUserLocation}>\n                <MdMyLocation/>\n            </div>\n            {isRightVisible && <Right isVisible={isRightVisible} toggleRightVisibility={toggleRightVisibility} stationName={stationName} />}\n        </Main>\n    );\n};\n\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}