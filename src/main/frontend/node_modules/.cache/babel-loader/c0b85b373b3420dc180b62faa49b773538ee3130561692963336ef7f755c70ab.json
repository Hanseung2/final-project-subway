{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Main from'../components/section/Main';import{useSelector}from'react-redux';import{getCurrentTime,getDayType}from'../data/time';import train from'../assets/img/nav/train.png';import wait from'../assets/img/nav/waiting.png';import walk from'../assets/img/nav/walk.png';import{Link,useNavigate}from'react-router-dom';// React Router를 사용한다고 가정합니다.\nimport{useTime}from'../data/TimeContext';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ctime=0;export var navPath=[];var Nav=function Nav(){var startStation=useSelector(function(state){return state.startStation;});var endStation=useSelector(function(state){return state.endStation;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];// 로딩 상태 변수\nvar navigate=useNavigate();// useHistory 훅 사용\nvar _useTime=useTime(),hour=_useTime.hour,minute=_useTime.minute,weekday=_useTime.weekday;var ingtime=[0];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showGuide=_useState4[0],setShowGuide=_useState4[1];var handleButtonClicke=function handleButtonClicke(){setShowGuide(!showGuide);};var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];useEffect(function(){var fetchDataFromSpring=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;url=\"http://localhost:8080/SearchRoute?start=\".concat(encodeURIComponent(startStation),\"&end=\").concat(encodeURIComponent(endStation),\"&time=\").concat(encodeURIComponent(ctime),\"&day=\").concat(weekday);_context.next=4;return fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;setResults(data);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error('데이터 가져오기 실패:',_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function fetchDataFromSpring(){return _ref.apply(this,arguments);};}();if(startStation&&endStation){fetchDataFromSpring();}},[startStation,endStation]);var hourNum=parseInt(hour,10);var minuteNum=parseInt(minute,10);ctime=hourNum*3600+minuteNum*60;console.log(ctime);var handleButtonClick=function handleButtonClick(){setLoading(true);setTimeout(function(){setLoading(false);navigate('/Pre',{state:{results:results}});},1000);};var renderResults=function renderResults(){return results.map(function(result,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"resultsMap\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"resultsHeader\",children:/*#__PURE__*/_jsxs(\"span\",{style:{backgroundColor:'#fff5b1'},children:[\"Result \",index+1]})}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uCD9C\\uBC1C \\uC2DC\\uAC04 : \",Math.floor(ctime/(60*60)),\"\\uC2DC \",Math.floor(ctime%(60*60)/60),\"\\uBD84 \",Math.floor(ctime%60),\"\\uCD08 (\",weekday,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"scheduleTime\",children:[\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(\\uC2DC\\uAC04\\uD45C) : \",Math.floor((ctime+result.totalTime)/(60*60)),\"\\uC2DC \",Math.floor((ctime+result.totalTime)%(60*60)/60),\"\\uBD84 \",Math.floor((ctime+result.totalTime)%60),\"\\uCD08\"]}),/*#__PURE__*/_jsx(\"br\",{}),result.path&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uACBD\\uB85C: \",result.path.map(function(place,index){// eachTransferStation 배열에 포함된 역인지 확인\nif(result.eachTransferStation&&result.eachTransferStation.includes(place)){return/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:place},index);}else{return/*#__PURE__*/_jsx(\"span\",{children:place},index);}}).reduce(function(prev,curr){return[prev,' -> ',curr];})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"visualRepresentation\",style:{width:'1250px',height:'30px',backgroundColor:'lightgray',margin:'20px 0'},children:renderTransferBars(result)}),/*#__PURE__*/_jsx(\"br\",{}),result.path&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uAC78\\uB9AC\\uB294\\uC2DC\\uAC04 : \",Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08\"]}),result.eachTypeOfLine.map(function(line,index){return/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[index+1,\"\\uBC88\\uC9F8 \\uD658\\uC2B9\\uC5ED : \",line,\"(\",result.eachTransferStation[index],\") - \",Math.floor((ctime+ingtime[index])/(60*60)),\"\\uC2DC \",Math.floor((ctime+ingtime[index])%(60*60)/60),\"\\uBD84 \",Math.floor((ctime+ingtime[index])%60),\"\\uCD08 \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]},index);})]})]},index);});};var makepath=function makepath(results){var allPaths=[];results.forEach(function(result){allPaths.push(result.path);});return allPaths;};var allPaths=makepath(results);navPath=allPaths;console.log(allPaths);// 콘솔에 모든 경로 출력\nvar renderTransferBars=function renderTransferBars(result){var transferBars=[];var iconSize=20;// 이미지 크기\nvar i=0;// 환승역이 없는 경우 처리\nif(result.eachTransferStation.length===0){// 출발지에서 도착지까지 바로 이동하는 경우\ntransferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:'100%',height:'30px',backgroundColor:getLineColor(result.startLine),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:'100%',maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[startStation,\"(\",result.startLine,\")\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08\"]})]},\"go\".concat(i)));return transferBars;}// 각 막대의 비율 계산\nvar totalBarWidth=result.totalTime;var accumulatedWidth=0;var tt=0;// tt 변수 초기화\nresult.eachTypeOfLine.forEach(function(line,index){var goBarWidth=result.eachTime[index]/totalBarWidth*1250;var transferBarWidth=result.eachWalkingTime[index]/totalBarWidth*1250;var waitingBarWidth=result.eachWaitingTime[index]/totalBarWidth*1250;ingtime[index]=0;// 각 막대의 총합이 1250이 되도록 비율 조정\nvar totalRatio=goBarWidth+transferBarWidth+waitingBarWidth;var adjustedGoBarWidth=goBarWidth/totalRatio*1250;var adjustedTransferBarWidth=transferBarWidth/totalRatio*1250;var adjustedWaitingBarWidth=waitingBarWidth/totalRatio*1250;transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(goBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedGoBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[Math.floor(result.eachTime[index]/60),\"\\uBD84 \",Math.floor(result.eachTime[index]%60),\"\\uCD08\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[index===0?startStation:result.eachTransferStation[index-1],\"(\",index===0?result.startLine:result.eachTypeOfLine[index-1],\")\"]})]},\"go\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(transferBarWidth,\"px\"),height:'30px',backgroundColor:'lightgray',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:walk,alt:\"walk\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedTransferBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWalkingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWalkingTime[index]%60),\"\\uCD08\"]})]},\"transfer\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(waitingBarWidth,\"px\"),height:'30px',backgroundColor:'red',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:wait,alt:\"wait\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedWaitingBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWaitingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWaitingTime[index]%60),\"\\uCD08 \"]})]},\"wait\".concat(index)));result.eachTime.forEach(function(_,index){if(index===0){ingtime[index]=result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];}else{ingtime[index]=ingtime[index-1]+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];}});accumulatedWidth+=adjustedGoBarWidth+adjustedTransferBarWidth+adjustedWaitingBarWidth;tt=tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];});// 마지막 열차 막대 추가\nvar lastIndex=result.eachTypeOfLine.length-1;var lastGoBarWidth=(result.eachTime[lastIndex]!==0?result.totalTime-tt:result.totalTime)/totalBarWidth*1250;var lastTotalWidth=lastGoBarWidth;var lastAdjustedGoBarWidth=lastGoBarWidth/lastTotalWidth*(1250-accumulatedWidth);transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(lastGoBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(result.eachTypeOfLine[lastIndex]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"50px\",maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[Math.floor((result.totalTime-tt)/60),\"\\uBD84 \",Math.floor(result.eachTime[lastIndex]%60),\"\\uCD08\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',top:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[result.eachTransferStation[result.eachTransferStation.length-1],\"(\",result.eachTypeOfLine[result.eachTypeOfLine.length-1],\")\"]})]},\"go\".concat(lastIndex)));return transferBars;};var getLineColor=function getLineColor(line){var lineColors={'1호선':'#0d3692','2호선':'#33a23d','3호선':'#fe5d10','4호선':'#00a2d1','5호선':'#8b50a4','6호선':'#c55c1d','7호선':'#54640d','8호선':'#f14c82'};return lineColors[line]||'#000';// 기본 색상은 검정색\n};return/*#__PURE__*/_jsxs(Main,{title:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",description:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"resultsContainer\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"resultsHeader\",children:[\"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0 \",/*#__PURE__*/_jsx(\"p\",{className:\"pre-but\",children:loading?/*#__PURE__*/_jsx(\"div\",{children:\"\\uB85C\\uB529 \\uC911...\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleButtonClick,style:{backgroundColor:'#4CAF50',color:'white',border:'none',borderRadius:'8px',cursor:'pointer'},children:\"AI Predict\"})})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC124\\uC815\\uB41C \\uC2DC\\uAC04: \",hour,\"\\uC2DC \",minute,\"\\uBD84 (\",weekday,\")\"]}),startStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uCD9C\\uBC1C\\uC9C0: \",startStation]}),endStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uB3C4\\uCC29\\uC9C0: \",endStation]}),!startStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),!endStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative',display:'inline-block'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleButtonClicke,style:{backgroundColor:'#007bff',color:'white',border:'none',borderRadius:'30px',cursor:'pointer',width:'80px',// 너비 설정\nheight:'40px',// 높이 설정\nfontSize:'16px',// 폰트 크기 설정\nmargin:'10px'// 외부 여백 설정 (선택 사항)\n},children:\"Guide\"}),showGuide&&/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',top:'50px',// 팝업 창의 위치 조정 (원하는 위치로 설정)\nleft:'100px',// 화면 가운데 정렬을 위해 left를 50%로 설정\ntransform:'translate(-50%, 0)',// 화면 가운데 정렬을 위한 transform 사용\nbackgroundColor:'white',border:'1px solid #ccc',borderRadius:'5px',padding:'10px',width:'200px',boxShadow:'0 4px 8px rgba(0,0,0,0.1)',textAlign:'center'// 텍스트 가운데 정렬을 위한 textAlign 설정\n},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,style:{maxWidth:'50px',maxHeight:'100%',width:'auto',height:'auto',marginRight:'10px'// 이미지 오른쪽 여백 설정\n}}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC5F4\\uCC28\\uB97C \\uD0C0\\uB294 \\uC2DC\\uAC04\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"img\",{src:walk,style:{maxWidth:'50px',maxHeight:'100%',width:'auto',height:'auto',marginRight:'10px'// 이미지 오른쪽 여백 설정\n}}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD658\\uC2B9\\uC5ED\\uAE4C\\uC9C0 \\uB3C4\\uBCF4 \\uC2DC\\uAC04\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"img\",{src:wait,style:{maxWidth:'50px',maxHeight:'100%',width:'auto',height:'auto',marginRight:'10px'// 이미지 오른쪽 여백 설정\n}}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC5F4\\uCC28\\uB97C \\uAE30\\uB2E4\\uB9AC\\uB294 \\uC2DC\\uAC04\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleButtonClicke,style:{backgroundColor:'#007bff',color:'white',border:'none',borderRadius:'5px',cursor:'pointer',width:'100%',padding:'5px 0',fontSize:'14px',marginTop:'10px'},children:\"\\uB2EB\\uAE30\"})]})]}),renderResults()]});};export default Nav;","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","Link","useNavigate","useTime","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","ctime","navPath","Nav","startStation","state","endStation","_useState","_useState2","_slicedToArray","loading","setLoading","navigate","_useTime","hour","minute","weekday","ingtime","_useState3","_useState4","showGuide","setShowGuide","handleButtonClicke","_useState5","_useState6","results","setResults","fetchDataFromSpring","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","wrap","_callee$","_context","prev","next","concat","encodeURIComponent","fetch","method","headers","sent","json","t0","console","error","stop","apply","arguments","hourNum","parseInt","minuteNum","log","handleButtonClick","setTimeout","renderResults","map","result","index","className","children","style","backgroundColor","Math","floor","totalTime","path","place","eachTransferStation","includes","color","reduce","curr","width","height","margin","renderTransferBars","eachTypeOfLine","line","makepath","allPaths","forEach","push","transferBars","iconSize","i","length","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","bottom","totalBarWidth","accumulatedWidth","tt","goBarWidth","eachTime","transferBarWidth","eachWalkingTime","waitingBarWidth","eachWaitingTime","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","_","lastIndex","lastGoBarWidth","lastTotalWidth","lastAdjustedGoBarWidth","lineColors","title","description","onClick","border","borderRadius","cursor","fontSize","padding","boxShadow","textAlign","alignItems","marginRight","marginTop"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Nav.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\nimport { Link, useNavigate } from 'react-router-dom'; // React Router를 사용한다고 가정합니다.\nimport { useTime } from '../data/TimeContext';\n\nexport let ctime = 0;\nexport let navPath = [];\n\nconst Nav = () => {\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n    const [loading, setLoading] = useState(false); // 로딩 상태 변수\n    const navigate  = useNavigate(); // useHistory 훅 사용\n    const { hour, minute, weekday } = useTime();\n    let ingtime=[0];\n    const [showGuide, setShowGuide] = useState(false);\n\n    const handleButtonClicke = () => {\n        setShowGuide(!showGuide);\n    };\n\n    const [results, setResults] = useState([\n    ]);\n\n\n\n    useEffect(() => {\n        const fetchDataFromSpring = async () => {\n            try {\n                const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}&time=${encodeURIComponent(ctime)}&day=${weekday}`;\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                });\n                const data = await response.json();\n                setResults(data);\n            } catch (error) {\n                console.error('데이터 가져오기 실패:', error);\n            }\n        };\n        if (startStation && endStation) {\n            fetchDataFromSpring();\n        }\n    }, [startStation, endStation]);\n\n\n    const hourNum = parseInt(hour, 10);\n    const minuteNum = parseInt(minute, 10);\n    ctime = hourNum * 3600 + minuteNum * 60;\n    console.log(ctime);\n\n\n    const handleButtonClick = () => {\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            navigate('/Pre',{state:{results:results}});\n        }, 1000);\n    };\n\n\n\n\n\n    const renderResults = () => {\n        return results.map((result, index) => (\n            <div key={index} className=\"resultsMap\">\n                <h1 className=\"resultsHeader\"><span style={{ backgroundColor: '#fff5b1' }}>Result {index + 1}</span>\n                </h1>\n                <h3>출발 시간 : {Math.floor((ctime) / (60*60))}시 {Math.floor((ctime) % (60*60)/60)}분 {Math.floor((ctime)% 60)}초 ({weekday})</h3>\n                <p className=\"scheduleTime\">도착 시간(시간표) : {Math.floor((ctime+result.totalTime) / (60*60))}시 {Math.floor((ctime+result.totalTime) % (60*60)/60)}분 {Math.floor((ctime+result.totalTime)% 60)}초</p>\n\n               <br/>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">경로: {result.path.map((place, index) => {\n                            // eachTransferStation 배열에 포함된 역인지 확인\n                            if (result.eachTransferStation && result.eachTransferStation.includes(place)) {\n                                return <span key={index} style={{ color: 'red' }}>{place}</span>;\n                            } else {\n                                return <span key={index}>{place}</span>;\n                            }\n                        }).reduce((prev, curr) => [prev, ' -> ', curr])}</p>\n                    </>\n                )}\n\n                <div className=\"visualRepresentation\" style={{ width: '1250px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\n                    {renderTransferBars(result)}\n                </div>\n                <br/>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">걸리는시간 : {Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</p>\n                        {result.eachTypeOfLine.map((line, index) => (\n                            <p key={index} className=\"resultItem\">{index + 1}번째 환승역 : {line}({result.eachTransferStation[index]}) - {Math.floor((ctime+ingtime[index]) / (60*60))}시 {Math.floor((ctime+ingtime[index]) % (60*60)/60)}분 {Math.floor((ctime+ingtime[index])% 60)}초 열차 탑승</p>\n                        ))}\n                    </>\n                )}\n            </div>\n        ));\n    };\n\n\n    const makepath = (results) => {\n        let allPaths = [];\n        results.forEach(result => {\n            allPaths.push(result.path);\n        });\n        return allPaths;\n    };\n\n    const allPaths = makepath(results);\n    navPath = allPaths;\n    console.log(allPaths); // 콘솔에 모든 경로 출력\n\n    const renderTransferBars = (result) => {\n        const transferBars = [];\n        const iconSize = 20; // 이미지 크기\n        let i = 0;\n\n        // 환승역이 없는 경우 처리\n        if (result.eachTransferStation.length === 0) {\n            // 출발지에서 도착지까지 바로 이동하는 경우\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{startStation}({result.startLine})</span>\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초</span>\n                </div>\n            );\n            return transferBars;\n        }\n\n        // 각 막대의 비율 계산\n        const totalBarWidth = result.totalTime;\n        let accumulatedWidth = 0;\n        let tt = 0; // tt 변수 초기화\n\n\n        result.eachTypeOfLine.forEach((line, index) => {\n            const goBarWidth = result.eachTime[index] / totalBarWidth * 1250;\n            const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1250;\n            const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1250;\n            ingtime[index]=0;\n\n            // 각 막대의 총합이 1250이 되도록 비율 조정\n            const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n            const adjustedGoBarWidth = goBarWidth / totalRatio * 1250;\n            const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1250;\n            const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1250;\n\n\n            transferBars.push(\n                <div key={`go${index}`} style={{ display: 'inline-block', width: `${goBarWidth}px`, height: '30px', backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{Math.floor(result.eachTime[index] / 60)}분 {Math.floor(result.eachTime[index] % 60)}초</span>\n                    <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{(index === 0 ? startStation : result.eachTransferStation[index - 1])}({(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])})</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`transfer${index}`} style={{ display: 'inline-block', width: `${transferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedTransferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[index] / 60)}분 {Math.floor(result.eachWalkingTime[index] % 60)}초</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`wait${index}`} style={{ display: 'inline-block', width: `${waitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedWaitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[index] / 60)}분 {Math.floor(result.eachWaitingTime[index] % 60)}초 </span>\n                </div>\n            );\n            result.eachTime.forEach((_, index) => {\n                if (index === 0) {\n                    ingtime[index] = result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                } else {\n                    ingtime[index] = ingtime[index - 1] + result.eachTime[index] + result.eachWalkingTime[index] + result.eachWaitingTime[index];\n                }\n            });\n\n            accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n            tt = tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];\n        });\n\n        // 마지막 열차 막대 추가\n        const lastIndex = result.eachTypeOfLine.length - 1;\n        const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt: result.totalTime) / totalBarWidth * 1250;\n        const lastTotalWidth = lastGoBarWidth;\n\n        const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1250 - accumulatedWidth);\n        transferBars.push(\n            <div key={`go${lastIndex}`} style={{ display: 'inline-block', width: `${lastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `50px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{Math.floor((result.totalTime - tt)/ 60)}분 {Math.floor(result.eachTime[lastIndex] % 60)}초</span>\n                <span style={{ position: 'absolute', left: '50%', top: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{result.eachTransferStation[result.eachTransferStation.length - 1]}({result.eachTypeOfLine[result.eachTypeOfLine.length - 1]})</span>\n            </div>\n        );\n        return transferBars;\n    };\n    const getLineColor = (line) => {\n        const lineColors = {\n            '1호선': '#0d3692',\n            '2호선': '#33a23d',\n            '3호선': '#fe5d10',\n            '4호선': '#00a2d1',\n            '5호선': '#8b50a4',\n            '6호선': '#c55c1d',\n            '7호선': '#54640d',\n            '8호선': '#f14c82',\n        };\n        return lineColors[line] || '#000'; // 기본 색상은 검정색\n    };\n\n\n\n\n    return (\n        <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\n\n            <div className=\"resultsContainer\">\n                <h1 className=\"resultsHeader\">출발지/도착지 <p className=\"pre-but\">\n                    {loading ? (\n                        <div>로딩 중...</div>\n                    ) : (\n                        <button onClick={handleButtonClick} style={{\n                            backgroundColor: '#4CAF50',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '8px',\n                            cursor: 'pointer'\n                        }}>AI Predict</button>\n                    )}\n                </p></h1>\n                <p>설정된 시간: {hour}시 {minute}분 ({weekday})</p>\n                {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\n                {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\n                {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\n                {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\n            </div>\n\n            <div style={{position: 'relative', display: 'inline-block'}}>\n                <button\n                    onClick={handleButtonClicke}\n                    style={{\n                        backgroundColor: '#007bff',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '30px',\n                        cursor: 'pointer',\n                        width: '80px',       // 너비 설정\n                        height: '40px',       // 높이 설정\n                        fontSize: '16px',     // 폰트 크기 설정\n                        margin: '10px'        // 외부 여백 설정 (선택 사항)\n                    }}\n                >\n                    Guide\n                </button>\n                {showGuide && (\n                    <div style={{\n                        position: 'absolute',\n                        top: '50px', // 팝업 창의 위치 조정 (원하는 위치로 설정)\n                        left: '100px', // 화면 가운데 정렬을 위해 left를 50%로 설정\n                        transform: 'translate(-50%, 0)', // 화면 가운데 정렬을 위한 transform 사용\n                        backgroundColor: 'white',\n                        border: '1px solid #ccc',\n                        borderRadius: '5px',\n                        padding: '10px',\n                        width: '200px',\n                        boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                        textAlign: 'center' // 텍스트 가운데 정렬을 위한 textAlign 설정\n                    }}>\n                        <div style={{display: 'flex', alignItems: 'center'}}>\n                            <img\n                                src={train}\n                                style={{\n                                    maxWidth: '50px',\n                                    maxHeight: '100%',\n                                    width: 'auto',\n                                    height: 'auto',\n                                    marginRight: '10px' // 이미지 오른쪽 여백 설정\n                                }}\n                            />\n                            <p>열차를 타는 시간</p>\n                        </div>\n                        <br/>\n                        <div style={{display: 'flex', alignItems: 'center'}}>\n                            <img\n                                src={walk}\n                                style={{\n                                    maxWidth: '50px',\n                                    maxHeight: '100%',\n                                    width: 'auto',\n                                    height: 'auto',\n                                    marginRight: '10px' // 이미지 오른쪽 여백 설정\n                                }}\n                            />\n                            <p>환승역까지 도보 시간</p>\n                        </div>\n                        <br/>\n                        <div style={{display: 'flex', alignItems: 'center'}}>\n                            <img\n                                src={wait}\n                                style={{\n                                    maxWidth: '50px',\n                                    maxHeight: '100%',\n                                    width: 'auto',\n                                    height: 'auto',\n                                    marginRight: '10px' // 이미지 오른쪽 여백 설정\n                                }}\n                            />\n                            <p>열차를 기다리는 시간</p>\n                        </div>\n                        <button onClick={handleButtonClicke} style={{\n                            backgroundColor: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '5px',\n                            cursor: 'pointer',\n                            width: '100%',\n                            padding: '5px 0',\n                            fontSize: '14px',\n                            marginTop: '10px'\n                        }}>\n                            닫기\n                        </button>\n                    </div>\n                )}\n            </div>\n            {renderResults()}\n        </Main>\n    );\n};\n\nexport default Nav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}