{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/\\uC190\\uD55C\\uC2B9/Desktop/project-subway/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Main from'../components/section/Main';import{useSelector}from'react-redux';import{getCurrentTime,getDayType}from'../data/time';import train from'../assets/img/nav/train.png';import wait from'../assets/img/nav/waiting.png';import walk from'../assets/img/nav/walk.png';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Nav=function Nav(){var startStation=useSelector(function(state){return state.startStation;});var endStation=useSelector(function(state){return state.endStation;});var _useState=useState(getCurrentTime()),_useState2=_slicedToArray(_useState,2),currentTime=_useState2[0],setCurrentTime=_useState2[1];// 현재 시간 상태 변수\nvar _useState3=useState(getDayType()),_useState4=_slicedToArray(_useState3,2),dayType=_useState4[0],setDayType=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];useEffect(function(){var fetchDataFromSpring=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;url=\"http://localhost:8080/SearchRoute?start=\".concat(encodeURIComponent(startStation),\"&end=\").concat(encodeURIComponent(endStation));_context.next=4;return fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;setResults(data);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error('데이터 가져오기 실패:',_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function fetchDataFromSpring(){return _ref.apply(this,arguments);};}();if(startStation&&endStation){fetchDataFromSpring();}},[startStation,endStation]);var renderResults=function renderResults(){return results.map(function(result,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"resultsMap\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"resultsHeader\",children:[\"\\uAE38\\uCC3E\\uAE30 \\uACB0\\uACFC \",index+1]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uCD9C\\uBC1C \\uC2DC\\uAC04: \",currentTime,\", (\",dayType,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualRepresentation\",style:{width:'1000px',height:'30px',backgroundColor:'lightgray',margin:'20px 0'},children:renderTransferBars(result)}),/*#__PURE__*/_jsxs(\"p\",{className:\"scheduleTime\",children:[\"\\uB3C4\\uCC29 \\uC2DC\\uAC04(\\uC2DC\\uAC04\\uD45C): \",result.finalTime]}),result.path&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uCD9C\\uBC1C\\uC9C0: \",startStation]}),result.eachTypeOfLine.map(function(line,index){return/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[index+1,\"\\uBC88 \\uD658\\uC2B9: \",line,\"(\",result.eachTransferStation[index],\") - \",(Number(result.fiTime)+Number(result.eachWaitingTime[index])+Number(result.eachWalkingTime[index])+Number(result.eachTime[index])).toString(),\" \\uC5F4\\uCC28 \\uD0D1\\uC2B9\"]},index);}),/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uB3C4\\uCC29\\uC9C0: \",endStation]})]})]},index);});};var renderTransferBars=function renderTransferBars(result){var transferBars=[];var iconSize=20;// 이미지 크기\nvar i=0;// 환승역이 없는 경우 처리\nif(result.eachTransferStation.length===0){// 출발지에서 도착지까지 바로 이동하는 경우\ntransferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:'100%',height:'30px',backgroundColor:getLineColor(result.startLine),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:'100%',maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.startLine)},children:[Math.floor(result.totalTime/60),\"\\uBD84 \",Math.floor(result.totalTime%60),\"\\uCD08-\",startStation,\"(\",result.startLine,\")\"]})]},\"go\".concat(i)));return transferBars;}// 각 막대의 비율 계산\nvar totalBarWidth=result.totalTime;var accumulatedWidth=0;var tt=0;// tt 변수 초기화\nresult.eachTypeOfLine.forEach(function(line,index){var goBarWidth=result.eachTime[index]/totalBarWidth*1000;var transferBarWidth=result.eachWalkingTime[index]/totalBarWidth*1000;var waitingBarWidth=result.eachWaitingTime[index]/totalBarWidth*1000;// 각 막대의 총합이 1000이 되도록 비율 조정\nvar totalRatio=goBarWidth+transferBarWidth+waitingBarWidth;var adjustedGoBarWidth=goBarWidth/totalRatio*1000;var adjustedTransferBarWidth=transferBarWidth/totalRatio*1000;var adjustedWaitingBarWidth=waitingBarWidth/totalRatio*1000;transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(goBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedGoBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(index===0?result.startLine:result.eachTypeOfLine[index-1])},children:[Math.floor(result.eachTime[index]/60),\"\\uBD84 \",Math.floor(result.eachTime[index]%60),\"\\uCD08-\",index===0?startStation:result.eachTransferStation[index-1],\"(\",index===0?result.startLine:result.eachTypeOfLine[index-1],\")\"]})]},\"go\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(transferBarWidth,\"px\"),height:'30px',backgroundColor:'lightgray',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:walk,alt:\"walk\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedTransferBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWalkingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWalkingTime[index]%60),\"\\uCD08\"]})]},\"transfer\".concat(index)));transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(waitingBarWidth,\"px\"),height:'30px',backgroundColor:'red',position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:wait,alt:\"wait\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(adjustedWaitingBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:'#000'},children:[Math.floor(result.eachWaitingTime[index]/60),\"\\uBD84 \",Math.floor(result.eachWaitingTime[index]%60),\"\\uCD08 \"]})]},\"wait\".concat(index)));accumulatedWidth+=adjustedGoBarWidth+adjustedTransferBarWidth+adjustedWaitingBarWidth;tt=tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];});// 마지막 열차 막대 추가\nvar lastIndex=result.eachTypeOfLine.length-1;var lastGoBarWidth=(result.eachTime[lastIndex]!==0?result.totalTime-tt:result.totalTime)/totalBarWidth*1000;var lastTotalWidth=lastGoBarWidth;var lastAdjustedGoBarWidth=lastGoBarWidth/lastTotalWidth*(1000-accumulatedWidth);transferBars.push(/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block',width:\"\".concat(lastGoBarWidth,\"px\"),height:'30px',backgroundColor:getLineColor(result.eachTypeOfLine[lastIndex]),position:'relative',whiteSpace:'nowrap',overflow:'visible'},children:[/*#__PURE__*/_jsx(\"img\",{src:train,alt:\"subway\",style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)',maxWidth:\"\".concat(lastAdjustedGoBarWidth,\"px\"),maxHeight:'100%',width:'auto',height:'auto'}}),/*#__PURE__*/_jsxs(\"span\",{style:{position:'absolute',left:'50%',bottom:'-20px',transform:'translate(-50%, 0)',color:getLineColor(result.eachTypeOfLine[lastIndex])},children:[Math.floor((result.totalTime-tt)/60),\"\\uBD84 \",Math.floor(result.eachTime[lastIndex]%60),\"\\uCD08-\",result.eachTransferStation[result.eachTransferStation.length-1],\"(\",result.eachTypeOfLine[result.eachTypeOfLine.length-1],\")\"]})]},\"go\".concat(lastIndex)));console.log(lastGoBarWidth);return transferBars;};var getLineColor=function getLineColor(line){var lineColors={'1호선':'#0d3692','2호선':'#33a23d','3호선':'#fe5d10','4호선':'#00a2d1','5호선':'#8b50a4','6호선':'#c55c1d','7호선':'#54640d','8호선':'#f14c82'};return lineColors[line]||'#000';// 기본 색상은 검정색\n};return/*#__PURE__*/_jsxs(Main,{title:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30\",description:\"\\uC2E4\\uC2DC\\uAC04 \\uAE38\\uCC3E\\uAE30 \\uD398\\uC774\\uC9C0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"resultsContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"resultsHeader\",children:\"\\uCD9C\\uBC1C\\uC9C0/\\uB3C4\\uCC29\\uC9C0\"}),startStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uCD9C\\uBC1C\\uC9C0: \",startStation]}),endStation&&/*#__PURE__*/_jsxs(\"p\",{className:\"resultItem\",children:[\"\\uB3C4\\uCC29\\uC9C0: \",endStation]}),!startStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uCD9C\\uBC1C\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),!endStation&&/*#__PURE__*/_jsx(\"p\",{className:\"resultItem\",children:\"\\uB3C4\\uCC29\\uC9C0 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),renderResults()]});};export default Nav;","map":{"version":3,"names":["React","useEffect","useState","Main","useSelector","getCurrentTime","getDayType","train","wait","walk","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Nav","startStation","state","endStation","_useState","_useState2","_slicedToArray","currentTime","setCurrentTime","_useState3","_useState4","dayType","setDayType","_useState5","_useState6","results","setResults","fetchDataFromSpring","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","wrap","_callee$","_context","prev","next","concat","encodeURIComponent","fetch","method","headers","sent","json","t0","console","error","stop","apply","arguments","renderResults","map","result","index","className","children","style","width","height","backgroundColor","margin","renderTransferBars","finalTime","path","eachTypeOfLine","line","eachTransferStation","Number","fiTime","eachWaitingTime","eachWalkingTime","eachTime","toString","transferBars","iconSize","i","length","push","display","getLineColor","startLine","position","whiteSpace","overflow","src","alt","left","top","transform","maxWidth","maxHeight","bottom","color","Math","floor","totalTime","totalBarWidth","accumulatedWidth","tt","forEach","goBarWidth","transferBarWidth","waitingBarWidth","totalRatio","adjustedGoBarWidth","adjustedTransferBarWidth","adjustedWaitingBarWidth","lastIndex","lastGoBarWidth","lastTotalWidth","lastAdjustedGoBarWidth","log","lineColors","title","description"],"sources":["C:/Users/손한승/Desktop/project-subway/src/main/frontend/src/pages/Nav.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Main from '../components/section/Main';\nimport { useSelector } from 'react-redux';\nimport { getCurrentTime, getDayType } from '../data/time';\nimport train from '../assets/img/nav/train.png';\nimport wait from '../assets/img/nav/waiting.png';\nimport walk from '../assets/img/nav/walk.png';\n\nconst Nav = () => {\n    const startStation = useSelector(state => state.startStation);\n    const endStation = useSelector(state => state.endStation);\n    const [currentTime, setCurrentTime] = useState(getCurrentTime()); // 현재 시간 상태 변수\n    const [dayType, setDayType] = useState(getDayType());\n    const [results, setResults] = useState([]);\n\n\n    useEffect(() => {\n        const fetchDataFromSpring = async () => {\n            try {\n                const url = `http://localhost:8080/SearchRoute?start=${encodeURIComponent(startStation)}&end=${encodeURIComponent(endStation)}`;\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                });\n                const data = await response.json();\n                setResults(data);\n            } catch (error) {\n                console.error('데이터 가져오기 실패:', error);\n            }\n        };\n        if (startStation && endStation) {\n            fetchDataFromSpring();\n        }\n    }, [startStation, endStation]);\n\n    const renderResults = () => {\n        return results.map((result, index) => (\n            <div key={index} className=\"resultsMap\">\n                <h1 className=\"resultsHeader\">길찾기 결과 {index + 1}</h1>\n                <h3>출발 시간: {currentTime}, ({dayType})</h3>\n                <div className=\"visualRepresentation\" style={{ width: '1000px', height: '30px', backgroundColor: 'lightgray', margin: '20px 0' }}>\n                    {renderTransferBars(result)}\n                </div>\n                <p className=\"scheduleTime\">도착 시간(시간표): {result.finalTime}</p>\n                {result.path && (\n                    <>\n                        <p className=\"resultItem\">출발지: {startStation}</p>\n                        {result.eachTypeOfLine.map((line, index) => (\n                            <p key={index} className=\"resultItem\">{index + 1}번 환승: {line}({result.eachTransferStation[index]}) - {(Number(result.fiTime) + Number(result.eachWaitingTime[index]) + Number(result.eachWalkingTime[index]) + Number(result.eachTime[index])).toString()} 열차 탑승</p>\n                        ))}\n                        <p className=\"resultItem\">도착지: {endStation}</p>\n                    </>\n                )}\n            </div>\n        ));\n    };\n\n    const renderTransferBars = (result) => {\n        const transferBars = [];\n        const iconSize = 20; // 이미지 크기\n        let i = 0;\n\n        // 환승역이 없는 경우 처리\n        if (result.eachTransferStation.length === 0) {\n            // 출발지에서 도착지까지 바로 이동하는 경우\n            transferBars.push(\n                <div key={`go${i}`} style={{ display: 'inline-block', width: '100%', height: '30px', backgroundColor: getLineColor(result.startLine), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: '100%', maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.startLine) }}>{Math.floor(result.totalTime / 60)}분 {Math.floor(result.totalTime % 60)}초-{startStation}({result.startLine})</span>\n                </div>\n            );\n            return transferBars;\n        }\n\n        // 각 막대의 비율 계산\n        const totalBarWidth = result.totalTime;\n        let accumulatedWidth = 0;\n        let tt = 0; // tt 변수 초기화\n\n        result.eachTypeOfLine.forEach((line, index) => {\n            const goBarWidth = result.eachTime[index] / totalBarWidth * 1000;\n            const transferBarWidth = result.eachWalkingTime[index] / totalBarWidth * 1000;\n            const waitingBarWidth = result.eachWaitingTime[index] / totalBarWidth * 1000;\n\n            // 각 막대의 총합이 1000이 되도록 비율 조정\n            const totalRatio = goBarWidth + transferBarWidth + waitingBarWidth;\n            const adjustedGoBarWidth = goBarWidth / totalRatio * 1000;\n            const adjustedTransferBarWidth = transferBarWidth / totalRatio * 1000;\n            const adjustedWaitingBarWidth = waitingBarWidth / totalRatio * 1000;\n\n\n            transferBars.push(\n                <div key={`go${index}`} style={{ display: 'inline-block', width: `${goBarWidth}px`, height: '30px', backgroundColor: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1]) }}>{Math.floor(result.eachTime[index] / 60)}분 {Math.floor(result.eachTime[index] % 60)}초-{(index === 0 ? startStation : result.eachTransferStation[index - 1])}({(index === 0 ? result.startLine : result.eachTypeOfLine[index - 1])})</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`transfer${index}`} style={{ display: 'inline-block', width: `${transferBarWidth}px`, height: '30px', backgroundColor: 'lightgray', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={walk} alt=\"walk\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedTransferBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWalkingTime[index] / 60)}분 {Math.floor(result.eachWalkingTime[index] % 60)}초</span>\n                </div>\n            );\n\n            transferBars.push(\n                <div key={`wait${index}`} style={{ display: 'inline-block', width: `${waitingBarWidth}px`, height: '30px', backgroundColor: 'red', position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                    <img src={wait} alt=\"wait\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${adjustedWaitingBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                    <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: '#000' }}>{Math.floor(result.eachWaitingTime[index] / 60)}분 {Math.floor(result.eachWaitingTime[index] % 60)}초 </span>\n                </div>\n            );\n\n            accumulatedWidth += adjustedGoBarWidth + adjustedTransferBarWidth + adjustedWaitingBarWidth;\n            tt = tt+result.eachTime[index]+result.eachWalkingTime[index]+result.eachWaitingTime[index];\n        });\n\n        // 마지막 열차 막대 추가\n        const lastIndex = result.eachTypeOfLine.length - 1;\n        const lastGoBarWidth = (result.eachTime[lastIndex] !== 0 ? result.totalTime - tt: result.totalTime) / totalBarWidth * 1000;\n        const lastTotalWidth = lastGoBarWidth;\n        const lastAdjustedGoBarWidth = lastGoBarWidth / lastTotalWidth * (1000 - accumulatedWidth);\n        transferBars.push(\n            <div key={`go${lastIndex}`} style={{ display: 'inline-block', width: `${lastGoBarWidth}px`, height: '30px', backgroundColor: getLineColor(result.eachTypeOfLine[lastIndex]), position: 'relative', whiteSpace: 'nowrap', overflow: 'visible' }}>\n                <img src={train} alt=\"subway\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', maxWidth: `${lastAdjustedGoBarWidth}px`, maxHeight: '100%', width: 'auto', height: 'auto' }} />\n                <span style={{ position: 'absolute', left: '50%', bottom: '-20px', transform: 'translate(-50%, 0)', color: getLineColor(result.eachTypeOfLine[lastIndex]) }}>{Math.floor((result.totalTime - tt)/ 60)}분 {Math.floor(result.eachTime[lastIndex] % 60)}초-{result.eachTransferStation[result.eachTransferStation.length - 1]}({result.eachTypeOfLine[result.eachTypeOfLine.length - 1]})</span>\n            </div>\n        );\n        console.log(lastGoBarWidth);\n        return transferBars;\n    };\n    const getLineColor = (line) => {\n        const lineColors = {\n            '1호선': '#0d3692',\n            '2호선': '#33a23d',\n            '3호선': '#fe5d10',\n            '4호선': '#00a2d1',\n            '5호선': '#8b50a4',\n            '6호선': '#c55c1d',\n            '7호선': '#54640d',\n            '8호선': '#f14c82',\n        };\n        return lineColors[line] || '#000'; // 기본 색상은 검정색\n    };\n\n\n\n\n    return (\n        <Main title=\"실시간 길찾기\" description=\"실시간 길찾기 페이지\">\n            <div className=\"resultsContainer\">\n                <h1 className=\"resultsHeader\">출발지/도착지</h1>\n                {startStation && <p className=\"resultItem\">출발지: {startStation}</p>}\n                {endStation && <p className=\"resultItem\">도착지: {endStation}</p>}\n                {!startStation && <p className=\"resultItem\">출발지 정보가 없습니다.</p>}\n                {!endStation && <p className=\"resultItem\">도착지 정보가 없습니다.</p>}\n            </div>\n            {renderResults()}\n        </Main>\n    );\n};\n\nexport default Nav;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}