{"version":3,"file":"static/js/570.a885d6d2.chunk.js","mappings":"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","sources":["pages/Routemap.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as d3 from 'd3';\nimport subwayData from '../data/route.json';\nimport Main from '../components/section/Main';\nimport mark from '../assets/img/icon/환승역_마크.png';\nimport { IoSearch } from \"react-icons/io5\";\nimport { setStartStation, setEndStation } from '../data/actions';\nimport Right from '../components/section/Right'; // 추가\n\nconst Routemap = () => {\n    const ref = useRef();\n    const dispatch = useDispatch();\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isSearching, setIsSearching] = useState(false);\n    const [departureStation, setDepartureStation] = useState(null);\n    const [arrivalStation, setArrivalStation] = useState(null);\n    const [isRightVisible, setIsRightVisible] = useState(false); // 추가\n    const [stationName, setStationName] = useState(null);\n    const [suggestions, setSuggestions] = useState([]); // Define suggestions state\n\n    // 제안 항목 클릭 처리 함수\n    const handleSuggestionItemClick = (suggestion) => {\n        // '-' 포함 여부 확인하고 이후 문자열 제거\n        const sanitizedSuggestion = suggestion.includes('-') ? suggestion.split('-')[0].trim() : suggestion;\n        setSearchTerm(sanitizedSuggestion); // 정제된 제안을 검색어로 설정\n        setSuggestions([]); // 제안 목록 초기화\n    };\n\n    // Function to handle search term change\n    const handleSearchTermChange = (e) => {\n        const value = e.target.value;\n        setSearchTerm(value); // Update search term state\n\n        // Filter subway stations based on the search term\n        const filteredStations = subwayData.filter(station => station.name.includes(value)).slice(0, 3); // Slice the array to get only the first 3 elements\n        setSuggestions(filteredStations.map(station => `${station.name} - ${station.line}`));\n    };\n\n    const toggleRightVisibility = (name = null) => {\n        setIsRightVisible(!isRightVisible);\n        setStationName(name);\n    };\n\n    useEffect(() => {\n        const svg = d3.select(ref.current)\n            .on(\"click\", () => {\n                d3.select(\".tooltip\").remove();\n            }, true)\n            .attr('width', 1500)\n            .attr('height', 1800);\n        svg.selectAll(\"*\").remove();\n\n        const svgContainer = svg.append(\"g\")\n            .attr(\"id\", \"svg-container\");\n\n        // 줌 기능 추가\n        const zoom = d3.zoom()\n            .scaleExtent([0.5, 5]) // 줌 범위 설정\n            .on('zoom', (event) => {\n                svgContainer.attr('transform', event.transform);\n            });\n\n        svg.call(zoom);\n\n        // 스케일 설정\n        const xScale = d3.scaleLinear()\n            .domain(d3.extent(subwayData, d => parseFloat(d.x)))\n            .range([0, 500]);\n\n        const yScale = d3.scaleLinear()\n            .domain(d3.extent(subwayData, d => parseFloat(d.y)))\n            .range([500, 0]);\n\n        // 노선별 색상 설정\n        const lineColor = (line) => {\n            if (line === \"1호선\") return \"#0D3692\";\n            if (line === \"1호선1\") return \"#0D3692\";\n            if (line === \"2호선\") return \"#33A23D\";\n            if (line === \"2호선1\") return \"#33A23D\";\n            if (line === \"2호선2\") return \"#33A23D\";\n            if (line === \"3호선\") return \"#FE5B10\";\n            if (line === \"4호선\") return \"#00A2D1\";\n            if (line === \"5호선\") return \"#8B50A4\";\n            if (line === \"5호선1\") return \"#8B50A4\";\n            if (line === \"6호선\") return \"#C55C1D\";\n            if (line === \"6호선1\") return \"#C55C1D\";\n            if (line === \"7호선\") return \"#54640D\";\n            if (line === \"8호선\") return \"#F14C82\";\n            if (line === \"9호선\") return \"#AA9872\";\n            if (line === \"수인분당선\") return \"#FFEB2A\";\n            if (line === \"경의중앙선\") return \"#72C7A6\";\n            if (line === \"경의중앙선1\") return \"#72C7A6\";\n            if (line === \"경춘선\") return \"#2ABFD0\";\n            if (line === \"공항철도1호선\") return \"#0065B3\";\n            if (line === \"신림선\") return \"#6789CA\";\n            if (line === \"우이신설선\") return \"#B7C452\";\n            if (line === \"김포골드라인\") return \"#AD8605\";\n            return \"black\"; // 기본 색상\n        };\n\n        // 데이터를 라인별로 그룹화\n        const groupedData = d3.group(subwayData, d => d.line);\n\n        // 각 그룹(라인)을 순회하고 선과 원을 그립니다\n        for (const [line, lineData] of groupedData) {\n            const lineGenerator = d3.line()\n                .x(d => xScale(parseFloat(d.x)) * 4)\n                .y(d => yScale(parseFloat(d.y)) * 3.7 - 200)\n                .curve(d3.curveLinear);\n\n            svgContainer.append(\"path\")\n                .datum(lineData)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", lineColor(line))\n                .attr(\"stroke-width\", 7)\n                .attr(\"d\", lineGenerator);\n\n            // 각 라인에 대한 원(역) 추가\n            svgContainer.selectAll(`.station-${line}`) // 라인별로 클래스를 구분하여 선택\n                .data(lineData)\n                .enter()\n                .append(\"circle\")\n                .attr(\"class\", `station station-${line}`) // 라인별 클래스 추가\n                .attr(\"cx\", d => xScale(parseFloat(d.x)) * 4) // x 좌표에 3을 곱하여 3배로 확장\n                .attr(\"cy\", d => yScale(parseFloat(d.y)) * 3.7 - 200) // y 좌표에 3을 곱하여 3배로 확장\n                .attr(\"r\", 10)\n                .attr(\"fill\", d => lineColor(line)) // 동그라미의 색상을 라인의 색상에 따라 설정\n                .attr(\"stroke\", lineColor(line))\n                .attr(\"stroke-width\", 1)\n                .on(\"click\", function (event, d) {\n                    event.stopPropagation(); // 이벤트 버블링 방지\n                    const [clickX, clickY] = d3.pointer(event, svg.node());\n                    showTooltip(d, clickX, clickY);\n                });\n        }\n\n        // 중복된 역을 찾아 환승 역 이미지를 추가합니다.\n        const transferStationsData = subwayData.filter((d, i) => {\n            return subwayData.findIndex(e => e.name === d.name && e.line[0] !== d.line[0]) !== -1;\n        });\n\n        // 환승역 이미지를 추가합니다.\n        const transferStations = svgContainer.selectAll(\".transfer-station\")\n            .data(transferStationsData)\n            .enter()\n            .append(\"image\")\n            .attr(\"class\", \"transfer-station\")\n            .attr(\"xlink:href\", mark) // 환승역 이미지 파일 경로로 수정해주세요\n            .attr(\"width\", 20)\n            .attr(\"height\", 20)\n            .attr(\"x\", d => xScale(parseFloat(d.x)) * 4-10) // 이미지 중심을 원점으로 설정하기 위해 가로폭의 절반만큼 왼쪽으로 이동\n            .attr(\"y\", d => yScale(parseFloat(d.y)) * 3.7 -200-10); // 이미지 중심을 원점으로 설정하기 위해 세로폭의 절반만큼 위쪽으로 이동\n\n        // 이미지 위에 툴팁을 표시할 수 있도록 설정합니다.\n        transferStations.on(\"click\", function (event, d) {\n            const [clickX, clickY] = d3.pointer(event, svg.node());\n            showTooltip(d, clickX, clickY);\n\n            // 다른 곳을 클릭했을 때 툴팁을 제거합니다.\n            d3.select(\"body\").on(\"click.tooltip\", function () {\n                d3.select(\".tooltip\").remove();\n                d3.select(\"body\").on(\"click.tooltip\", null); // 이벤트 핸들러를 제거하여 메모리 누수를 방지합니다.\n            });\n        });\n\n        // 각 역 이름 추가\n        svgContainer.selectAll(\".station-name\")\n            .data(subwayData)\n            .enter()\n            .append(\"text\")\n            .attr(\"class\", \"station-name\")\n            .attr(\"x\", d => xScale(parseFloat(d.x)) * 4) // 역 이름에도 2를 곱하여 2배로 확장\n            .attr(\"y\", d => yScale(parseFloat(d.y)) * 3.7 - 200 + 30) // 역 이름에도 2를 곱하여 2배로 확장\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"18px\")\n            .attr(\"fill\", \"black\")\n            .attr(\"font-weight\", \"bold\") // 굵은 텍스트 설정\n            .text(d => d.name);\n\n        // 말풍선 표시 함수\n        const showTooltip = (data, clickX, clickY) => {\n            d3.select(\".tooltip\").remove(); // 기존 툴팁 제거\n\n            const tooltip = svg.append(\"g\")\n                .attr(\"class\", \"tooltip\")\n                .attr(\"transform\", `translate(${clickX - 120}, ${clickY - 120})`);\n\n            tooltip.append(\"rect\")\n                .attr(\"width\", 600)\n                .attr(\"height\", 200) // Increased height to accommodate the new button\n                .attr(\"x\", -140)\n                .attr(\"y\", 0)\n                .attr(\"fill\", \"white\")\n                .attr(\"stroke\", \"black\");\n\n            tooltip.append(\"text\")\n                .attr(\"x\", 150)\n                .attr(\"y\", 60)\n                .attr(\"font-size\", \"30px\") // 텍스트 크기 증가\n                .attr(\"text-anchor\", \"middle\")\n                .text(data.name);\n\n            // 버튼 데이터 배열\n            const buttons = [\n                { text: '출발', x: -70, y: 120, color: '#90ee90' }, // Green color for 출발 button\n                { text: '도착', x: 60, y: 120, color: '#f0f0f0' },   // Gray color for 도착 button\n                { text: '실시간 도착정보', x: 190, y: 120, color: '#ff6347', width: 280, newx: 285 } // Red color for 실시간 도착정보 button\n            ];\n\n            // 버튼 생성\n            buttons.forEach(button => {\n                // 버튼 배경\n                tooltip.append(\"rect\")\n                    .attr(\"x\", button.x - 45)\n                    .attr(\"y\", button.y - 30)\n                    .attr(\"width\", button.width || 100)\n                    .attr(\"height\", 60)\n                    .attr(\"fill\", button.color)\n                    .attr(\"rx\", 5) // 둥근 모서리\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", () => {\n                        if (button.text === \"닫기\") {\n                            tooltip.remove();\n                        } else {\n                            if (button.text === \"출발\") {\n                                setDepartureStation(data.name);\n                                dispatch(setStartStation(data.name)); // Redux store 업데이트\n                            } else if (button.text === \"도착\") {\n                                setArrivalStation(data.name);\n                                dispatch(setEndStation(data.name)); // Redux store 업데이트\n                            } else if (button.text === \"실시간 도착정보\") {\n                                toggleRightVisibility(data.name);\n                            }\n                        }\n                    });\n\n                // 버튼 텍스트\n                tooltip.append(\"text\")\n                    .attr(\"x\", button.newx || button.x)\n                    .attr(\"y\", button.y)\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"alignment-baseline\", \"middle\")\n                    .attr(\"font-size\", \"18px\") // 텍스트 크기 증가\n                    .text(button.text)\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", () => {\n                        if (button.text === \"닫기\") {\n                            tooltip.remove();\n                        } else {\n                        }\n                    });\n            });\n        };\n\n        // 검색어 처리 로직\n        if (isSearching && searchTerm.trim() !== '') {\n            const searchedStation = subwayData.find(station => station.name.includes(searchTerm.trim()));\n            if (searchedStation) {\n                // 검색된 역의 위치에 말풍선 표시\n                const [searchedX, searchedY] = [xScale(parseFloat(searchedStation.x)) * 4, yScale(parseFloat(searchedStation.y)) * 3.7 - 200];\n                showTooltip(searchedStation, searchedX, searchedY);\n            }\n        }\n\n    }, [isSearching, searchTerm, dispatch]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setIsSearching(true);\n    };\n\n    return (\n        <Main\n            title=\"지하철 노선도\"\n            description=\"지하철 노선도 페이지\"\n            departureStation={departureStation}\n            arrivalStation={arrivalStation}\n        >\n            <div className=\"search-container\">\n                <div className=\"search-form\">\n                    <form onSubmit={handleSearch}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"지하철역 검색\"\n                            value={searchTerm}\n                            onChange={handleSearchTermChange} /*{(e) => setSearchTerm(e.target.value)}*/\n                        />\n                        <button type=\"submit\"> <IoSearch size={20} /> </button>\n                    </form>\n                    {suggestions.length > 0 && (\n                        <ul className=\"suggestions\">\n                            {suggestions.map((suggestion, index) => (\n                                <li key={index} onClick={() => handleSuggestionItemClick(suggestion)}>{suggestion}</li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n            <div\n                id=\"picture\"\n                style={{\n                    width: '100%',\n                    height: 'calc(100vh - 60px)',\n                    overflow: 'auto', // 스크롤 추가\n                    position: 'relative'\n                }}\n            >\n                <svg\n                    ref={ref}\n                    viewBox=\"0 -300 1500 1800\"\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        top: 0,\n                        left: 0\n                    }}\n                ></svg>\n            </div>\n            {isRightVisible && <Right isVisible={isRightVisible} toggleRightVisibility={toggleRightVisibility} stationName={stationName} />} {/* Right 컴포넌트 렌더링 */}\n        </Main>\n    );\n};\n\nexport default Routemap;\n"],"names":["ref","useRef","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","isSearching","setIsSearching","_useState5","_useState6","departureStation","setDepartureStation","_useState7","_useState8","arrivalStation","setArrivalStation","_useState9","_useState10","isRightVisible","setIsRightVisible","_useState11","_useState12","stationName","setStationName","_useState13","_useState14","suggestions","setSuggestions","toggleRightVisibility","name","arguments","length","undefined","useEffect","svg","d3","current","on","remove","attr","selectAll","svgContainer","append","zoom","scaleExtent","event","transform","call","_step","xScale","domain","subwayData","d","parseFloat","x","range","yScale","y","lineColor","line","groupedData","_iterator","_createForOfIteratorHelper","_loop","_step$value","value","lineData","lineGenerator","curve","datum","concat","data","enter","stopPropagation","_d3$pointer3","node","_d3$pointer4","clickX","clickY","showTooltip","s","n","done","err","e","f","transferStationsData","filter","i","findIndex","mark","_d3$pointer","_d3$pointer2","text","tooltip","color","width","newx","forEach","button","style","setStartStation","setEndStation","trim","searchedStation","find","station","includes","searchedX","searchedY","_jsxs","Main","title","description","children","_jsx","className","onSubmit","preventDefault","type","placeholder","onChange","target","filteredStations","slice","map","IoSearch","size","suggestion","index","onClick","sanitizedSuggestion","split","handleSuggestionItemClick","id","height","overflow","position","viewBox","top","left","Right","isVisible"],"sourceRoot":""}